// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`clients > tenderly > should correctly simulate long proposals 1`] = `
{
  "contracts": [
    {
      "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
      "balance": "",
      "child_contracts": [
        {
          "address": "0xe2e8badc5d50f8a6188577b89f50701cde2d4e19",
          "id": "eth:1:0xe2e8badc5d50f8a6188577b89f50701cde2d4e19",
          "network_id": "1",
        },
      ],
      "compiler_version": "v0.6.12+commit.27d51765",
      "contract_id": "eth:1:0x4da27a545c0c5b758a6ba100e3a049001de870f5",
      "contract_name": "InitializableAdminUpgradeabilityProxy",
      "created_at": "2020-09-24T18:45:31Z",
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "data": {
        "abi": [
          {
            "anonymous": false,
            "constant": false,
            "inputs": null,
            "name": "",
            "outputs": null,
            "stateMutability": "",
            "type": "constructor",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "REWARD_TOKEN",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "UNSTAKE_WINDOW",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "EIP712_REVISION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "staker",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "getTotalRewardsBalance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "stakersCooldowns",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "COOLDOWN_SECONDS",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "addedValue",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "implementation",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "STAKED_TOKEN",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "asset",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "getUserAssetData",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "to",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "claimRewards",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "_nonces",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "_votingSnapshots",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint128",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "assets",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "emissionPerSecond",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "lastUpdateTimestamp",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "index",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newImplementation",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getDelegateeByType",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "_logic",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "_data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "delegateByType",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "subtractedValue",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DELEGATE_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "_votingSnapshotsCounts",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "PRECISION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newImplementation",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "upgradeTo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "allowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "REVISION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "tokens",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "address[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amounts",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "uint",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "uint256[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "aaveMerkleDistributor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "deadline",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "account",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "EMISSION_MANAGER",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "changeAdmin",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "fromCooldownTimestamp",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amountToReceive",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "toAddress",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "toBalance",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getNextCooldownTimestamp",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "approve",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "_aaveGovernance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "totalSupplyAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "stakerRewardsToClaim",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getPowerAtBlock",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "delegate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "admin",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "REWARDS_VAULT",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "onBehalfOf",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "stake",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "recipient",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "transfer",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DELEGATE_BY_TYPE_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": [
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "emissionPerSecond",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint128",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "totalStaked",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint256",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "underlyingAsset",
                    "offset": 0,
                    "simple_type": {
                      "type": "address",
                    },
                    "storage_location": "default",
                    "type": "address",
                  },
                ],
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "assetsConfigInput",
                "offset": 0,
                "simple_type": {
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "tuple[]",
              },
            ],
            "name": "configureAssets",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "sender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "recipient",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "to",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "redeem",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getPowerCurrent",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "nonce",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "expiry",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "delegateByTypeBySig",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "cooldown",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DISTRIBUTION_END",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "nonce",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "expiry",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "delegateBySig",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "implementation",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "Upgraded",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "asset",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "index",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "UserIndexUpdated",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "tokenRescued",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "aaveMerkleDistributor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amountRescued",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "TokensRescued",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "from",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "to",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "Transfer",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "DelegatedPowerChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "asset",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "emission",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "AssetConfigUpdated",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "from",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "to",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "Redeem",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "Approval",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "previousAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "AdminChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "Cooldown",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "from",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "onBehalfOf",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "Staked",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "RewardsAccrued",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "asset",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "index",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "AssetIndexUpdated",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "delegator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "DelegateChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "from",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "to",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "RewardsClaimed",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
        ],
        "contract_info": [
          {
            "id": 0,
            "name": "Address.sol",
            "path": "contracts/lib/Address.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

/**
 * @dev Collection of functions related to the address type
 * From https://github.com/OpenZeppelin/openzeppelin-contracts
 */
library Address {
    /**
     * @dev Returns true if \`account\` is a contract.
     *
     * [IMPORTANT]
     * ====
     * It is unsafe to assume that an address for which this function returns
     * false is an externally-owned account (EOA) and not a contract.
     *
     * Among others, \`isContract\` will return false for the following
     * types of addresses:
     *
     *  - an externally-owned account
     *  - a contract in construction
     *  - an address where a contract will be created
     *  - an address where a contract lived, but was destroyed
     * ====
     */
    function isContract(address account) internal view returns (bool) {
        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts
        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned
        // for accounts without code, i.e. \`keccak256('')\`
        bytes32 codehash;
        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;
        // solhint-disable-next-line no-inline-assembly
        assembly {
            codehash := extcodehash(account)
        }
        return (codehash != accountHash && codehash != 0x0);
    }

    /**
     * @dev Replacement for Solidity's \`transfer\`: sends \`amount\` wei to
     * \`recipient\`, forwarding all available gas and reverting on errors.
     *
     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost
     * of certain opcodes, possibly making contracts go over the 2300 gas limit
     * imposed by \`transfer\`, making them unable to receive funds via
     * \`transfer\`. {sendValue} removes this limitation.
     *
     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].
     *
     * IMPORTANT: because control is transferred to \`recipient\`, care must be
     * taken to not create reentrancy vulnerabilities. Consider using
     * {ReentrancyGuard} or the
     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].
     */
    function sendValue(address payable recipient, uint256 amount) internal {
        require(address(this).balance >= amount, 'Address: insufficient balance');

        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value
        (bool success, ) = recipient.call{value: amount}('');
        require(success, 'Address: unable to send value, recipient may have reverted');
    }
}
",
          },
          {
            "id": 1,
            "name": "BaseAdminUpgradeabilityProxy.sol",
            "path": "contracts/lib/BaseAdminUpgradeabilityProxy.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

import './UpgradeabilityProxy.sol';

/**
 * @title BaseAdminUpgradeabilityProxy
 * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability 
 * This contract combines an upgradeability proxy with an authorization
 * mechanism for administrative tasks.
 * All external functions in this contract must be guarded by the
 * \`ifAdmin\` modifier. See ethereum/solidity#3864 for a Solidity
 * feature proposal that would enable this to be done automatically.
 */
contract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {
    /**
     * @dev Emitted when the administration has been transferred.
     * @param previousAdmin Address of the previous admin.
     * @param newAdmin Address of the new admin.
     */
    event AdminChanged(address previousAdmin, address newAdmin);

    /**
     * @dev Storage slot with the admin of the contract.
     * This is the keccak-256 hash of \\"eip1967.proxy.admin\\" subtracted by 1, and is
     * validated in the constructor.
     */

    bytes32
        internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;

    /**
     * @dev Modifier to check whether the \`msg.sender\` is the admin.
     * If it is, it will run the function. Otherwise, it will delegate the call
     * to the implementation.
     */
    modifier ifAdmin() {
        if (msg.sender == _admin()) {
            _;
        } else {
            _fallback();
        }
    }

    /**
     * @return The address of the proxy admin.
     */
    function admin() external ifAdmin returns (address) {
        return _admin();
    }

    /**
     * @return The address of the implementation.
     */
    function implementation() external ifAdmin returns (address) {
        return _implementation();
    }

    /**
     * @dev Changes the admin of the proxy.
     * Only the current admin can call this function.
     * @param newAdmin Address to transfer proxy administration to.
     */
    function changeAdmin(address newAdmin) external ifAdmin {
        require(newAdmin != address(0), 'Cannot change the admin of a proxy to the zero address');
        emit AdminChanged(_admin(), newAdmin);
        _setAdmin(newAdmin);
    }

    /**
     * @dev Upgrade the backing implementation of the proxy.
     * Only the admin can call this function.
     * @param newImplementation Address of the new implementation.
     */
    function upgradeTo(address newImplementation) external ifAdmin {
        _upgradeTo(newImplementation);
    }

    /**
     * @dev Upgrade the backing implementation of the proxy and call a function
     * on the new implementation.
     * This is useful to initialize the proxied contract.
     * @param newImplementation Address of the new implementation.
     * @param data Data to send as msg.data in the low level call.
     * It should include the signature and the parameters of the function to be called, as described in
     * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
     */
    function upgradeToAndCall(address newImplementation, bytes calldata data)
        external
        payable
        ifAdmin
    {
        _upgradeTo(newImplementation);
        (bool success, ) = newImplementation.delegatecall(data);
        require(success);
    }

    /**
     * @return adm The admin slot.
     */
    function _admin() internal view returns (address adm) {
        bytes32 slot = ADMIN_SLOT;
        assembly {
            adm := sload(slot)
        }
    }

    /**
     * @dev Sets the address of the proxy admin.
     * @param newAdmin Address of the new proxy admin.
     */
    function _setAdmin(address newAdmin) internal {
        bytes32 slot = ADMIN_SLOT;

        assembly {
            sstore(slot, newAdmin)
        }
    }

    /**
     * @dev Only fall back when the sender is not the admin.
     */
    function _willFallback() internal virtual override {
        require(msg.sender != _admin(), 'Cannot call fallback function from the proxy admin');
        super._willFallback();
    }
}
",
          },
          {
            "id": 2,
            "name": "BaseUpgradeabilityProxy.sol",
            "path": "contracts/lib/BaseUpgradeabilityProxy.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

import './Proxy.sol';
import './Address.sol';

/**
 * @title BaseUpgradeabilityProxy
 * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability
 * This contract implements a proxy that allows to change the
 * implementation address to which it will delegate.
 * Such a change is called an implementation upgrade.
 */
contract BaseUpgradeabilityProxy is Proxy {
    /**
     * @dev Emitted when the implementation is upgraded.
     * @param implementation Address of the new implementation.
     */
    event Upgraded(address indexed implementation);

    /**
     * @dev Storage slot with the address of the current implementation.
     * This is the keccak-256 hash of \\"eip1967.proxy.implementation\\" subtracted by 1, and is
     * validated in the constructor.
     */
    bytes32
        internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;

    /**
     * @dev Returns the current implementation.
     * @return impl Address of the current implementation
     */
    function _implementation() internal override view returns (address impl) {
        bytes32 slot = IMPLEMENTATION_SLOT;
        assembly {
            impl := sload(slot)
        }
    }

    /**
     * @dev Upgrades the proxy to a new implementation.
     * @param newImplementation Address of the new implementation.
     */
    function _upgradeTo(address newImplementation) internal {
        _setImplementation(newImplementation);
        emit Upgraded(newImplementation);
    }

    /**
     * @dev Sets the implementation address of the proxy.
     * @param newImplementation Address of the new implementation.
     */
    function _setImplementation(address newImplementation) internal {
        require(
            Address.isContract(newImplementation),
            'Cannot set a proxy implementation to a non-contract address'
        );

        bytes32 slot = IMPLEMENTATION_SLOT;

        assembly {
            sstore(slot, newImplementation)
        }
    }
}
",
          },
          {
            "id": 3,
            "name": "InitializableAdminUpgradeabilityProxy.sol",
            "path": "contracts/lib/InitializableAdminUpgradeabilityProxy.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

import './BaseAdminUpgradeabilityProxy.sol';
import './InitializableUpgradeabilityProxy.sol';

/**
 * @title InitializableAdminUpgradeabilityProxy
 * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability 
 * Extends from BaseAdminUpgradeabilityProxy with an initializer for
 * initializing the implementation, admin, and init data.
 */
contract InitializableAdminUpgradeabilityProxy is
    BaseAdminUpgradeabilityProxy,
    InitializableUpgradeabilityProxy
{
    /**
     * Contract initializer.
     * @param _logic address of the initial implementation.
     * @param _admin Address of the proxy administrator.
     * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
     * It should include the signature and the parameters of the function to be called, as described in
     * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
     * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
     */
    function initialize(
        address _logic,
        address _admin,
        bytes memory _data
    ) public payable {
        require(_implementation() == address(0));
        InitializableUpgradeabilityProxy.initialize(_logic, _data);
        assert(ADMIN_SLOT == bytes32(uint256(keccak256('eip1967.proxy.admin')) - 1));
        _setAdmin(_admin);
    }

    /**
     * @dev Only fall back when the sender is not the admin.
     */
    function _willFallback() internal override(BaseAdminUpgradeabilityProxy, Proxy) {
        BaseAdminUpgradeabilityProxy._willFallback();
    }
}
",
          },
          {
            "id": 4,
            "name": "InitializableUpgradeabilityProxy.sol",
            "path": "contracts/lib/InitializableUpgradeabilityProxy.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

import './BaseUpgradeabilityProxy.sol';

/**
 * @title InitializableUpgradeabilityProxy
 * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability
 * Extends BaseUpgradeabilityProxy with an initializer for initializing
 * implementation and init data.
 */
contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {
    /**
     * @dev Contract initializer.
     * @param _logic Address of the initial implementation.
     * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
     * It should include the signature and the parameters of the function to be called, as described in
     * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
     * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
     */
    function initialize(address _logic, bytes memory _data) public payable {
        require(_implementation() == address(0));
        assert(
            IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)
        );
        _setImplementation(_logic);
        if (_data.length > 0) {
            (bool success, ) = _logic.delegatecall(_data);
            require(success);
        }
    }
}
",
          },
          {
            "id": 5,
            "name": "Proxy.sol",
            "path": "contracts/lib/Proxy.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

/**
 * @title Proxy
 * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability
 * Implements delegation of calls to other contracts, with proper
 * forwarding of return values and bubbling of failures.
 * It defines a fallback function that delegates all calls to the address
 * returned by the abstract _implementation() internal function.
 */
abstract contract Proxy {
    /**
     * @dev Fallback function.
     * Implemented entirely in \`_fallback\`.
     */
    fallback() external payable {
        _fallback();
    }

    /**
     * @return The Address of the implementation.
     */
    function _implementation() internal virtual view returns (address);

    /**
     * @dev Delegates execution to an implementation contract.
     * This is a low level function that doesn't return to its internal call site.
     * It will return to the external caller whatever the implementation returns.
     * @param implementation Address to delegate.
     */
    function _delegate(address implementation) internal {
        assembly {
            // Copy msg.data. We take full control of memory in this inline assembly
            // block because it will not return to Solidity code. We overwrite the
            // Solidity scratch pad at memory position 0.
            calldatacopy(0, 0, calldatasize())

            // Call the implementation.
            // out and outsize are 0 because we don't know the size yet.
            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)

            // Copy the returned data.
            returndatacopy(0, 0, returndatasize())

            switch result
                // delegatecall returns 0 on error.
                case 0 {
                    revert(0, returndatasize())
                }
                default {
                    return(0, returndatasize())
                }
        }
    }

    /**
     * @dev Function that is run as the first thing in the fallback function.
     * Can be redefined in derived contracts to add functionality.
     * Redefinitions must call super._willFallback().
     */
    function _willFallback() internal virtual {}

    /**
     * @dev fallback implementation.
     * Extracted to enable manual triggering.
     */
    function _fallback() internal {
        _willFallback();
        _delegate(_implementation());
    }
}
",
          },
          {
            "id": 6,
            "name": "UpgradeabilityProxy.sol",
            "path": "contracts/lib/UpgradeabilityProxy.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity 0.6.12;

import './BaseUpgradeabilityProxy.sol';

/**
 * @title UpgradeabilityProxy
 * @dev From https://github.com/OpenZeppelin/openzeppelin-sdk/tree/solc-0.6/packages/lib/contracts/upgradeability
 * Extends BaseUpgradeabilityProxy with a constructor for initializing
 * implementation and init data.
 */
contract UpgradeabilityProxy is BaseUpgradeabilityProxy {
    /**
     * @dev Contract constructor.
     * @param _logic Address of the initial implementation.
     * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
     * It should include the signature and the parameters of the function to be called, as described in
     * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
     * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
     */
    constructor(address _logic, bytes memory _data) public payable {
        assert(
            IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)
        );
        _setImplementation(_logic);
        if (_data.length > 0) {
            (bool success, ) = _logic.delegatecall(_data);
            require(success);
        }
    }
}
",
          },
        ],
        "main_contract": 3,
        "raw_abi": null,
        "states": [
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003d",
            "indexed": false,
            "name": "stakerRewardsToClaim",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003e",
            "indexed": false,
            "name": "stakersCooldowns",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "name": "_symbol",
            "offset": 0,
            "simple_type": {
              "type": "string",
            },
            "storage_location": "storage",
            "type": "string",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false,
            "name": "_decimals",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint8",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000009",
            "indexed": false,
            "name": "lastInitializedRevision",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "emissionPerSecond",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "lastUpdateTimestamp",
                "offset": 128,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
                "indexed": false,
                "name": "index",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
                "indexed": false,
                "name": "users",
                "offset": 0,
                "storage_location": "memory",
                "type": "mapping (address => uint256)",
              },
            ],
            "index": "0x000000000000000000000000000000000000000000000000000000000000003c",
            "indexed": false,
            "name": "assets",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (address => tuple)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000042",
            "indexed": false,
            "name": "_propositionPowerDelegates",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => address)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000043",
            "indexed": false,
            "name": "DOMAIN_SEPARATOR",
            "offset": 0,
            "simple_type": {
              "type": "bytes",
            },
            "storage_location": "storage",
            "type": "bytes32",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000044",
            "indexed": false,
            "name": "_nonces",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "name": "_allowances",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => mapping (address => uint256))",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false,
            "name": "_name",
            "offset": 0,
            "simple_type": {
              "type": "string",
            },
            "storage_location": "storage",
            "type": "string",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
            "indexed": false,
            "name": "______gap",
            "offset": 0,
            "simple_type": {
              "nested_type": {
                "type": "uint",
              },
              "type": "array",
            },
            "storage_location": "storage",
            "type": "uint256[50]",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false,
            "name": "_votingSnapshotsCounts",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 128,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
            ],
            "index": "0x0000000000000000000000000000000000000000000000000000000000000040",
            "indexed": false,
            "name": "_propositionPowerSnapshots",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (address => mapping (uint256 => tuple))",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000008",
            "indexed": false,
            "name": "_aaveGovernance",
            "offset": 0,
            "simple_type": {
              "type": "address",
            },
            "storage_location": "storage",
            "type": "address",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003f",
            "indexed": false,
            "name": "_votingDelegates",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => address)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "name": "_balances",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "name": "_totalSupply",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 128,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
            ],
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false,
            "name": "_votingSnapshots",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (address => mapping (uint256 => tuple))",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000041",
            "indexed": false,
            "name": "_propositionPowerSnapshotsCounts",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
        ],
      },
      "ens_domain": null,
      "evm_version": "",
      "export": false,
      "id": "eth:1:0x4da27a545c0c5b758a6ba100e3a049001de870f5",
      "in_project": false,
      "language": "solidity",
      "libraries": null,
      "network_id": "1",
      "number_of_files": 7,
      "number_of_watches": null,
      "optimization_runs": 200,
      "optimizations_used": true,
      "public": true,
      "standard": "eip1967",
      "standards": [
        "eip1967",
      ],
      "type": "contract",
      "verification_date": null,
      "verified_by": "etherscan",
    },
    {
      "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
      "balance": "",
      "compiler_version": "v0.8.14+commit.80d49f37",
      "contract_id": "eth:1:0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
      "contract_name": "Executor",
      "created_at": "2022-09-26T07:23:06Z",
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "data": {
        "abi": [
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "admin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delay",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "gracePeriod",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "minimumDelay",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "maximumDelay",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "propositionThreshold",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "voteDuration",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "voteDifferential",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "minimumQuorum",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "",
            "outputs": null,
            "stateMutability": "",
            "type": "constructor",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "ONE_HUNDRED_WITH_PRECISION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delay",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "setDelay",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "voteDifferential",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "updateVoteDifferential",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "getDelay",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governance",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "isVoteDifferentialValid",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governance",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getMinimumPropositionPowerNeeded",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governance",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "validateCreatorOfProposal",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "actionHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "isActionQueued",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "target",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signature",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecall",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "name": "queueTransaction",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "getPendingAdmin",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governance",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "isPropositionPowerEnough",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "propositionThreshold",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "updatePropositionThreshold",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "MAXIMUM_DELAY",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "VOTE_DIFFERENTIAL",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governance",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "isQuorumValid",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "getAdmin",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "target",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signature",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecall",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "name": "cancelTransaction",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "minimumQuorum",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "updateMinimumQuorum",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "MINIMUM_DELAY",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "GRACE_PERIOD",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "MINIMUM_QUORUM",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "PROPOSITION_THRESHOLD",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governance",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "isProposalOverGracePeriod",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governance",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "isProposalPassed",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "votingDuration",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "updateVotingDuration",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governance",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "validateProposalCancellation",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "acceptAdmin",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "target",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signature",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecall",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "name": "executeTransaction",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "stateMutability": "payable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "votingSupply",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getMinimumVotingPowerNeeded",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newPendingAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "setPendingAdmin",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "VOTING_DURATION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "NewAdmin",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newVoteDifferential",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "VoteDifferentialUpdated",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newVotingDuration",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "VotingDurationUpdated",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "actionHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "target",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signature",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecall",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "name": "CancelledAction",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "actionHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "target",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signature",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecall",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "resultData",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "name": "ExecutedAction",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newPendingAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "NewPendingAdmin",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newPropositionThreshold",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "PropositionThresholdUpdated",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newMinimumQuorum",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "MinimumQuorumUpdated",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "actionHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "target",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signature",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecall",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "name": "QueuedAction",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delay",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "NewDelay",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
        ],
        "contract_info": [
          {
            "id": 2,
            "name": "IExecutor.sol",
            "path": "src/contracts/interfaces/IExecutor.sol",
            "source": "pragma solidity ^0.8.0;

import {IAaveGovernanceV2} from './IAaveGovernanceV2.sol';

interface IExecutor {
  /**
  * -------------------------------------------------------------
  * --------------- IExecutorWithTimelock --------------------------
  * -------------------------------------------------------------
  */
  /**
   * @dev emitted when a new pending admin is set
   * @param newPendingAdmin address of the new pending admin
   **/
   event NewPendingAdmin(address newPendingAdmin);

   /**
    * @dev emitted when a new admin is set
    * @param newAdmin address of the new admin
    **/
   event NewAdmin(address newAdmin);
 
   /**
    * @dev emitted when a new delay (between queueing and execution) is set
    * @param delay new delay
    **/
   event NewDelay(uint256 delay);
 
   /**
    * @dev emitted when a new (trans)action is Queued.
    * @param actionHash hash of the action
    * @param target address of the targeted contract
    * @param value wei value of the transaction
    * @param signature function signature of the transaction
    * @param data function arguments of the transaction or callData if signature empty
    * @param executionTime time at which to execute the transaction
    * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
    **/
   event QueuedAction(
     bytes32 actionHash,
     address indexed target,
     uint256 value,
     string signature,
     bytes data,
     uint256 executionTime,
     bool withDelegatecall
   );
 
   /**
    * @dev emitted when an action is Cancelled
    * @param actionHash hash of the action
    * @param target address of the targeted contract
    * @param value wei value of the transaction
    * @param signature function signature of the transaction
    * @param data function arguments of the transaction or callData if signature empty
    * @param executionTime time at which to execute the transaction
    * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
    **/
   event CancelledAction(
     bytes32 actionHash,
     address indexed target,
     uint256 value,
     string signature,
     bytes data,
     uint256 executionTime,
     bool withDelegatecall
   );
 
   /**
    * @dev emitted when an action is Cancelled
    * @param actionHash hash of the action
    * @param target address of the targeted contract
    * @param value wei value of the transaction
    * @param signature function signature of the transaction
    * @param data function arguments of the transaction or callData if signature empty
    * @param executionTime time at which to execute the transaction
    * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
    * @param resultData the actual callData used on the target
    **/
   event ExecutedAction(
     bytes32 actionHash,
     address indexed target,
     uint256 value,
     string signature,
     bytes data,
     uint256 executionTime,
     bool withDelegatecall,
     bytes resultData
   );

   /**
    * @dev Getter of the current admin address (should be governance)
    * @return The address of the current admin 
    **/
   function getAdmin() external view returns (address);

   /**
    * @dev Getter of the current pending admin address
    * @return The address of the pending admin 
    **/
   function getPendingAdmin() external view returns (address);

   /**
    * @dev Getter of the delay between queuing and execution
    * @return The delay in seconds
    **/
   function getDelay() external view returns (uint256);

   /**
    * @dev Returns whether an action (via actionHash) is queued
    * @param actionHash hash of the action to be checked
    * keccak256(abi.encode(target, value, signature, data, executionTime, withDelegatecall))
    * @return true if underlying action of actionHash is queued
    **/
   function isActionQueued(bytes32 actionHash) external view returns (bool);

   /**
    * @dev Checks whether a proposal is over its grace period 
    * @param governance Governance contract
    * @param proposalId Id of the proposal against which to test
    * @return true of proposal is over grace period
    **/
   function isProposalOverGracePeriod(IAaveGovernanceV2 governance, uint256 proposalId)
     external
     view
     returns (bool);

   /**
    * @dev Getter of grace period constant
    * @return grace period in seconds
    **/
   function GRACE_PERIOD() external view returns (uint256);

   /**
    * @dev Getter of minimum delay constant
    * @return minimum delay in seconds
    **/
   function MINIMUM_DELAY() external view returns (uint256);

   /**
    * @dev Getter of maximum delay constant
    * @return maximum delay in seconds
    **/
   function MAXIMUM_DELAY() external view returns (uint256);

   /**
   * @dev Set the delay
   * @param delay time in seconds between queue and execution of proposal
   **/
  function setDelay(uint256 delay) external;

  /**
   * @dev Function enabling pending admin to become admin
   **/
   function acceptAdmin() external;

  /**
   * @dev Setting a new pending admin (that can then become admin)
   * Can only be called by this executor (i.e via proposal)
   * @param newPendingAdmin address of the new admin
   **/
  function setPendingAdmin(address newPendingAdmin) external;

   /**
    * @dev Function, called by Governance, that queue a transaction, returns action hash
    * @param target smart contract target
    * @param value wei value of the transaction
    * @param signature function signature of the transaction
    * @param data function arguments of the transaction or callData if signature empty
    * @param executionTime time at which to execute the transaction
    * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
    **/
   function queueTransaction(
     address target,
     uint256 value,
     string memory signature,
     bytes memory data,
     uint256 executionTime,
     bool withDelegatecall
   ) external returns (bytes32);
   /**
    * @dev Function, called by Governance, that cancels a transaction, returns the callData executed
    * @param target smart contract target
    * @param value wei value of the transaction
    * @param signature function signature of the transaction
    * @param data function arguments of the transaction or callData if signature empty
    * @param executionTime time at which to execute the transaction
    * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
    **/
   function executeTransaction(
     address target,
     uint256 value,
     string memory signature,
     bytes memory data,
     uint256 executionTime,
     bool withDelegatecall
   ) external payable returns (bytes memory);
   /**
    * @dev Function, called by Governance, that cancels a transaction, returns action hash
    * @param target smart contract target
    * @param value wei value of the transaction
    * @param signature function signature of the transaction
    * @param data function arguments of the transaction or callData if signature empty
    * @param executionTime time at which to execute the transaction
    * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
    **/
   function cancelTransaction(
     address target,
     uint256 value,
     string memory signature,
     bytes memory data,
     uint256 executionTime,
     bool withDelegatecall
   ) external returns (bytes32);

  /**
  * -------------------------------------------------------------
  * --------------- Proposal Validator --------------------------
  * -------------------------------------------------------------
  */
  // event triggered when voting duration gets updated by the admin
  event VotingDurationUpdated(uint256 newVotingDuration);
  // event triggered when vote differential gets updated by the admin
  event VoteDifferentialUpdated(uint256 newVoteDifferential);
  // event triggered when minimum quorum gets updated by the admin
  event MinimumQuorumUpdated(uint256 newMinimumQuorum);
  // event triggered when proposition threshold gets updated by the admin
  event PropositionThresholdUpdated(uint256 newPropositionThreshold);
  
  /**
  * @dev method tu update the voting duration of the proposal. Only callable by admin.
  * @param votingDuration duration of the vote, in blocks
  */
  function updateVotingDuration(uint256 votingDuration) external;

  /**
  * @dev method to update the vote differential needed to pass the proposal. Only callable by admin.
  * @param voteDifferential differential needed on the votes to pass the proposal
  */
  function updateVoteDifferential(uint256 voteDifferential) external;

  /**
  * @dev method to update the minimum quorum needed to pass the proposal. Only callable by admin.
  * @param minimumQuorum quorum needed to pass the proposal 
  */
  function updateMinimumQuorum(uint256 minimumQuorum) external;

  /**
    * @dev method to update the propositionThreshold. Only callable by admin.
    * @param propositionThreshold new proposition threshold
    **/
  function updatePropositionThreshold(uint256 propositionThreshold) external;

  /**
   * @dev Called to validate a proposal (e.g when creating new proposal in Governance)
   * @param governance Governance Contract
   * @param user Address of the proposal creator
   * @param blockNumber Block Number against which to make the test (e.g proposal creation block -1).
   * @return boolean, true if can be created
   **/
  function validateCreatorOfProposal(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) external view returns (bool);

  /**
   * @dev Called to validate the cancellation of a proposal
   * @param governance Governance Contract
   * @param user Address of the proposal creator
   * @param blockNumber Block Number against which to make the test (e.g proposal creation block -1).
   * @return boolean, true if can be cancelled
   **/
  function validateProposalCancellation(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) external view returns (bool);

  /**
   * @dev Returns whether a user has enough Proposition Power to make a proposal.
   * @param governance Governance Contract
   * @param user Address of the user to be challenged.
   * @param blockNumber Block Number against which to make the challenge.
   * @return true if user has enough power
   **/
  function isPropositionPowerEnough(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) external view returns (bool);

  /**
   * @dev Returns the minimum Proposition Power needed to create a proposition.
   * @param governance Governance Contract
   * @param blockNumber Blocknumber at which to evaluate
   * @return minimum Proposition Power needed
   **/
  function getMinimumPropositionPowerNeeded(IAaveGovernanceV2 governance, uint256 blockNumber)
    external
    view
    returns (uint256);

  /**
   * @dev Returns whether a proposal passed or not
   * @param governance Governance Contract
   * @param proposalId Id of the proposal to set
   * @return true if proposal passed
   **/
  function isProposalPassed(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool);

  /**
   * @dev Check whether a proposal has reached quorum, ie has enough FOR-voting-power
   * Here quorum is not to understand as number of votes reached, but number of for-votes reached
   * @param governance Governance Contract
   * @param proposalId Id of the proposal to verify
   * @return voting power needed for a proposal to pass
   **/
  function isQuorumValid(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool);

  /**
   * @dev Check whether a proposal has enough extra FOR-votes than AGAINST-votes
   * FOR VOTES - AGAINST VOTES > VOTE_DIFFERENTIAL * voting supply
   * @param governance Governance Contract
   * @param proposalId Id of the proposal to verify
   * @return true if enough For-Votes
   **/
  function isVoteDifferentialValid(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool);

  /**
   * @dev Calculates the minimum amount of Voting Power needed for a proposal to Pass
   * @param votingSupply Total number of oustanding voting tokens
   * @return voting power needed for a proposal to pass
   **/
  function getMinimumVotingPowerNeeded(uint256 votingSupply) external view returns (uint256);

  /**
   * @dev Get proposition threshold constant value
   * @return the proposition threshold value (100 <=> 1%)
   **/
  function PROPOSITION_THRESHOLD() external view returns (uint256);

  /**
   * @dev Get voting duration constant value
   * @return the voting duration value in blocks
   **/
  function VOTING_DURATION() external view returns (uint256);

  /**
   * @dev Get the vote differential threshold constant value
   * to compare with % of for votes/total supply - % of against votes/total supply
   * @return the vote differential threshold value (100 <=> 1%)
   **/
  function VOTE_DIFFERENTIAL() external view returns (uint256);

  /**
   * @dev Get quorum threshold constant value
   * to compare with % of for votes/total supply
   * @return the quorum threshold value (100 <=> 1%)
   **/
  function MINIMUM_QUORUM() external view returns (uint256);

  /**
   * @dev precision helper: 100% = 10000
   * @return one hundred percents with our chosen precision
   **/
  function ONE_HUNDRED_WITH_PRECISION() external view returns (uint256);
}
",
          },
          {
            "id": 3,
            "name": "IGovernanceStrategy.sol",
            "path": "src/contracts/interfaces/IGovernanceStrategy.sol",
            "source": "pragma solidity ^0.8.0;

interface IGovernanceStrategy {
  /**
   * @dev Returns the Proposition Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Proposition Power
   * @return Power number
   **/
  function getPropositionPowerAt(address user, uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the total supply of Outstanding Proposition Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalPropositionSupplyAt(uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the total supply of Outstanding Voting Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalVotingSupplyAt(uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the Vote Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Vote Power
   * @return Vote number
   **/
  function getVotingPowerAt(address user, uint256 blockNumber) external view returns (uint256);
}",
          },
          {
            "id": 0,
            "name": "Executor.sol",
            "path": "src/contracts/Executor.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity ^0.8.8;

import {IGovernanceStrategy} from './interfaces/IGovernanceStrategy.sol';
import {IAaveGovernanceV2} from './interfaces/IAaveGovernanceV2.sol';
import {IExecutor} from './interfaces/IExecutor.sol';


/**
 * @title Executor
 * @author BGD Labs
 * @notice Time Locked, Validator, Executor Contract that:
 * - Validates Proposal creations/ cancellation
 * - Validates Vote Quorum and Vote success on proposal
 * - Allows queueing, execution and cancellation of proposals' transactions.
 **/
contract Executor is IExecutor {
  address private _admin;
  address private _pendingAdmin;
  uint256 private _delay;

  // uppercase is kept even not being constant/immutables, 
  // in order to keep interface compatibility with a previous version of the Executor
  uint256 public PROPOSITION_THRESHOLD;
  uint256 public VOTING_DURATION;
  uint256 public VOTE_DIFFERENTIAL;
  uint256 public MINIMUM_QUORUM;

  mapping(bytes32 => bool) private _queuedTransactions;  

  uint256 public immutable GRACE_PERIOD;
  uint256 public immutable MINIMUM_DELAY;
  uint256 public immutable MAXIMUM_DELAY;
  uint256 public constant ONE_HUNDRED_WITH_PRECISION = 10000; // Equivalent to 100%, but scaled for precision

  /**
   * @dev Constructor
   * @param admin admin address, that can call the main functions, (Governance)
   * @param delay minimum time between queueing and execution of proposal, in seconds
   * @param gracePeriod time after \`delay\` while a proposal can be executed, in seconds
   * @param minimumDelay lower threshold of \`delay\`, in seconds
   * @param maximumDelay upper threshold of \`delay\`, in seconds
   * @param propositionThreshold minimum percentage of supply needed to submit a proposal
   * - In ONE_HUNDRED_WITH_PRECISION units
   * @param voteDuration duration in blocks of the voting period
   * @param voteDifferential percentage of supply that \`for\` votes need to be over \`against\`
   *   in order for the proposal to pass
   * - In ONE_HUNDRED_WITH_PRECISION units
   * @param minimumQuorum minimum percentage of the supply in FOR-voting-power need for a proposal to pass
   * - In ONE_HUNDRED_WITH_PRECISION units
   **/
  constructor(
    address admin,
    uint256 delay,
    uint256 gracePeriod,
    uint256 minimumDelay,
    uint256 maximumDelay,
    uint256 propositionThreshold,
    uint256 voteDuration,
    uint256 voteDifferential,
    uint256 minimumQuorum
  )  
  {
    require(delay >= minimumDelay, 'DELAY_SHORTER_THAN_MINIMUM');
    require(delay <= maximumDelay, 'DELAY_LONGER_THAN_MAXIMUM');
    _delay = delay;
    _admin = admin;

    require(gracePeriod > 0, 'GRACE_PERIOD_LESS_THAN_0');
    GRACE_PERIOD = gracePeriod;

    MINIMUM_DELAY = minimumDelay;
    MAXIMUM_DELAY = maximumDelay;

    emit NewDelay(delay);
    emit NewAdmin(admin);

    _updateVotingDuration(voteDuration);
    _updateVoteDifferential(voteDifferential);
    _updateMinimumQuorum(minimumQuorum);
    _updatePropositionThreshold(propositionThreshold);
  }

  /**
  * -------------------------------------------------------------
  * --------------- IExecutorWithTimelock -----------------------
  * @dev logic for queue, execute, cancel transactions voted by Governance
  * Queued transactions can be executed after a delay and until
  * Grace period is not over.
  * -------------------------------------------------------------
  */

  modifier onlyAdmin() {
    require(msg.sender == _admin, 'ONLY_BY_ADMIN');
    _;
  }

  modifier onlyPendingAdmin() {
    require(msg.sender == _pendingAdmin, 'ONLY_BY_PENDING_ADMIN');
    _;
  }

  modifier onlyExecutor {
    require(msg.sender == address(this), 'CALLER_NOT_EXECUTOR');
    _;
  }

  /// @inheritdoc IExecutor
  function setDelay(uint256 delay) external onlyExecutor {
    _validateDelay(delay);
    _delay = delay;

    emit NewDelay(delay);
  }

  /// @inheritdoc IExecutor
  function acceptAdmin() external onlyPendingAdmin {
    _admin = msg.sender;
    _pendingAdmin = address(0);

    emit NewAdmin(msg.sender);
  }

  /// @inheritdoc IExecutor
  function setPendingAdmin(address newPendingAdmin) external onlyExecutor {
    _pendingAdmin = newPendingAdmin;

    emit NewPendingAdmin(newPendingAdmin);
  }

  /// @inheritdoc IExecutor
  function queueTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external onlyAdmin returns (bytes32) {
    require(executionTime >= block.timestamp + _delay, 'EXECUTION_TIME_UNDERESTIMATED');

    bytes32 actionHash = keccak256(
      abi.encode(target, value, signature, data, executionTime, withDelegatecall)
    );
    _queuedTransactions[actionHash] = true;

    emit QueuedAction(actionHash, target, value, signature, data, executionTime, withDelegatecall);
    return actionHash;
  }

  /// @inheritdoc IExecutor
  function cancelTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external onlyAdmin returns (bytes32) {
    bytes32 actionHash = keccak256(
      abi.encode(target, value, signature, data, executionTime, withDelegatecall)
    );
    _queuedTransactions[actionHash] = false;

    emit CancelledAction(
      actionHash,
      target,
      value,
      signature,
      data,
      executionTime,
      withDelegatecall
    );
    return actionHash;
  }

  /// @inheritdoc IExecutor
  function executeTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external payable onlyAdmin returns (bytes memory) {
    bytes32 actionHash = keccak256(
      abi.encode(target, value, signature, data, executionTime, withDelegatecall)
    );
    require(_queuedTransactions[actionHash], 'ACTION_NOT_QUEUED');
    require(block.timestamp >= executionTime, 'TIMELOCK_NOT_FINISHED');
    require(block.timestamp <= executionTime + GRACE_PERIOD, 'GRACE_PERIOD_FINISHED');

    _queuedTransactions[actionHash] = false;

    bytes memory callData;

    if (bytes(signature).length == 0) {
      callData = data;
    } else {
      callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);
    }

    bool success;
    bytes memory resultData;
    if (withDelegatecall) {
      require(msg.value >= value, 'NOT_ENOUGH_MSG_VALUE');
      // solium-disable-next-line security/no-call-value
      (success, resultData) = target.delegatecall(callData);
    } else {
      // solium-disable-next-line security/no-call-value
      (success, resultData) = target.call{value: value}(callData);
    }

    require(success, 'FAILED_ACTION_EXECUTION');

    emit ExecutedAction(
      actionHash,
      target,
      value,
      signature,
      data,
      executionTime,
      withDelegatecall,
      resultData
    );

    return resultData;
  }

  /// @inheritdoc IExecutor
  function getAdmin() external view returns (address) {
    return _admin;
  }

  /// @inheritdoc IExecutor
  function getPendingAdmin() external view returns (address) {
    return _pendingAdmin;
  }

  /// @inheritdoc IExecutor
  function getDelay() external view returns (uint256) {
    return _delay;
  }

  /// @inheritdoc IExecutor
  function isActionQueued(bytes32 actionHash) external view returns (bool) {
    return _queuedTransactions[actionHash];
  }

  /// @inheritdoc IExecutor
  function isProposalOverGracePeriod(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool)
  {
    IAaveGovernanceV2.ProposalWithoutVotes memory proposal = governance.getProposalById(proposalId);

    return (block.timestamp > proposal.executionTime + GRACE_PERIOD);
  }

  receive() external payable {}

  /**
  * --------------------------------------------------------
  * ---------- Proposal Validation -------------------------
  * @dev Validates/Invalidations propositions state modifications.
  * Proposition Power functions: Validates proposition creations/ cancellation
  * Voting Power functions: Validates success of propositions.
  * --------------------------------------------------------
  */

  /// @inheritdoc IExecutor
  function updateVotingDuration(uint256 votingDuration) external onlyExecutor {
    _updateVotingDuration(votingDuration);
  }
  
  /// @inheritdoc IExecutor
  function updateVoteDifferential(uint256 voteDifferential) external onlyExecutor {
    _updateVoteDifferential(voteDifferential);
  }

  /// @inheritdoc IExecutor
  function updateMinimumQuorum(uint256 minimumQuorum) external onlyExecutor {
    _updateMinimumQuorum(minimumQuorum);
  }

  /// @inheritdoc IExecutor
  function updatePropositionThreshold(uint256 propositionThreshold) external onlyExecutor {
    _updatePropositionThreshold(propositionThreshold);
  }

  /// @inheritdoc IExecutor
  function validateCreatorOfProposal(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) external view returns (bool) {
    return isPropositionPowerEnough(governance, user, blockNumber);
  }

  /// @inheritdoc IExecutor
  function validateProposalCancellation(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) external view returns (bool) {
    return !isPropositionPowerEnough(governance, user, blockNumber);
  }

  /// @inheritdoc IExecutor
  function isPropositionPowerEnough(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) public view returns (bool) {
    IGovernanceStrategy currentGovernanceStrategy = IGovernanceStrategy(
      governance.getGovernanceStrategy()
    );
    return
      currentGovernanceStrategy.getPropositionPowerAt(user, blockNumber) >=
      getMinimumPropositionPowerNeeded(governance, blockNumber);
  }

  /// @inheritdoc IExecutor
  function getMinimumPropositionPowerNeeded(IAaveGovernanceV2 governance, uint256 blockNumber)
    public
    view
    returns (uint256)
  {
    IGovernanceStrategy currentGovernanceStrategy = IGovernanceStrategy(
      governance.getGovernanceStrategy()
    );
    return
      currentGovernanceStrategy
        .getTotalPropositionSupplyAt(blockNumber)
        * PROPOSITION_THRESHOLD
        / ONE_HUNDRED_WITH_PRECISION;
  }

  /// @inheritdoc IExecutor
  function isProposalPassed(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool)
  {
    return (isQuorumValid(governance, proposalId) &&
      isVoteDifferentialValid(governance, proposalId));
  }

  /// @inheritdoc IExecutor
  function getMinimumVotingPowerNeeded(uint256 votingSupply)
    public
    view
    returns (uint256)
  {
    return votingSupply * MINIMUM_QUORUM / ONE_HUNDRED_WITH_PRECISION;
  }

  /// @inheritdoc IExecutor
  function isQuorumValid(IAaveGovernanceV2 governance, uint256 proposalId)
    public
    view
    returns (bool)
  {
    IAaveGovernanceV2.ProposalWithoutVotes memory proposal = governance.getProposalById(proposalId);
    uint256 votingSupply = IGovernanceStrategy(proposal.strategy).getTotalVotingSupplyAt(
      proposal.startBlock
    );

    return proposal.forVotes >= getMinimumVotingPowerNeeded(votingSupply);
  }

  /// @inheritdoc IExecutor
  function isVoteDifferentialValid(IAaveGovernanceV2 governance, uint256 proposalId)
    public
    view
    returns (bool)
  {
    IAaveGovernanceV2.ProposalWithoutVotes memory proposal = governance.getProposalById(proposalId);
    uint256 votingSupply = IGovernanceStrategy(proposal.strategy).getTotalVotingSupplyAt(
      proposal.startBlock
    );

    return (proposal.forVotes * ONE_HUNDRED_WITH_PRECISION / votingSupply) >
      ((proposal.againstVotes * ONE_HUNDRED_WITH_PRECISION / votingSupply) +
        VOTE_DIFFERENTIAL);
  }

  /// updates voting duration
  function _updateVotingDuration(uint256 votingDuration) internal {
    require(votingDuration > 0, 'VOTING_DURATION_CAN_NOT_BE_0');
    VOTING_DURATION = votingDuration;
    emit VotingDurationUpdated(votingDuration);
  }

  /// updates vote differential
  function _updateVoteDifferential(uint256 voteDifferential) internal {
    require(voteDifferential <= ONE_HUNDRED_WITH_PRECISION, 'VOTE_DIFFERENTIAL_CAN_NOT_BE_GREATER_THAN_100%');
    require(voteDifferential > 0, 'VOTE_DIFFERENTIAL_CAN_NOT_BE_LESS_THAN_0');
    VOTE_DIFFERENTIAL = voteDifferential;
    emit VoteDifferentialUpdated(voteDifferential);
  }

  /// updates minimum quorum
  function _updateMinimumQuorum(uint256 minimumQuorum) internal {
    require(minimumQuorum <= ONE_HUNDRED_WITH_PRECISION, 'MINIMUM_QUORUM_CAN_NOT_BE_GREATER_THAN_100%');
    require(minimumQuorum > 0, 'MINIMUM_QUORUM_CAN_NOT_BE_LESS_THAN_0');
    MINIMUM_QUORUM = minimumQuorum;
    emit MinimumQuorumUpdated(minimumQuorum);
  }

  /// updates proposition threshold
  function _updatePropositionThreshold(uint256 propositionThreshold) internal {
    require(propositionThreshold <= ONE_HUNDRED_WITH_PRECISION, 'PROPOSITION_THRESHOLD_CAN_NOT_BE_GREATER_THAN_100%');
    require(propositionThreshold > 0, 'PROPOSITION_THRESHOLD_CAN_NOT_BE_LESS_THAN_0');
    PROPOSITION_THRESHOLD = propositionThreshold;
    emit PropositionThresholdUpdated(propositionThreshold);
  }

  /// validates that a delay is correct
  function _validateDelay(uint256 delay) internal view {
    require(delay >= MINIMUM_DELAY, 'DELAY_SHORTER_THAN_MINIMUM');
    require(delay <= MAXIMUM_DELAY, 'DELAY_LONGER_THAN_MAXIMUM');
  }
}",
          },
          {
            "id": 1,
            "name": "IAaveGovernanceV2.sol",
            "path": "src/contracts/interfaces/IAaveGovernanceV2.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;


interface IAaveGovernanceV2 {
  struct ProposalWithoutVotes {
    uint256 id;
    address creator;
    address executor;
    address[] targets;
    uint256[] values;
    string[] signatures;
    bytes[] calldatas;
    bool[] withDelegatecalls;
    uint256 startBlock;
    uint256 endBlock;
    uint256 executionTime;
    uint256 forVotes;
    uint256 againstVotes;
    bool executed;
    bool canceled;
    address strategy;
    bytes32 ipfsHash;
  }

  /**
   * @dev Set new Voting Delay (delay before a newly created proposal can be voted on)
   * Note: owner should be a timelocked executor, so needs to make a proposal
   * @param votingDelay new voting delay in seconds
   **/
  function setVotingDelay(uint256 votingDelay) external;

  /**
   * @dev Add new addresses to the list of authorized executors
   * @param executors list of new addresses to be authorized executors
   **/
  function authorizeExecutors(address[] memory executors) external;

  /**
   * @dev Remove addresses to the list of authorized executors
   * @param executors list of addresses to be removed as authorized executors
   **/
  function unauthorizeExecutors(address[] memory executors) external;

  /**
   * @dev Getter of the current Voting Delay (delay before a created proposal can be voted on)
   * Different from the voting duration
   * @return The voting delay in seconds
   **/
  function getVotingDelay() external view returns (uint256);

  /**
   * @dev Returns whether an address is an authorized executor
   * @param executor address to evaluate as authorized executor
   * @return true if authorized
   **/
  function isExecutorAuthorized(address executor) external view returns (bool);

  /**
   * @dev Getter of the current GovernanceStrategy address
   * @return The address of the current GovernanceStrategy contracts
   **/
   function getGovernanceStrategy() external view returns (address);
  
   /**
   * @dev Getter of a proposal by id
   * @param proposalId id of the proposal to get
   * @return the proposal as ProposalWithoutVotes memory object
   **/
   function getProposalById(uint256 proposalId) external view returns (ProposalWithoutVotes memory);

}
",
          },
        ],
        "main_contract": 0,
        "raw_abi": null,
        "states": [
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false,
            "name": "VOTE_DIFFERENTIAL",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false,
            "name": "MINIMUM_QUORUM",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false,
            "name": "_queuedTransactions",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (bytes32 => bool)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "name": "_admin",
            "offset": 0,
            "simple_type": {
              "type": "address",
            },
            "storage_location": "storage",
            "type": "address",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "name": "_pendingAdmin",
            "offset": 0,
            "simple_type": {
              "type": "address",
            },
            "storage_location": "storage",
            "type": "address",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "name": "_delay",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false,
            "name": "PROPOSITION_THRESHOLD",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "name": "VOTING_DURATION",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
        ],
      },
      "ens_domain": null,
      "evm_version": "",
      "export": false,
      "id": "eth:1:0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
      "in_project": false,
      "language": "solidity",
      "libraries": null,
      "network_id": "1",
      "number_of_files": 4,
      "number_of_watches": null,
      "optimization_runs": 200,
      "optimizations_used": true,
      "public": true,
      "type": "contract",
      "verification_date": null,
      "verified_by": "etherscan",
    },
    {
      "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      "balance": "",
      "child_contracts": [
        {
          "address": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
          "id": "eth:1:0x96f68837877fd0414b55050c9e794aecdbcfca59",
          "network_id": "1",
        },
      ],
      "compiler_version": "v0.6.10+commit.00c0fcaf",
      "contract_id": "eth:1:0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      "contract_name": "InitializableAdminUpgradeabilityProxy",
      "created_at": "2020-09-24T18:07:20Z",
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "data": {
        "abi": [
          {
            "anonymous": false,
            "constant": false,
            "inputs": null,
            "name": "",
            "outputs": null,
            "stateMutability": "",
            "type": "constructor",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "changeAdmin",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "EIP712_REVISION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "tokens",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "address[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amounts",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "uint",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "uint256[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "aaveMerkleDistributor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "lendToken",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "lendToAaveAmount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "delegate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getPowerAtBlock",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "account",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DELEGATE_BY_TYPE_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "deadline",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DELEGATE_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "totalSupplyAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "nonce",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "expiry",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "delegateByTypeBySig",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getPowerCurrent",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "addedValue",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "implementation",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "sender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "recipient",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "REVISION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newImplementation",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "_logic",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "_data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "_nonces",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getDelegateeByType",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newImplementation",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "upgradeTo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "nonce",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "expiry",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "delegateBySig",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "allowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "recipient",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "transfer",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "approve",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "_votingSnapshots",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint128",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "subtractedValue",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "_aaveGovernance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "delegateByType",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "admin",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "_votingSnapshotsCounts",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "tokenRescued",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "aaveMerkleDistributor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amountRescued",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "TokensRescued",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "from",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "to",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "Transfer",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "previousAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "AdminChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "implementation",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "Upgraded",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "Approval",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "delegator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "DelegateChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "DelegatedPowerChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
        ],
        "contract_info": [
          {
            "id": 1,
            "name": "BaseAdminUpgradeabilityProxy.sol",
            "path": "contracts/open-zeppelin/BaseAdminUpgradeabilityProxy.sol",
            "source": "pragma solidity ^0.6.0;

import './UpgradeabilityProxy.sol';

/**
 * @title BaseAdminUpgradeabilityProxy
 * @dev This contract combines an upgradeability proxy with an authorization
 * mechanism for administrative tasks.
 * All external functions in this contract must be guarded by the
 * \`ifAdmin\` modifier. See ethereum/solidity#3864 for a Solidity
 * feature proposal that would enable this to be done automatically.
 */
contract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {
  /**
   * @dev Emitted when the administration has been transferred.
   * @param previousAdmin Address of the previous admin.
   * @param newAdmin Address of the new admin.
   */
  event AdminChanged(address previousAdmin, address newAdmin);

  /**
   * @dev Storage slot with the admin of the contract.
   * This is the keccak-256 hash of \\"eip1967.proxy.admin\\" subtracted by 1, and is
   * validated in the constructor.
   */

  bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;

  /**
   * @dev Modifier to check whether the \`msg.sender\` is the admin.
   * If it is, it will run the function. Otherwise, it will delegate the call
   * to the implementation.
   */
  modifier ifAdmin() {
    if (msg.sender == _admin()) {
      _;
    } else {
      _fallback();
    }
  }

  /**
   * @return The address of the proxy admin.
   */
  function admin() external ifAdmin returns (address) {
    return _admin();
  }

  /**
   * @return The address of the implementation.
   */
  function implementation() external ifAdmin returns (address) {
    return _implementation();
  }

  /**
   * @dev Changes the admin of the proxy.
   * Only the current admin can call this function.
   * @param newAdmin Address to transfer proxy administration to.
   */
  function changeAdmin(address newAdmin) external ifAdmin {
    require(newAdmin != address(0), \\"Cannot change the admin of a proxy to the zero address\\");
    emit AdminChanged(_admin(), newAdmin);
    _setAdmin(newAdmin);
  }

  /**
   * @dev Upgrade the backing implementation of the proxy.
   * Only the admin can call this function.
   * @param newImplementation Address of the new implementation.
   */
  function upgradeTo(address newImplementation) external ifAdmin {
    _upgradeTo(newImplementation);
  }

  /**
   * @dev Upgrade the backing implementation of the proxy and call a function
   * on the new implementation.
   * This is useful to initialize the proxied contract.
   * @param newImplementation Address of the new implementation.
   * @param data Data to send as msg.data in the low level call.
   * It should include the signature and the parameters of the function to be called, as described in
   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
   */
  function upgradeToAndCall(address newImplementation, bytes calldata data) payable external ifAdmin {
    _upgradeTo(newImplementation);
    (bool success,) = newImplementation.delegatecall(data);
    require(success);
  }

  /**
   * @return adm The admin slot.
   */
  function _admin() internal view returns (address adm) {
    bytes32 slot = ADMIN_SLOT;
    assembly {
      adm := sload(slot)
    }
  }

  /**
   * @dev Sets the address of the proxy admin.
   * @param newAdmin Address of the new proxy admin.
   */
  function _setAdmin(address newAdmin) internal {
    bytes32 slot = ADMIN_SLOT;

    assembly {
      sstore(slot, newAdmin)
    }
  }

  /**
   * @dev Only fall back when the sender is not the admin.
   */
  function _willFallback() internal override virtual {
    require(msg.sender != _admin(), \\"Cannot call fallback function from the proxy admin\\");
    super._willFallback();
  }
}",
          },
          {
            "id": 2,
            "name": "BaseUpgradeabilityProxy.sol",
            "path": "contracts/open-zeppelin/BaseUpgradeabilityProxy.sol",
            "source": "pragma solidity ^0.6.0;

import './Proxy.sol';
import './Address.sol';

/**
 * @title BaseUpgradeabilityProxy
 * @dev This contract implements a proxy that allows to change the
 * implementation address to which it will delegate.
 * Such a change is called an implementation upgrade.
 */
contract BaseUpgradeabilityProxy is Proxy {
  /**
   * @dev Emitted when the implementation is upgraded.
   * @param implementation Address of the new implementation.
   */
  event Upgraded(address indexed implementation);

  /**
   * @dev Storage slot with the address of the current implementation.
   * This is the keccak-256 hash of \\"eip1967.proxy.implementation\\" subtracted by 1, and is
   * validated in the constructor.
   */
  bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;

  /**
   * @dev Returns the current implementation.
   * @return impl Address of the current implementation
   */
  function _implementation() internal override view returns (address impl) {
    bytes32 slot = IMPLEMENTATION_SLOT;
    assembly {
      impl := sload(slot)
    }
  }

  /**
   * @dev Upgrades the proxy to a new implementation.
   * @param newImplementation Address of the new implementation.
   */
  function _upgradeTo(address newImplementation) internal {
    _setImplementation(newImplementation);
    emit Upgraded(newImplementation);
  }

  /**
   * @dev Sets the implementation address of the proxy.
   * @param newImplementation Address of the new implementation.
   */
  function _setImplementation(address newImplementation) internal {
    require(Address.isContract(newImplementation), \\"Cannot set a proxy implementation to a non-contract address\\");

    bytes32 slot = IMPLEMENTATION_SLOT;

    assembly {
      sstore(slot, newImplementation)
    }
  }
}",
          },
          {
            "id": 3,
            "name": "InitializableAdminUpgradeabilityProxy.sol",
            "path": "contracts/open-zeppelin/InitializableAdminUpgradeabilityProxy.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.6.10;

import \\"./BaseAdminUpgradeabilityProxy.sol\\";
import \\"./InitializableUpgradeabilityProxy.sol\\";

/**
 * @title InitializableAdminUpgradeabilityProxy
 * @dev Extends from BaseAdminUpgradeabilityProxy with an initializer for 
 * initializing the implementation, admin, and init data.
 */
contract InitializableAdminUpgradeabilityProxy is BaseAdminUpgradeabilityProxy, InitializableUpgradeabilityProxy {
    /**
   * Contract initializer.
   * @param _logic address of the initial implementation.
   * @param _admin Address of the proxy administrator.
   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
   * It should include the signature and the parameters of the function to be called, as described in
   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
   */
    function initialize(address _logic, address _admin, bytes memory _data) public payable {
        require(_implementation() == address(0));
        InitializableUpgradeabilityProxy.initialize(_logic, _data);
        assert(ADMIN_SLOT == bytes32(uint256(keccak256(\\"eip1967.proxy.admin\\")) - 1));
        _setAdmin(_admin);
    }

    /**
    * @dev Only fall back when the sender is not the admin.
    */
    function _willFallback() internal override(BaseAdminUpgradeabilityProxy, Proxy) {
        BaseAdminUpgradeabilityProxy._willFallback();
    }

}
",
          },
          {
            "id": 4,
            "name": "InitializableUpgradeabilityProxy.sol",
            "path": "contracts/open-zeppelin/InitializableUpgradeabilityProxy.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.6.10;

import \\"./BaseUpgradeabilityProxy.sol\\";

/**
 * @title InitializableUpgradeabilityProxy
 * @dev Extends BaseUpgradeabilityProxy with an initializer for initializing
 * implementation and init data.
 */
contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {
    /**
   * @dev Contract initializer.
   * @param _logic Address of the initial implementation.
   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
   * It should include the signature and the parameters of the function to be called, as described in
   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
   */
    function initialize(address _logic, bytes memory _data) public payable {
        require(_implementation() == address(0));
        assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\"eip1967.proxy.implementation\\")) - 1));
        _setImplementation(_logic);
        if (_data.length > 0) {
            (bool success, ) = _logic.delegatecall(_data);
            require(success);
        }
    }
}
",
          },
          {
            "id": 5,
            "name": "Proxy.sol",
            "path": "contracts/open-zeppelin/Proxy.sol",
            "source": "pragma solidity ^0.6.0;

/**
 * @title Proxy
 * @dev Implements delegation of calls to other contracts, with proper
 * forwarding of return values and bubbling of failures.
 * It defines a fallback function that delegates all calls to the address
 * returned by the abstract _implementation() internal function.
 */
abstract contract Proxy {
  /**
   * @dev Fallback function.
   * Implemented entirely in \`_fallback\`.
   */
  fallback () payable external {
    _fallback();
  }

  /**
   * @return The Address of the implementation.
   */
  function _implementation() internal virtual view returns (address);

  /**
   * @dev Delegates execution to an implementation contract.
   * This is a low level function that doesn't return to its internal call site.
   * It will return to the external caller whatever the implementation returns.
   * @param implementation Address to delegate.
   */
  function _delegate(address implementation) internal {
    assembly {
      // Copy msg.data. We take full control of memory in this inline assembly
      // block because it will not return to Solidity code. We overwrite the
      // Solidity scratch pad at memory position 0.
      calldatacopy(0, 0, calldatasize())

      // Call the implementation.
      // out and outsize are 0 because we don't know the size yet.
      let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)

      // Copy the returned data.
      returndatacopy(0, 0, returndatasize())

      switch result
      // delegatecall returns 0 on error.
      case 0 { revert(0, returndatasize()) }
      default { return(0, returndatasize()) }
    }
  }

  /**
   * @dev Function that is run as the first thing in the fallback function.
   * Can be redefined in derived contracts to add functionality.
   * Redefinitions must call super._willFallback().
   */
  function _willFallback() internal virtual {
  }

  /**
   * @dev fallback implementation.
   * Extracted to enable manual triggering.
   */
  function _fallback() internal {
    _willFallback();
    _delegate(_implementation());
  }
}",
          },
          {
            "id": 6,
            "name": "UpgradeabilityProxy.sol",
            "path": "contracts/open-zeppelin/UpgradeabilityProxy.sol",
            "source": "pragma solidity ^0.6.0;

import './BaseUpgradeabilityProxy.sol';

/**
 * @title UpgradeabilityProxy
 * @dev Extends BaseUpgradeabilityProxy with a constructor for initializing
 * implementation and init data.
 */
contract UpgradeabilityProxy is BaseUpgradeabilityProxy {
  /**
   * @dev Contract constructor.
   * @param _logic Address of the initial implementation.
   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
   * It should include the signature and the parameters of the function to be called, as described in
   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
   */
  constructor(address _logic, bytes memory _data) public payable {
    assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1));
    _setImplementation(_logic);
    if(_data.length > 0) {
      (bool success,) = _logic.delegatecall(_data);
      require(success);
    }
  }  
}",
          },
          {
            "id": 0,
            "name": "Address.sol",
            "path": "contracts/open-zeppelin/Address.sol",
            "source": "pragma solidity ^0.6.2;

/**
 * @dev Collection of functions related to the address type
 */
library Address {
    /**
     * @dev Returns true if \`account\` is a contract.
     *
     * [IMPORTANT]
     * ====
     * It is unsafe to assume that an address for which this function returns
     * false is an externally-owned account (EOA) and not a contract.
     *
     * Among others, \`isContract\` will return false for the following
     * types of addresses:
     *
     *  - an externally-owned account
     *  - a contract in construction
     *  - an address where a contract will be created
     *  - an address where a contract lived, but was destroyed
     * ====
     */
    function isContract(address account) internal view returns (bool) {
        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts
        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned
        // for accounts without code, i.e. \`keccak256('')\`
        bytes32 codehash;
        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;
        // solhint-disable-next-line no-inline-assembly
        assembly { codehash := extcodehash(account) }
        return (codehash != accountHash && codehash != 0x0);
    }

    /**
     * @dev Replacement for Solidity's \`transfer\`: sends \`amount\` wei to
     * \`recipient\`, forwarding all available gas and reverting on errors.
     *
     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost
     * of certain opcodes, possibly making contracts go over the 2300 gas limit
     * imposed by \`transfer\`, making them unable to receive funds via
     * \`transfer\`. {sendValue} removes this limitation.
     *
     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].
     *
     * IMPORTANT: because control is transferred to \`recipient\`, care must be
     * taken to not create reentrancy vulnerabilities. Consider using
     * {ReentrancyGuard} or the
     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].
     */
    function sendValue(address payable recipient, uint256 amount) internal {
        require(address(this).balance >= amount, \\"Address: insufficient balance\\");

        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value
        (bool success, ) = recipient.call{ value: amount }(\\"\\");
        require(success, \\"Address: unable to send value, recipient may have reverted\\");
    }
}",
          },
        ],
        "main_contract": 3,
        "raw_abi": null,
        "states": [
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false,
            "name": "_decimals",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint8",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003d",
            "indexed": false,
            "name": "DOMAIN_SEPARATOR",
            "offset": 0,
            "simple_type": {
              "type": "bytes",
            },
            "storage_location": "storage",
            "type": "bytes32",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000039",
            "indexed": false,
            "name": "_nonces",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003b",
            "indexed": false,
            "name": "_votingSnapshotsCounts",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003c",
            "indexed": false,
            "name": "_aaveGovernance",
            "offset": 0,
            "simple_type": {
              "type": "address",
            },
            "storage_location": "storage",
            "type": "address",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "name": "_totalSupply",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false,
            "name": "_name",
            "offset": 0,
            "simple_type": {
              "type": "string",
            },
            "storage_location": "storage",
            "type": "string",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "name": "_symbol",
            "offset": 0,
            "simple_type": {
              "type": "string",
            },
            "storage_location": "storage",
            "type": "string",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false,
            "name": "______gap",
            "offset": 0,
            "simple_type": {
              "nested_type": {
                "type": "uint",
              },
              "type": "array",
            },
            "storage_location": "storage",
            "type": "uint256[50]",
          },
          {
            "components": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 128,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
            ],
            "index": "0x000000000000000000000000000000000000000000000000000000000000003f",
            "indexed": false,
            "name": "_propositionPowerSnapshots",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (address => mapping (uint256 => tuple))",
          },
          {
            "components": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 128,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
            ],
            "index": "0x000000000000000000000000000000000000000000000000000000000000003a",
            "indexed": false,
            "name": "_votingSnapshots",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (address => mapping (uint256 => tuple))",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003e",
            "indexed": false,
            "name": "_votingDelegates",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => address)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000040",
            "indexed": false,
            "name": "_propositionPowerSnapshotsCounts",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000041",
            "indexed": false,
            "name": "_propositionPowerDelegates",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => address)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "name": "_balances",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "name": "_allowances",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => mapping (address => uint256))",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false,
            "name": "lastInitializedRevision",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
        ],
      },
      "ens_domain": null,
      "evm_version": "",
      "export": false,
      "id": "eth:1:0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      "in_project": false,
      "language": "solidity",
      "libraries": null,
      "network_id": "1",
      "number_of_files": 7,
      "number_of_watches": null,
      "optimization_runs": 200,
      "optimizations_used": true,
      "public": true,
      "standard": "eip1967",
      "standards": [
        "eip1967",
      ],
      "type": "contract",
      "verification_date": null,
      "verified_by": "etherscan",
    },
    {
      "address": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
      "balance": "",
      "compiler_version": "v0.7.5+commit.eb77ed08",
      "contract_id": "eth:1:0x96f68837877fd0414b55050c9e794aecdbcfca59",
      "contract_name": "AaveTokenV2",
      "created_at": "2023-04-28T21:11:30Z",
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "data": {
        "abi": [
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "",
            "outputs": null,
            "stateMutability": "",
            "type": "constructor",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "account",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "_aaveGovernance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getPowerAtBlock",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DELEGATE_BY_TYPE_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "deadline",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "recipient",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "transfer",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "_votingSnapshots",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint128",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "allowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "totalSupplyAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "addedValue",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "_nonces",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "tokens",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "address[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amounts",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "uint",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "uint256[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "aaveMerkleDistributor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "lendToken",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "lendToAaveAmount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "_votingSnapshotsCounts",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "delegateByType",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "delegate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "approve",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "EIP712_REVISION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getPowerCurrent",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "sender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "recipient",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "nonce",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "expiry",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "delegateBySig",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "nonce",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "expiry",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "delegateByTypeBySig",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "getDelegateeByType",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "subtractedValue",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "REVISION",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DELEGATE_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "delegator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "delegatee",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "DelegateChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amount",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "delegationType",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "name": "DelegatedPowerChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "tokenRescued",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "aaveMerkleDistributor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "amountRescued",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "TokensRescued",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "from",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "to",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "Transfer",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "Approval",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
        ],
        "contract_info": [
          {
            "id": 0,
            "name": "AaveTokenV2.sol",
            "path": "src/contracts/AaveTokenV2.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity 0.7.5;
pragma experimental ABIEncoderV2;


interface IGovernancePowerDelegationToken {
  
  enum DelegationType {VOTING_POWER, PROPOSITION_POWER}

  /**
   * @dev emitted when a user delegates to another
   * @param delegator the delegator
   * @param delegatee the delegatee
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  event DelegateChanged(
    address indexed delegator,
    address indexed delegatee,
    DelegationType delegationType
  );

  /**
   * @dev emitted when an action changes the delegated power of a user
   * @param user the user which delegated power has changed
   * @param amount the amount of delegated power for the user
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  event DelegatedPowerChanged(address indexed user, uint256 amount, DelegationType delegationType);

  /**
   * @dev delegates the specific power to a delegatee
   * @param delegatee the user which delegated power has changed
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  function delegateByType(address delegatee, DelegationType delegationType) external virtual;
  /**
   * @dev delegates all the powers to a specific user
   * @param delegatee the user to which the power will be delegated
   **/
  function delegate(address delegatee) external virtual;
  /**
   * @dev returns the delegatee of an user
   * @param delegator the address of the delegator
   **/
  function getDelegateeByType(address delegator, DelegationType delegationType)
    external
    virtual
    view
    returns (address);

  /**
   * @dev returns the current delegated power of a user. The current power is the
   * power delegated at the time of the last snapshot
   * @param user the user
   **/
  function getPowerCurrent(address user, DelegationType delegationType)
    external
    virtual
    view
    returns (uint256);

  /**
   * @dev returns the delegated power of a user at a certain block
   * @param user the user
   **/
  function getPowerAtBlock(
    address user,
    uint256 blockNumber,
    DelegationType delegationType
  ) external virtual view returns (uint256);
 
  /**
  * @dev returns the total supply at a certain block number
  **/
  function totalSupplyAt(uint256 blockNumber) external virtual view returns (uint256);
}

/**
 * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts
 * Provides information about the current execution context, including the
 * sender of the transaction and its data. While these are generally available
 * via msg.sender and msg.data, they should not be accessed in such a direct
 * manner, since when dealing with GSN meta-transactions the account sending and
 * paying for execution may not be the actual sender (as far as an application
 * is concerned).
 *
 * This contract is only required for intermediate, library-like contracts.
 */
abstract contract Context {
  function _msgSender() internal view virtual returns (address payable) {
    return msg.sender;
  }

  function _msgData() internal view virtual returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
}


/**
 * @dev Interface of the ERC20 standard as defined in the EIP.
 * From https://github.com/OpenZeppelin/openzeppelin-contracts
 */
interface IERC20 {
  /**
   * @dev Returns the amount of tokens in existence.
   */
  function totalSupply() external view returns (uint256);

  /**
   * @dev Returns the amount of tokens owned by \`account\`.
   */
  function balanceOf(address account) external view returns (uint256);

  /**
   * @dev Moves \`amount\` tokens from the caller's account to \`recipient\`.
   *
   * Returns a boolean value indicating whether the operation succeeded.
   *
   * Emits a {Transfer} event.
   */
  function transfer(address recipient, uint256 amount) external returns (bool);

  /**
   * @dev Returns the remaining number of tokens that \`spender\` will be
   * allowed to spend on behalf of \`owner\` through {transferFrom}. This is
   * zero by default.
   *
   * This value changes when {approve} or {transferFrom} are called.
   */
  function allowance(address owner, address spender) external view returns (uint256);

  /**
   * @dev Sets \`amount\` as the allowance of \`spender\` over the caller's tokens.
   *
   * Returns a boolean value indicating whether the operation succeeded.
   *
   * IMPORTANT: Beware that changing an allowance with this method brings the risk
   * that someone may use both the old and the new allowance by unfortunate
   * transaction ordering. One possible solution to mitigate this race
   * condition is to first reduce the spender's allowance to 0 and set the
   * desired value afterwards:
   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
   *
   * Emits an {Approval} event.
   */
  function approve(address spender, uint256 amount) external returns (bool);

  /**
   * @dev Moves \`amount\` tokens from \`sender\` to \`recipient\` using the
   * allowance mechanism. \`amount\` is then deducted from the caller's
   * allowance.
   *
   * Returns a boolean value indicating whether the operation succeeded.
   *
   * Emits a {Transfer} event.
   */
  function transferFrom(
    address sender,
    address recipient,
    uint256 amount
  ) external returns (bool);

  /**
   * @dev Emitted when \`value\` tokens are moved from one account (\`from\`) to
   * another (\`to\`).
   *
   * Note that \`value\` may be zero.
   */
  event Transfer(address indexed from, address indexed to, uint256 value);

  /**
   * @dev Emitted when the allowance of a \`spender\` for an \`owner\` is set by
   * a call to {approve}. \`value\` is the new allowance.
   */
  event Approval(address indexed owner, address indexed spender, uint256 value);
}



/**
 * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts
 * Wrappers over Solidity's arithmetic operations with added overflow
 * checks.
 *
 * Arithmetic operations in Solidity wrap on overflow. This can easily result
 * in bugs, because programmers usually assume that an overflow raises an
 * error, which is the standard behavior in high level programming languages.
 * \`SafeMath\` restores this intuition by reverting the transaction when an
 * operation overflows.
 *
 * Using this library instead of the unchecked operations eliminates an entire
 * class of bugs, so it's recommended to use it always.
 */
library SafeMath {
  /**
   * @dev Returns the addition of two unsigned integers, reverting on
   * overflow.
   *
   * Counterpart to Solidity's \`+\` operator.
   *
   * Requirements:
   * - Addition cannot overflow.
   */
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, 'SafeMath: addition overflow');

    return c;
  }

  /**
   * @dev Returns the subtraction of two unsigned integers, reverting on
   * overflow (when the result is negative).
   *
   * Counterpart to Solidity's \`-\` operator.
   *
   * Requirements:
   * - Subtraction cannot overflow.
   */
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, 'SafeMath: subtraction overflow');
  }

  /**
   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on
   * overflow (when the result is negative).
   *
   * Counterpart to Solidity's \`-\` operator.
   *
   * Requirements:
   * - Subtraction cannot overflow.
   */
  function sub(
    uint256 a,
    uint256 b,
    string memory errorMessage
  ) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }

  /**
   * @dev Returns the multiplication of two unsigned integers, reverting on
   * overflow.
   *
   * Counterpart to Solidity's \`*\` operator.
   *
   * Requirements:
   * - Multiplication cannot overflow.
   */
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, 'SafeMath: multiplication overflow');

    return c;
  }

  /**
   * @dev Returns the integer division of two unsigned integers. Reverts on
   * division by zero. The result is rounded towards zero.
   *
   * Counterpart to Solidity's \`/\` operator. Note: this function uses a
   * \`revert\` opcode (which leaves remaining gas untouched) while Solidity
   * uses an invalid opcode to revert (consuming all remaining gas).
   *
   * Requirements:
   * - The divisor cannot be zero.
   */
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, 'SafeMath: division by zero');
  }

  /**
   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on
   * division by zero. The result is rounded towards zero.
   *
   * Counterpart to Solidity's \`/\` operator. Note: this function uses a
   * \`revert\` opcode (which leaves remaining gas untouched) while Solidity
   * uses an invalid opcode to revert (consuming all remaining gas).
   *
   * Requirements:
   * - The divisor cannot be zero.
   */
  function div(
    uint256 a,
    uint256 b,
    string memory errorMessage
  ) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }

  /**
   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),
   * Reverts when dividing by zero.
   *
   * Counterpart to Solidity's \`%\` operator. This function uses a \`revert\`
   * opcode (which leaves remaining gas untouched) while Solidity uses an
   * invalid opcode to revert (consuming all remaining gas).
   *
   * Requirements:
   * - The divisor cannot be zero.
   */
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, 'SafeMath: modulo by zero');
  }

  /**
   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),
   * Reverts with custom message when dividing by zero.
   *
   * Counterpart to Solidity's \`%\` operator. This function uses a \`revert\`
   * opcode (which leaves remaining gas untouched) while Solidity uses an
   * invalid opcode to revert (consuming all remaining gas).
   *
   * Requirements:
   * - The divisor cannot be zero.
   */
  function mod(
    uint256 a,
    uint256 b,
    string memory errorMessage
  ) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
}



/**
 * @dev Collection of functions related to the address type
 * From https://github.com/OpenZeppelin/openzeppelin-contracts
 */
library Address {
  /**
   * @dev Returns true if \`account\` is a contract.
   *
   * [IMPORTANT]
   * ====
   * It is unsafe to assume that an address for which this function returns
   * false is an externally-owned account (EOA) and not a contract.
   *
   * Among others, \`isContract\` will return false for the following
   * types of addresses:
   *
   *  - an externally-owned account
   *  - a contract in construction
   *  - an address where a contract will be created
   *  - an address where a contract lived, but was destroyed
   * ====
   */
  function isContract(address account) internal view returns (bool) {
    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts
    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned
    // for accounts without code, i.e. \`keccak256('')\`
    bytes32 codehash;
    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;
    // solhint-disable-next-line no-inline-assembly
    assembly {
      codehash := extcodehash(account)
    }
    return (codehash != accountHash && codehash != 0x0);
  }

  /**
   * @dev Replacement for Solidity's \`transfer\`: sends \`amount\` wei to
   * \`recipient\`, forwarding all available gas and reverting on errors.
   *
   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost
   * of certain opcodes, possibly making contracts go over the 2300 gas limit
   * imposed by \`transfer\`, making them unable to receive funds via
   * \`transfer\`. {sendValue} removes this limitation.
   *
   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].
   *
   * IMPORTANT: because control is transferred to \`recipient\`, care must be
   * taken to not create reentrancy vulnerabilities. Consider using
   * {ReentrancyGuard} or the
   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].
   */
  function sendValue(address payable recipient, uint256 amount) internal {
    require(address(this).balance >= amount, 'Address: insufficient balance');

    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value
    (bool success, ) = recipient.call{value: amount}('');
    require(success, 'Address: unable to send value, recipient may have reverted');
  }
}

/**
 * @dev Implementation of the {IERC20} interface.
 *
 * This implementation is agnostic to the way tokens are created. This means
 * that a supply mechanism has to be added in a derived contract using {_mint}.
 * For a generic mechanism see {ERC20PresetMinterPauser}.
 *
 * TIP: For a detailed writeup see our guide
 * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How
 * to implement supply mechanisms].
 *
 * We have followed general OpenZeppelin guidelines: functions revert instead
 * of returning \`false\` on failure. This behavior is nonetheless conventional
 * and does not conflict with the expectations of ERC20 applications.
 *
 * Additionally, an {Approval} event is emitted on calls to {transferFrom}.
 * This allows applications to reconstruct the allowance for all accounts just
 * by listening to said events. Other implementations of the EIP may not emit
 * these events, as it isn't required by the specification.
 *
 * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}
 * functions have been added to mitigate the well-known issues around setting
 * allowances. See {IERC20-approve}.
 */
contract ERC20 is Context, IERC20 {
    using SafeMath for uint256;
    using Address for address;

    mapping (address => uint256) private _balances;

    mapping (address => mapping (address => uint256)) private _allowances;

    uint256 private _totalSupply;

    string internal _name;
    string internal _symbol;
    uint8 private _decimals;

    /**
     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with
     * a default value of 18.
     *
     * To select a different value for {decimals}, use {_setupDecimals}.
     *
     * All three of these values are immutable: they can only be set once during
     * construction.
     */
    constructor (string memory name, string memory symbol) public {
        _name = name;
        _symbol = symbol;
        _decimals = 18;
    }

    /**
     * @dev Returns the name of the token.
     */
    function name() public view returns (string memory) {
        return _name;
    }

    /**
     * @dev Returns the symbol of the token, usually a shorter version of the
     * name.
     */
    function symbol() public view returns (string memory) {
        return _symbol;
    }

    /**
     * @dev Returns the number of decimals used to get its user representation.
     * For example, if \`decimals\` equals \`2\`, a balance of \`505\` tokens should
     * be displayed to a user as \`5,05\` (\`505 / 10 ** 2\`).
     *
     * Tokens usually opt for a value of 18, imitating the relationship between
     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is
     * called.
     *
     * NOTE: This information is only used for _display_ purposes: it in
     * no way affects any of the arithmetic of the contract, including
     * {IERC20-balanceOf} and {IERC20-transfer}.
     */
    function decimals() public view returns (uint8) {
        return _decimals;
    }

    /**
     * @dev See {IERC20-totalSupply}.
     */
    function totalSupply() public view override returns (uint256) {
        return _totalSupply;
    }

    /**
     * @dev See {IERC20-balanceOf}.
     */
    function balanceOf(address account) public view override returns (uint256) {
        return _balances[account];
    }

    /**
     * @dev See {IERC20-transfer}.
     *
     * Requirements:
     *
     * - \`recipient\` cannot be the zero address.
     * - the caller must have a balance of at least \`amount\`.
     */
    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {
        _transfer(_msgSender(), recipient, amount);
        return true;
    }

    /**
     * @dev See {IERC20-allowance}.
     */
    function allowance(address owner, address spender) public view virtual override returns (uint256) {
        return _allowances[owner][spender];
    }

    /**
     * @dev See {IERC20-approve}.
     *
     * Requirements:
     *
     * - \`spender\` cannot be the zero address.
     */
    function approve(address spender, uint256 amount) public virtual override returns (bool) {
        _approve(_msgSender(), spender, amount);
        return true;
    }

    /**
     * @dev See {IERC20-transferFrom}.
     *
     * Emits an {Approval} event indicating the updated allowance. This is not
     * required by the EIP. See the note at the beginning of {ERC20};
     *
     * Requirements:
     * - \`sender\` and \`recipient\` cannot be the zero address.
     * - \`sender\` must have a balance of at least \`amount\`.
     * - the caller must have allowance for \`\`sender\`\`'s tokens of at least
     * \`amount\`.
     */
    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\"ERC20: transfer amount exceeds allowance\\"));
        return true;
    }

    /**
     * @dev Atomically increases the allowance granted to \`spender\` by the caller.
     *
     * This is an alternative to {approve} that can be used as a mitigation for
     * problems described in {IERC20-approve}.
     *
     * Emits an {Approval} event indicating the updated allowance.
     *
     * Requirements:
     *
     * - \`spender\` cannot be the zero address.
     */
    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {
        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
        return true;
    }

    /**
     * @dev Atomically decreases the allowance granted to \`spender\` by the caller.
     *
     * This is an alternative to {approve} that can be used as a mitigation for
     * problems described in {IERC20-approve}.
     *
     * Emits an {Approval} event indicating the updated allowance.
     *
     * Requirements:
     *
     * - \`spender\` cannot be the zero address.
     * - \`spender\` must have allowance for the caller of at least
     * \`subtractedValue\`.
     */
    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {
        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\"ERC20: decreased allowance below zero\\"));
        return true;
    }

    /**
     * @dev Moves tokens \`amount\` from \`sender\` to \`recipient\`.
     *
     * This is internal function is equivalent to {transfer}, and can be used to
     * e.g. implement automatic token fees, slashing mechanisms, etc.
     *
     * Emits a {Transfer} event.
     *
     * Requirements:
     *
     * - \`sender\` cannot be the zero address.
     * - \`recipient\` cannot be the zero address.
     * - \`sender\` must have a balance of at least \`amount\`.
     */
    function _transfer(address sender, address recipient, uint256 amount) internal virtual {
        require(sender != address(0), \\"ERC20: transfer from the zero address\\");
        require(recipient != address(0), \\"ERC20: transfer to the zero address\\");

        _beforeTokenTransfer(sender, recipient, amount);

        _balances[sender] = _balances[sender].sub(amount, \\"ERC20: transfer amount exceeds balance\\");
        _balances[recipient] = _balances[recipient].add(amount);
        emit Transfer(sender, recipient, amount);
    }

    /** @dev Creates \`amount\` tokens and assigns them to \`account\`, increasing
     * the total supply.
     *
     * Emits a {Transfer} event with \`from\` set to the zero address.
     *
     * Requirements
     *
     * - \`to\` cannot be the zero address.
     */
    function _mint(address account, uint256 amount) internal virtual {
        require(account != address(0), \\"ERC20: mint to the zero address\\");

        _beforeTokenTransfer(address(0), account, amount);

        _totalSupply = _totalSupply.add(amount);
        _balances[account] = _balances[account].add(amount);
        emit Transfer(address(0), account, amount);
    }

    /**
     * @dev Destroys \`amount\` tokens from \`account\`, reducing the
     * total supply.
     *
     * Emits a {Transfer} event with \`to\` set to the zero address.
     *
     * Requirements
     *
     * - \`account\` cannot be the zero address.
     * - \`account\` must have at least \`amount\` tokens.
     */
    function _burn(address account, uint256 amount) internal virtual {
        require(account != address(0), \\"ERC20: burn from the zero address\\");

        _beforeTokenTransfer(account, address(0), amount);

        _balances[account] = _balances[account].sub(amount, \\"ERC20: burn amount exceeds balance\\");
        _totalSupply = _totalSupply.sub(amount);
        emit Transfer(account, address(0), amount);
    }

    /**
     * @dev Sets \`amount\` as the allowance of \`spender\` over the \`owner\`s tokens.
     *
     * This is internal function is equivalent to \`approve\`, and can be used to
     * e.g. set automatic allowances for certain subsystems, etc.
     *
     * Emits an {Approval} event.
     *
     * Requirements:
     *
     * - \`owner\` cannot be the zero address.
     * - \`spender\` cannot be the zero address.
     */
    function _approve(address owner, address spender, uint256 amount) internal virtual {
        require(owner != address(0), \\"ERC20: approve from the zero address\\");
        require(spender != address(0), \\"ERC20: approve to the zero address\\");

        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }

    /**
     * @dev Sets {decimals} to a value other than the default one of 18.
     *
     * WARNING: This function should only be called from the constructor. Most
     * applications that interact with token contracts will not expect
     * {decimals} to ever change, and may work incorrectly if it does.
     */
    function _setupDecimals(uint8 decimals_) internal {
        _decimals = decimals_;
    }

    /**
     * @dev Hook that is called before any transfer of tokens. This includes
     * minting and burning.
     *
     * Calling conditions:
     *
     * - when \`from\` and \`to\` are both non-zero, \`amount\` of \`\`from\`\`'s tokens
     * will be to transferred to \`to\`.
     * - when \`from\` is zero, \`amount\` tokens will be minted for \`to\`.
     * - when \`to\` is zero, \`amount\` of \`\`from\`\`'s tokens will be burned.
     * - \`from\` and \`to\` are never both zero.
     *
     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].
     */
    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }
}

interface ITransferHook {
  function onTransfer(
    address from,
    address to,
    uint256 amount
  ) external;
}


/**
 * @title SafeERC20
 * @dev From https://github.com/OpenZeppelin/openzeppelin-contracts
 * Wrappers around ERC20 operations that throw on failure (when the token
 * contract returns false). Tokens that return no value (and instead revert or
 * throw on failure) are also supported, non-reverting calls are assumed to be
 * successful.
 * To use this library you can add a \`using SafeERC20 for IERC20;\` statement to your contract,
 * which allows you to call the safe operations as \`token.safeTransfer(...)\`, etc.
 */
library SafeERC20 {
  using SafeMath for uint256;
  using Address for address;

  function safeTransfer(
    IERC20 token,
    address to,
    uint256 value
  ) internal {
    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));
  }

  function safeTransferFrom(
    IERC20 token,
    address from,
    address to,
    uint256 value
  ) internal {
    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));
  }

  function safeApprove(
    IERC20 token,
    address spender,
    uint256 value
  ) internal {
    require(
      (value == 0) || (token.allowance(address(this), spender) == 0),
      'SafeERC20: approve from non-zero to non-zero allowance'
    );
    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));
  }

  function callOptionalReturn(IERC20 token, bytes memory data) private {
    require(address(token).isContract(), 'SafeERC20: call to non-contract');

    // solhint-disable-next-line avoid-low-level-calls
    (bool success, bytes memory returndata) = address(token).call(data);
    require(success, 'SafeERC20: low-level call failed');

    if (returndata.length > 0) {
      // Return data is optional
      // solhint-disable-next-line max-line-length
      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');
    }
  }
}

/**
 * @title VersionedInitializable
 *
 * @dev Helper contract to support initializer functions. To use it, replace
 * the constructor with a function that has the \`initializer\` modifier.
 * WARNING: Unlike constructors, initializer functions must be manually
 * invoked. This applies both to deploying an Initializable contract, as well
 * as extending an Initializable contract via inheritance.
 * WARNING: When used with inheritance, manual care must be taken to not invoke
 * a parent initializer twice, or ensure that all initializers are idempotent,
 * because this is not dealt with automatically as with constructors.
 *
 * @author Aave, inspired by the OpenZeppelin Initializable contract
 */
abstract contract VersionedInitializable {
  /**
   * @dev Indicates that the contract has been initialized.
   */
  uint256 internal lastInitializedRevision = 0;

  /**
   * @dev Modifier to use in the initializer function of a contract.
   */
  modifier initializer() {
    uint256 revision = getRevision();
    require(revision > lastInitializedRevision, 'Contract instance has already been initialized');

    lastInitializedRevision = revision;

    _;
  }

  /// @dev returns the revision number of the contract.
  /// Needs to be defined in the inherited class as a constant.
  function getRevision() internal pure virtual returns (uint256);

  // Reserved storage space to allow for layout changes in the future.
  uint256[50] private ______gap;
}




/**
 * @notice implementation of the AAVE token contract
 * @author Aave
 */
abstract contract GovernancePowerDelegationERC20 is ERC20, IGovernancePowerDelegationToken {
  using SafeMath for uint256;
  /// @notice The EIP-712 typehash for the delegation struct used by the contract
  bytes32 public constant DELEGATE_BY_TYPE_TYPEHASH = keccak256(
    'DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)'
  );

  bytes32 public constant DELEGATE_TYPEHASH = keccak256(
    'Delegate(address delegatee,uint256 nonce,uint256 expiry)'
  );

  /// @dev snapshot of a value on a specific block, used for votes
  struct Snapshot {
    uint128 blockNumber;
    uint128 value;
  }

  /**
   * @dev delegates one specific power to a delegatee
   * @param delegatee the user which delegated power has changed
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  function delegateByType(address delegatee, DelegationType delegationType) external override {
    _delegateByType(msg.sender, delegatee, delegationType);
  }

  /**
   * @dev delegates all the powers to a specific user
   * @param delegatee the user to which the power will be delegated
   **/
  function delegate(address delegatee) external override {
    _delegateByType(msg.sender, delegatee, DelegationType.VOTING_POWER);
    _delegateByType(msg.sender, delegatee, DelegationType.PROPOSITION_POWER);
  }

  /**
   * @dev returns the delegatee of an user
   * @param delegator the address of the delegator
   **/
  function getDelegateeByType(address delegator, DelegationType delegationType)
    external
    override
    view
    returns (address)
  {
    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);

    return _getDelegatee(delegator, delegates);
  }

  /**
   * @dev returns the current delegated power of a user. The current power is the
   * power delegated at the time of the last snapshot
   * @param user the user
   **/
  function getPowerCurrent(address user, DelegationType delegationType)
    external
    override
    view
    returns (uint256)
  {
    (
      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
      mapping(address => uint256) storage snapshotsCounts,

    ) = _getDelegationDataByType(delegationType);

    return _searchByBlockNumber(snapshots, snapshotsCounts, user, block.number);
  }

  /**
   * @dev returns the delegated power of a user at a certain block
   * @param user the user
   **/
  function getPowerAtBlock(
    address user,
    uint256 blockNumber,
    DelegationType delegationType
  ) external override view returns (uint256) {
    (
      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
      mapping(address => uint256) storage snapshotsCounts,

    ) = _getDelegationDataByType(delegationType);

    return _searchByBlockNumber(snapshots, snapshotsCounts, user, blockNumber);
  }

  /**
   * @dev returns the total supply at a certain block number
   * used by the voting strategy contracts to calculate the total votes needed for threshold/quorum
   * In this initial implementation with no AAVE minting, simply returns the current supply
   * A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future
   **/
  function totalSupplyAt(uint256 blockNumber) external override view returns (uint256) {
    return super.totalSupply();
  }

  /**
   * @dev delegates the specific power to a delegatee
   * @param delegatee the user which delegated power has changed
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  function _delegateByType(
    address delegator,
    address delegatee,
    DelegationType delegationType
  ) internal {
    require(delegatee != address(0), 'INVALID_DELEGATEE');

    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);

    uint256 delegatorBalance = balanceOf(delegator);

    address previousDelegatee = _getDelegatee(delegator, delegates);

    delegates[delegator] = delegatee;

    _moveDelegatesByType(previousDelegatee, delegatee, delegatorBalance, delegationType);
    emit DelegateChanged(delegator, delegatee, delegationType);
  }

  /**
   * @dev moves delegated power from one user to another
   * @param from the user from which delegated power is moved
   * @param to the user that will receive the delegated power
   * @param amount the amount of delegated power to be moved
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  function _moveDelegatesByType(
    address from,
    address to,
    uint256 amount,
    DelegationType delegationType
  ) internal {
    if (from == to) {
      return;
    }

    (
      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
      mapping(address => uint256) storage snapshotsCounts,

    ) = _getDelegationDataByType(delegationType);

    if (from != address(0)) {
      uint256 previous = 0;
      uint256 fromSnapshotsCount = snapshotsCounts[from];

      if (fromSnapshotsCount != 0) {
        previous = snapshots[from][fromSnapshotsCount - 1].value;
      } else {
        previous = balanceOf(from);
      }

      _writeSnapshot(
        snapshots,
        snapshotsCounts,
        from,
        uint128(previous),
        uint128(previous.sub(amount))
      );

      emit DelegatedPowerChanged(from, previous.sub(amount), delegationType);
    }
    if (to != address(0)) {
      uint256 previous = 0;
      uint256 toSnapshotsCount = snapshotsCounts[to];
      if (toSnapshotsCount != 0) {
        previous = snapshots[to][toSnapshotsCount - 1].value;
      } else {
        previous = balanceOf(to);
      }

      _writeSnapshot(
        snapshots,
        snapshotsCounts,
        to,
        uint128(previous),
        uint128(previous.add(amount))
      );

      emit DelegatedPowerChanged(to, previous.add(amount), delegationType);
    }
  }

  /**
   * @dev searches a snapshot by block number. Uses binary search.
   * @param snapshots the snapshots mapping
   * @param snapshotsCounts the number of snapshots
   * @param user the user for which the snapshot is being searched
   * @param blockNumber the block number being searched
   **/
  function _searchByBlockNumber(
    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
    mapping(address => uint256) storage snapshotsCounts,
    address user,
    uint256 blockNumber
  ) internal view returns (uint256) {
    require(blockNumber <= block.number, 'INVALID_BLOCK_NUMBER');

    uint256 snapshotsCount = snapshotsCounts[user];

    if (snapshotsCount == 0) {
      return balanceOf(user);
    }

    // First check most recent balance
    if (snapshots[user][snapshotsCount - 1].blockNumber <= blockNumber) {
      return snapshots[user][snapshotsCount - 1].value;
    }

    // Next check implicit zero balance
    if (snapshots[user][0].blockNumber > blockNumber) {
      return 0;
    }

    uint256 lower = 0;
    uint256 upper = snapshotsCount - 1;
    while (upper > lower) {
      uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow
      Snapshot memory snapshot = snapshots[user][center];
      if (snapshot.blockNumber == blockNumber) {
        return snapshot.value;
      } else if (snapshot.blockNumber < blockNumber) {
        lower = center;
      } else {
        upper = center - 1;
      }
    }
    return snapshots[user][lower].value;
  }

  /**
   * @dev returns the delegation data (snapshot, snapshotsCount, list of delegates) by delegation type
   * NOTE: Ideal implementation would have mapped this in a struct by delegation type. Unfortunately,
   * the AAVE token and StakeToken already include a mapping for the snapshots, so we require contracts
   * who inherit from this to provide access to the delegation data by overriding this method.
   * @param delegationType the type of delegation
   **/
  function _getDelegationDataByType(DelegationType delegationType)
    internal
    virtual
    view
    returns (
      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots
      mapping(address => uint256) storage, //snapshots count
      mapping(address => address) storage //delegatees list
    );

  /**
   * @dev Writes a snapshot for an owner of tokens
   * @param owner The owner of the tokens
   * @param oldValue The value before the operation that is gonna be executed after the snapshot
   * @param newValue The value after the operation
   */
  function _writeSnapshot(
    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
    mapping(address => uint256) storage snapshotsCounts,
    address owner,
    uint128 oldValue,
    uint128 newValue
  ) internal {
    uint128 currentBlock = uint128(block.number);

    uint256 ownerSnapshotsCount = snapshotsCounts[owner];
    mapping(uint256 => Snapshot) storage snapshotsOwner = snapshots[owner];

    // Doing multiple operations in the same block
    if (
      ownerSnapshotsCount != 0 &&
      snapshotsOwner[ownerSnapshotsCount - 1].blockNumber == currentBlock
    ) {
      snapshotsOwner[ownerSnapshotsCount - 1].value = newValue;
    } else {
      snapshotsOwner[ownerSnapshotsCount] = Snapshot(currentBlock, newValue);
      snapshotsCounts[owner] = ownerSnapshotsCount + 1;
    }
  }

  /**
   * @dev returns the user delegatee. If a user never performed any delegation,
   * his delegated address will be 0x0. In that case we simply return the user itself
   * @param delegator the address of the user for which return the delegatee
   * @param delegates the array of delegates for a particular type of delegation
   **/
  function _getDelegatee(address delegator, mapping(address => address) storage delegates)
    internal
    view
    returns (address)
  {
    address previousDelegatee = delegates[delegator];

    if (previousDelegatee == address(0)) {
      return delegator;
    }

    return previousDelegatee;
  }
}

/**
 * @notice implementation of the AAVE token contract
 * @author Aave
 */
contract AaveTokenV2 is GovernancePowerDelegationERC20, VersionedInitializable {
  using SafeMath for uint256;
  using SafeERC20 for IERC20;

  string internal constant NAME = 'Aave Token';
  string internal constant SYMBOL = 'AAVE';
  uint8 internal constant DECIMALS = 18;

  uint256 public constant REVISION = 3;

  /// @dev owner => next valid nonce to submit with permit()
  mapping(address => uint256) public _nonces;

  mapping(address => mapping(uint256 => Snapshot)) public _votingSnapshots;

  mapping(address => uint256) public _votingSnapshotsCounts;

  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer
  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility
  /// to control all potential reentrancies by calling back the AaveToken
  ITransferHook public _aaveGovernance;

  bytes32 public DOMAIN_SEPARATOR;
  bytes public constant EIP712_REVISION = bytes('1');
  bytes32 internal constant EIP712_DOMAIN = keccak256(
    'EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'
  );
  bytes32 public constant PERMIT_TYPEHASH = keccak256(
    'Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)'
  );

  mapping(address => address) internal _votingDelegates;

  mapping(address => mapping(uint256 => Snapshot)) internal _propositionPowerSnapshots;
  mapping(address => uint256) internal _propositionPowerSnapshotsCounts;

  mapping(address => address) internal _propositionPowerDelegates;

  event TokensRescued(address indexed tokenRescued, address indexed aaveMerkleDistributor, uint256 amountRescued);

  constructor() ERC20(NAME, SYMBOL) public {
    lastInitializedRevision = REVISION;
  }

  /**
   * @dev initializes the contract upon assignment to the InitializableAdminUpgradeabilityProxy
   */
  function initialize(address[] memory tokens, uint256[] memory amounts, address aaveMerkleDistributor, address lendToken, uint256 lendToAaveAmount) external initializer {
    // send tokens to distributor
    require(tokens.length == amounts.length, 'initialize(): amounts and tokens lengths inconsistent'); 
    for(uint i = 0; i < tokens.length; i++) {
      IERC20(tokens[i]).safeTransfer(aaveMerkleDistributor, amounts[i]);

      emit TokensRescued(tokens[i], aaveMerkleDistributor, amounts[i]);
    }

    IERC20(lendToken).safeTransfer(lendToken, lendToAaveAmount);
  }

  /**
   * @dev implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md
   * @param owner the owner of the funds
   * @param spender the spender
   * @param value the amount
   * @param deadline the deadline timestamp, type(uint256).max for no deadline
   * @param v signature param
   * @param s signature param
   * @param r signature param
   */

  function permit(
    address owner,
    address spender,
    uint256 value,
    uint256 deadline,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external {
    require(owner != address(0), 'INVALID_OWNER');
    //solium-disable-next-line
    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');
    uint256 currentValidNonce = _nonces[owner];
    bytes32 digest = keccak256(
      abi.encodePacked(
        '\\\\x19\\\\x01',
        DOMAIN_SEPARATOR,
        keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, currentValidNonce, deadline))
      )
    );

    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');
    _nonces[owner] = currentValidNonce.add(1);
    _approve(owner, spender, value);
  }

  /**
   * @dev returns the revision of the implementation contract
   */
  function getRevision() internal override pure returns (uint256) {
    return REVISION;
  }

  /**
   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn
   * - On _transfer, it writes snapshots for both \\"from\\" and \\"to\\"
   * - On _mint, only for _to
   * - On _burn, only for _from
   * @param from the from address
   * @param to the to address
   * @param amount the amount to transfer
   */
  function _beforeTokenTransfer(
    address from,
    address to,
    uint256 amount
  ) internal override {
    address votingFromDelegatee = _getDelegatee(from, _votingDelegates);
    address votingToDelegatee = _getDelegatee(to, _votingDelegates);

    _moveDelegatesByType(
      votingFromDelegatee,
      votingToDelegatee,
      amount,
      DelegationType.VOTING_POWER
    );

    address propPowerFromDelegatee = _getDelegatee(from, _propositionPowerDelegates);
    address propPowerToDelegatee = _getDelegatee(to, _propositionPowerDelegates);

    _moveDelegatesByType(
      propPowerFromDelegatee,
      propPowerToDelegatee,
      amount,
      DelegationType.PROPOSITION_POWER
    );

    // caching the aave governance address to avoid multiple state loads
    ITransferHook aaveGovernance = _aaveGovernance;
    if (aaveGovernance != ITransferHook(0)) {
      aaveGovernance.onTransfer(from, to, amount);
    }
  }

  function _getDelegationDataByType(DelegationType delegationType)
    internal
    override
    view
    returns (
      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots
      mapping(address => uint256) storage, //snapshots count
      mapping(address => address) storage //delegatees list
    )
  {
    if (delegationType == DelegationType.VOTING_POWER) {
      return (_votingSnapshots, _votingSnapshotsCounts, _votingDelegates);
    } else {
      return (
        _propositionPowerSnapshots,
        _propositionPowerSnapshotsCounts,
        _propositionPowerDelegates
      );
    }
  }

  /**
   * @dev Delegates power from signatory to \`delegatee\`
   * @param delegatee The address to delegate votes to
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   * @param nonce The contract state required to match the signature
   * @param expiry The time at which to expire the signature
   * @param v The recovery byte of the signature
   * @param r Half of the ECDSA signature pair
   * @param s Half of the ECDSA signature pair
   */
  function delegateByTypeBySig(
    address delegatee,
    DelegationType delegationType,
    uint256 nonce,
    uint256 expiry,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) public {
    bytes32 structHash = keccak256(
      abi.encode(DELEGATE_BY_TYPE_TYPEHASH, delegatee, uint256(delegationType), nonce, expiry)
    );
    bytes32 digest = keccak256(abi.encodePacked('\\\\x19\\\\x01', DOMAIN_SEPARATOR, structHash));
    address signatory = ecrecover(digest, v, r, s);
    require(signatory != address(0), 'INVALID_SIGNATURE');
    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');
    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');
    _delegateByType(signatory, delegatee, delegationType);
  }

  /**
   * @dev Delegates power from signatory to \`delegatee\`
   * @param delegatee The address to delegate votes to
   * @param nonce The contract state required to match the signature
   * @param expiry The time at which to expire the signature
   * @param v The recovery byte of the signature
   * @param r Half of the ECDSA signature pair
   * @param s Half of the ECDSA signature pair
   */
  function delegateBySig(
    address delegatee,
    uint256 nonce,
    uint256 expiry,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) public {
    bytes32 structHash = keccak256(abi.encode(DELEGATE_TYPEHASH, delegatee, nonce, expiry));
    bytes32 digest = keccak256(abi.encodePacked('\\\\x19\\\\x01', DOMAIN_SEPARATOR, structHash));
    address signatory = ecrecover(digest, v, r, s);
    require(signatory != address(0), 'INVALID_SIGNATURE');
    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');
    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');
    _delegateByType(signatory, delegatee, DelegationType.VOTING_POWER);
    _delegateByType(signatory, delegatee, DelegationType.PROPOSITION_POWER);
  }
}",
          },
        ],
        "main_contract": 0,
        "raw_abi": null,
        "states": [
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003c",
            "indexed": false,
            "name": "_aaveGovernance",
            "offset": 0,
            "simple_type": {
              "type": "address",
            },
            "storage_location": "storage",
            "type": "address",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000041",
            "indexed": false,
            "name": "_propositionPowerDelegates",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => address)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "name": "_totalSupply",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false,
            "name": "lastInitializedRevision",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 128,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
            ],
            "index": "0x000000000000000000000000000000000000000000000000000000000000003a",
            "indexed": false,
            "name": "_votingSnapshots",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (address => mapping (uint256 => tuple))",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "name": "_balances",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false,
            "name": "_name",
            "offset": 0,
            "simple_type": {
              "type": "string",
            },
            "storage_location": "storage",
            "type": "string",
          },
          {
            "components": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 128,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint128",
              },
            ],
            "index": "0x000000000000000000000000000000000000000000000000000000000000003f",
            "indexed": false,
            "name": "_propositionPowerSnapshots",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (address => mapping (uint256 => tuple))",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000040",
            "indexed": false,
            "name": "_propositionPowerSnapshotsCounts",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003b",
            "indexed": false,
            "name": "_votingSnapshotsCounts",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003e",
            "indexed": false,
            "name": "_votingDelegates",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => address)",
          },
          {
            "components": null,
            "index": "0x000000000000000000000000000000000000000000000000000000000000003d",
            "indexed": false,
            "name": "DOMAIN_SEPARATOR",
            "offset": 0,
            "simple_type": {
              "type": "bytes",
            },
            "storage_location": "storage",
            "type": "bytes32",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "name": "_allowances",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => mapping (address => uint256))",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "name": "_symbol",
            "offset": 0,
            "simple_type": {
              "type": "string",
            },
            "storage_location": "storage",
            "type": "string",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false,
            "name": "_decimals",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint8",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false,
            "name": "______gap",
            "offset": 0,
            "simple_type": {
              "nested_type": {
                "type": "uint",
              },
              "type": "array",
            },
            "storage_location": "storage",
            "type": "uint256[50]",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000039",
            "indexed": false,
            "name": "_nonces",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => uint256)",
          },
        ],
      },
      "ens_domain": null,
      "evm_version": "",
      "export": false,
      "id": "eth:1:0x96f68837877fd0414b55050c9e794aecdbcfca59",
      "in_project": false,
      "language": "solidity",
      "libraries": null,
      "network_id": "1",
      "number_of_files": 1,
      "number_of_watches": null,
      "optimization_runs": 200,
      "optimizations_used": true,
      "public": true,
      "type": "contract",
      "verification_date": null,
      "verified_by": "etherscan",
    },
    {
      "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
      "balance": "",
      "compiler_version": "v0.7.5+commit.eb77ed08",
      "contract_id": "eth:1:0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
      "contract_name": "GovernanceStrategy",
      "created_at": "2020-12-10T21:04:11Z",
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "data": {
        "abi": [
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "aave",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "stkAave",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "",
            "outputs": null,
            "stateMutability": "",
            "type": "constructor",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "AAVE",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "STK_AAVE",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getPropositionPowerAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getTotalPropositionSupplyAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getTotalVotingSupplyAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getVotingPowerAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
        ],
        "contract_info": [
          {
            "id": 0,
            "name": "GovernanceStrategy.sol",
            "path": "GovernanceStrategy.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity 0.7.5;
pragma abicoder v2;

interface IERC20 {
  function totalSupplyAt(uint256 blockNumber) external view returns (uint256);

  function balanceOf(address account) external view returns (uint256);
}

interface IGovernancePowerDelegationToken {
  enum DelegationType {VOTING_POWER, PROPOSITION_POWER}

  /**
   * @dev get the power of a user at a specified block
   * @param user address of the user
   * @param blockNumber block number at which to get power
   * @param delegationType delegation type (propose/vote)
   **/
  function getPowerAtBlock(
    address user,
    uint256 blockNumber,
    DelegationType delegationType
  ) external view returns (uint256);
}

interface IGovernanceStrategy {
  /**
   * @dev Returns the Proposition Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Proposition Power
   * @return Power number
   **/
  function getPropositionPowerAt(address user, uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the total supply of Outstanding Proposition Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalPropositionSupplyAt(uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the total supply of Outstanding Voting Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalVotingSupplyAt(uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the Vote Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Vote Power
   * @return Vote number
   **/
  function getVotingPowerAt(address user, uint256 blockNumber) external view returns (uint256);
}

/**
 * @title Governance Strategy contract
 * @dev Smart contract containing logic to measure users' relative power to propose and vote.
 * User Power = User Power from Aave Token + User Power from stkAave Token.
 * User Power from Token = Token Power + Token Power as Delegatee [- Token Power if user has delegated]
 * Two wrapper functions linked to Aave Tokens's GovernancePowerDelegationERC20.sol implementation
 * - getPropositionPowerAt: fetching a user Proposition Power at a specified block
 * - getVotingPowerAt: fetching a user Voting Power at a specified block
 * @author Aave
 **/
contract GovernanceStrategy is IGovernanceStrategy {
  address public immutable AAVE;
  address public immutable STK_AAVE;

  /**
   * @dev Constructor, register tokens used for Voting and Proposition Powers.
   * @param aave The address of the AAVE Token contract.
   * @param stkAave The address of the stkAAVE Token Contract
   **/
  constructor(address aave, address stkAave) {
    AAVE = aave;
    STK_AAVE = stkAave;
  }

  /**
   * @dev Returns the total supply of Proposition Tokens Available for Governance
   * = AAVE Available for governance      + stkAAVE available
   * The supply of AAVE staked in stkAAVE are not taken into account so:
   * = (Supply of AAVE - AAVE in stkAAVE) + (Supply of stkAAVE)
   * = Supply of AAVE, Since the supply of stkAAVE is equal to the number of AAVE staked
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalPropositionSupplyAt(uint256 blockNumber) public view override returns (uint256) {
    return IERC20(AAVE).totalSupplyAt(blockNumber);
  }

  /**
   * @dev Returns the total supply of Outstanding Voting Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalVotingSupplyAt(uint256 blockNumber) public view override returns (uint256) {
    return getTotalPropositionSupplyAt(blockNumber);
  }

  /**
   * @dev Returns the Proposition Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Proposition Power
   * @return Power number
   **/
  function getPropositionPowerAt(address user, uint256 blockNumber)
    public
    view
    override
    returns (uint256)
  {
    return
      _getPowerByTypeAt(
        user,
        blockNumber,
        IGovernancePowerDelegationToken.DelegationType.PROPOSITION_POWER
      );
  }

  /**
   * @dev Returns the Vote Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Vote Power
   * @return Vote number
   **/
  function getVotingPowerAt(address user, uint256 blockNumber)
    public
    view
    override
    returns (uint256)
  {
    return
      _getPowerByTypeAt(
        user,
        blockNumber,
        IGovernancePowerDelegationToken.DelegationType.VOTING_POWER
      );
  }

  function _getPowerByTypeAt(
    address user,
    uint256 blockNumber,
    IGovernancePowerDelegationToken.DelegationType powerType
  ) internal view returns (uint256) {
    return
      IGovernancePowerDelegationToken(AAVE).getPowerAtBlock(user, blockNumber, powerType) +
      IGovernancePowerDelegationToken(STK_AAVE).getPowerAtBlock(user, blockNumber, powerType);
  }
}",
          },
        ],
        "main_contract": 0,
        "raw_abi": null,
      },
      "ens_domain": null,
      "evm_version": "",
      "export": false,
      "id": "eth:1:0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
      "in_project": false,
      "language": "solidity",
      "libraries": null,
      "network_id": "1",
      "number_of_files": 1,
      "number_of_watches": null,
      "optimization_runs": 200,
      "optimizations_used": true,
      "public": true,
      "type": "contract",
      "verification_date": null,
      "verified_by": "etherscan",
    },
    {
      "address": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
      "balance": "",
      "compiler_version": "v0.8.17+commit.8df45f5f",
      "contract_id": "eth:1:0xe427fcbd54169136391cfedf68e96abb13da87a0",
      "contract_name": "ProposalPayloadStkAave",
      "created_at": "2023-04-27T15:14:28Z",
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "data": {
        "abi": [
          {
            "anonymous": false,
            "constant": false,
            "inputs": null,
            "name": "",
            "outputs": null,
            "stateMutability": "",
            "type": "constructor",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "execute",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "STK_AAVE",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
        ],
        "contract_info": [
          {
            "id": 32,
            "name": "Context.sol",
            "path": "src/lib/Context.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)

pragma solidity ^0.8.0;

/**
 * @dev Provides information about the current execution context, including the
 * sender of the transaction and its data. While these are generally available
 * via msg.sender and msg.data, they should not be accessed in such a direct
 * manner, since when dealing with meta-transactions the account sending and
 * paying for execution may not be the actual sender (as far as an application
 * is concerned).
 *
 * This contract is only required for intermediate, library-like contracts.
 */
abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }

    function _msgData() internal view virtual returns (bytes calldata) {
        return msg.data;
    }
}
",
          },
          {
            "id": 33,
            "name": "DistributionTypes.sol",
            "path": "src/lib/DistributionTypes.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;
pragma experimental ABIEncoderV2;

library DistributionTypes {
    struct AssetConfigInput {
        uint128 emissionPerSecond;
        uint256 totalStaked;
        address underlyingAsset;
    }

    struct UserStakeInput {
        address underlyingAsset;
        uint256 stakedByUser;
        uint256 totalStaked;
    }
}
",
          },
          {
            "id": 37,
            "name": "PercentageMath.sol",
            "path": "src/lib/PercentageMath.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

/**
 * @title PercentageMath library
 * @author Aave
 * @notice Provides functions to perform percentage calculations
 * @dev Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOR
 * @dev Operations are rounded half up
 **/

library PercentageMath {
    uint256 constant PERCENTAGE_FACTOR = 1e4; //percentage plus two decimals
    uint256 constant HALF_PERCENT = PERCENTAGE_FACTOR / 2;

    /**
     * @dev Executes a percentage multiplication
     * @param value The value of which the percentage needs to be calculated
     * @param percentage The percentage of the value to be calculated
     * @return The percentage of value
     **/
    function percentMul(uint256 value, uint256 percentage)
        internal
        pure
        returns (uint256)
    {
        if (value == 0 || percentage == 0) {
            return 0;
        }

        require(
            value <= (type(uint256).max) / percentage,
            \\"MATH_MULTIPLICATION_OVERFLOW\\"
        );

        return (value * percentage) / PERCENTAGE_FACTOR;
    }

    /**
     * @dev Executes a percentage division
     * @param value The value of which the percentage needs to be calculated
     * @param percentage The percentage of the value to be calculated
     * @return The value divided the percentage
     **/
    function percentDiv(uint256 value, uint256 percentage)
        internal
        pure
        returns (uint256)
    {
        require(percentage != 0, \\"MATH_DIVISION_BY_ZERO\\");

        require(
            value <= type(uint256).max / PERCENTAGE_FACTOR,
            \\"MATH_MULTIPLICATION_OVERFLOW\\"
        );

        return (value * PERCENTAGE_FACTOR) / percentage;
    }
}
",
          },
          {
            "id": 0,
            "name": "AggregatorInterface.sol",
            "path": "lib/aave-address-book/lib/aave-v3-core/contracts/dependencies/chainlink/AggregatorInterface.sol",
            "source": "// SPDX-License-Identifier: MIT
// Chainlink Contracts v0.8
pragma solidity ^0.8.0;

interface AggregatorInterface {
  function latestAnswer() external view returns (int256);

  function latestTimestamp() external view returns (uint256);

  function latestRound() external view returns (uint256);

  function getAnswer(uint256 roundId) external view returns (int256);

  function getTimestamp(uint256 roundId) external view returns (uint256);

  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);

  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);
}
",
          },
          {
            "id": 2,
            "name": "AaveMisc.sol",
            "path": "lib/aave-address-book/src/AaveMisc.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity >=0.6.0;

interface IAaveEcosystemReserveController {
  /**
   * @notice Proxy function for ERC20's approve(), pointing to a specific collector contract
   * @param collector The collector contract with funds (Aave ecosystem reserve)
   * @param token The asset address
   * @param recipient Allowance's recipient
   * @param amount Allowance to approve
   **/
  function approve(
    address collector,
    // IERC20 token,
    address token,
    address recipient,
    uint256 amount
  ) external;

  /**
   * @notice Proxy function for ERC20's transfer(), pointing to a specific collector contract
   * @param collector The collector contract with funds (Aave ecosystem reserve)
   * @param token The asset address
   * @param recipient Transfer's recipient
   * @param amount Amount to transfer
   **/
  function transfer(
    address collector,
    // IERC20 token,
    address token,
    address recipient,
    uint256 amount
  ) external;

  /**
   * @notice Proxy function to create a stream of token on a specific collector contract
   * @param collector The collector contract with funds (Aave ecosystem reserve)
   * @param recipient The recipient of the stream of token
   * @param deposit Total amount to be streamed
   * @param tokenAddress The ERC20 token to use as streaming asset
   * @param startTime The unix timestamp for when the stream starts
   * @param stopTime The unix timestamp for when the stream stops
   * @return uint256 The stream id created
   **/
  function createStream(
    address collector,
    address recipient,
    uint256 deposit,
    // IERC20 tokenAddress,
    address tokenAddress,
    uint256 startTime,
    uint256 stopTime
  ) external returns (uint256);

  /**
   * @notice Proxy function to withdraw from a stream of token on a specific collector contract
   * @param collector The collector contract with funds (Aave ecosystem reserve)
   * @param streamId The id of the stream to withdraw tokens from
   * @param funds Amount to withdraw
   * @return bool If the withdrawal finished properly
   **/
  function withdrawFromStream(
    address collector,
    uint256 streamId,
    uint256 funds
  ) external returns (bool);

  /**
   * @notice Proxy function to cancel a stream of token on a specific collector contract
   * @param collector The collector contract with funds (Aave ecosystem reserve)
   * @param streamId The id of the stream to cancel
   * @return bool If the cancellation happened correctly
   **/
  function cancelStream(address collector, uint256 streamId) external returns (bool);
}

interface IStreamable {
  struct Stream {
    uint256 deposit;
    uint256 ratePerSecond;
    uint256 remainingBalance;
    uint256 startTime;
    uint256 stopTime;
    address recipient;
    address sender;
    address tokenAddress;
    bool isEntity;
  }

  event CreateStream(
    uint256 indexed streamId,
    address indexed sender,
    address indexed recipient,
    uint256 deposit,
    address tokenAddress,
    uint256 startTime,
    uint256 stopTime
  );

  event WithdrawFromStream(uint256 indexed streamId, address indexed recipient, uint256 amount);

  event CancelStream(
    uint256 indexed streamId,
    address indexed sender,
    address indexed recipient,
    uint256 senderBalance,
    uint256 recipientBalance
  );

  function balanceOf(uint256 streamId, address who) external view returns (uint256 balance);

  function getStream(
    uint256 streamId
  )
    external
    view
    returns (
      address sender,
      address recipient,
      uint256 deposit,
      address token,
      uint256 startTime,
      uint256 stopTime,
      uint256 remainingBalance,
      uint256 ratePerSecond
    );

  function createStream(
    address recipient,
    uint256 deposit,
    address tokenAddress,
    uint256 startTime,
    uint256 stopTime
  ) external returns (uint256 streamId);

  function withdrawFromStream(uint256 streamId, uint256 funds) external returns (bool);

  function cancelStream(uint256 streamId) external returns (bool);

  function initialize(address fundsAdmin) external;

  /**
   * @notice Returns the next available stream id
   * @return nextStreamId Returns the stream id.
   */
  function getNextStreamId() external view returns (uint256);
}

library AaveMisc {
  address internal constant ECOSYSTEM_RESERVE = 0x25F2226B597E8F9514B3F68F00f494cF4f286491;

  IAaveEcosystemReserveController internal constant AAVE_ECOSYSTEM_RESERVE_CONTROLLER =
    IAaveEcosystemReserveController(0x3d569673dAa0575c936c7c67c4E6AedA69CC630C);

  address constant TRANSPARENT_PROXY_FACTORY_ETHEREUM = 0xB4e496f70602fE2AC6Ae511D028BA4D194773B29;
  // owned by short executor
  address constant PROXY_ADMIN_ETHEREUM = 0xD3cF979e676265e4f6379749DECe4708B9A22476;
  // owned by long executor
  address constant PROXY_ADMIN_ETHEREUM_LONG = 0x86C3FfeE349A7cFf7cA88C449717B1b133bfb517;

  address constant TRANSPARENT_PROXY_FACTORY_POLYGON = 0xB4e496f70602fE2AC6Ae511D028BA4D194773B29;
  address constant PROXY_ADMIN_POLYGON = 0xD3cF979e676265e4f6379749DECe4708B9A22476;

  address constant TRANSPARENT_PROXY_FACTORY_AVALANCHE = 0xB4e496f70602fE2AC6Ae511D028BA4D194773B29;
  address constant PROXY_ADMIN_AVALANCHE = 0xD3cF979e676265e4f6379749DECe4708B9A22476;

  address constant TRANSPARENT_PROXY_FACTORY_OPTIMISM = 0xB4e496f70602fE2AC6Ae511D028BA4D194773B29;
  address constant PROXY_ADMIN_OPTIMISM = 0xD3cF979e676265e4f6379749DECe4708B9A22476;

  address constant TRANSPARENT_PROXY_FACTORY_ARBITRUM = 0xB4e496f70602fE2AC6Ae511D028BA4D194773B29;
  address constant PROXY_ADMIN_ARBITRUM = 0xD3cF979e676265e4f6379749DECe4708B9A22476;

  address constant TRANSPARENT_PROXY_FACTORY_FANTOM = 0xB4e496f70602fE2AC6Ae511D028BA4D194773B29;
  address constant PROXY_ADMIN_FANTOM = 0xD3cF979e676265e4f6379749DECe4708B9A22476;

  address constant TRANSPARENT_PROXY_FACTORY_METIS = 0x1dad86dC5990BCE5bFe3A150A4E0ece990d6EBcB;
  address constant PROXY_ADMIN_METIS = 0x1CabD986cBAbDf12E00128DFf03C80ee62C4fd97;
}
",
          },
          {
            "id": 6,
            "name": "Address.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/Address.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)
// From commit https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8b778fa20d6d76340c5fac1ed66c80273f05b95a

pragma solidity ^0.8.1;

/**
 * @dev Collection of functions related to the address type
 */
library Address {
  /**
   * @dev Returns true if \`account\` is a contract.
   *
   * [IMPORTANT]
   * ====
   * It is unsafe to assume that an address for which this function returns
   * false is an externally-owned account (EOA) and not a contract.
   *
   * Among others, \`isContract\` will return false for the following
   * types of addresses:
   *
   *  - an externally-owned account
   *  - a contract in construction
   *  - an address where a contract will be created
   *  - an address where a contract lived, but was destroyed
   * ====
   *
   * [IMPORTANT]
   * ====
   * You shouldn't rely on \`isContract\` to protect against flash loan attacks!
   *
   * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets
   * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract
   * constructor.
   * ====
   */
  function isContract(address account) internal view returns (bool) {
    // This method relies on extcodesize/address.code.length, which returns 0
    // for contracts in construction, since the code is only stored at the end
    // of the constructor execution.

    return account.code.length > 0;
  }

  /**
   * @dev Replacement for Solidity's \`transfer\`: sends \`amount\` wei to
   * \`recipient\`, forwarding all available gas and reverting on errors.
   *
   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost
   * of certain opcodes, possibly making contracts go over the 2300 gas limit
   * imposed by \`transfer\`, making them unable to receive funds via
   * \`transfer\`. {sendValue} removes this limitation.
   *
   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].
   *
   * IMPORTANT: because control is transferred to \`recipient\`, care must be
   * taken to not create reentrancy vulnerabilities. Consider using
   * {ReentrancyGuard} or the
   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].
   */
  function sendValue(address payable recipient, uint256 amount) internal {
    require(address(this).balance >= amount, 'Address: insufficient balance');

    (bool success, ) = recipient.call{value: amount}('');
    require(success, 'Address: unable to send value, recipient may have reverted');
  }

  /**
   * @dev Performs a Solidity function call using a low level \`call\`. A
   * plain \`call\` is an unsafe replacement for a function call: use this
   * function instead.
   *
   * If \`target\` reverts with a revert reason, it is bubbled up by this
   * function (like regular Solidity function calls).
   *
   * Returns the raw returned data. To convert to the expected return value,
   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[\`abi.decode\`].
   *
   * Requirements:
   *
   * - \`target\` must be a contract.
   * - calling \`target\` with \`data\` must not revert.
   *
   * _Available since v3.1._
   */
  function functionCall(address target, bytes memory data) internal returns (bytes memory) {
    return functionCallWithValue(target, data, 0, 'Address: low-level call failed');
  }

  /**
   * @dev Same as {xref-Address-functionCall-address-bytes-}[\`functionCall\`], but with
   * \`errorMessage\` as a fallback revert reason when \`target\` reverts.
   *
   * _Available since v3.1._
   */
  function functionCall(
    address target,
    bytes memory data,
    string memory errorMessage
  ) internal returns (bytes memory) {
    return functionCallWithValue(target, data, 0, errorMessage);
  }

  /**
   * @dev Same as {xref-Address-functionCall-address-bytes-}[\`functionCall\`],
   * but also transferring \`value\` wei to \`target\`.
   *
   * Requirements:
   *
   * - the calling contract must have an ETH balance of at least \`value\`.
   * - the called Solidity function must be \`payable\`.
   *
   * _Available since v3.1._
   */
  function functionCallWithValue(
    address target,
    bytes memory data,
    uint256 value
  ) internal returns (bytes memory) {
    return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');
  }

  /**
   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[\`functionCallWithValue\`], but
   * with \`errorMessage\` as a fallback revert reason when \`target\` reverts.
   *
   * _Available since v3.1._
   */
  function functionCallWithValue(
    address target,
    bytes memory data,
    uint256 value,
    string memory errorMessage
  ) internal returns (bytes memory) {
    require(address(this).balance >= value, 'Address: insufficient balance for call');
    (bool success, bytes memory returndata) = target.call{value: value}(data);
    return verifyCallResultFromTarget(target, success, returndata, errorMessage);
  }

  /**
   * @dev Same as {xref-Address-functionCall-address-bytes-}[\`functionCall\`],
   * but performing a static call.
   *
   * _Available since v3.3._
   */
  function functionStaticCall(
    address target,
    bytes memory data
  ) internal view returns (bytes memory) {
    return functionStaticCall(target, data, 'Address: low-level static call failed');
  }

  /**
   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[\`functionCall\`],
   * but performing a static call.
   *
   * _Available since v3.3._
   */
  function functionStaticCall(
    address target,
    bytes memory data,
    string memory errorMessage
  ) internal view returns (bytes memory) {
    (bool success, bytes memory returndata) = target.staticcall(data);
    return verifyCallResultFromTarget(target, success, returndata, errorMessage);
  }

  /**
   * @dev Same as {xref-Address-functionCall-address-bytes-}[\`functionCall\`],
   * but performing a delegate call.
   *
   * _Available since v3.4._
   */
  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {
    return functionDelegateCall(target, data, 'Address: low-level delegate call failed');
  }

  /**
   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[\`functionCall\`],
   * but performing a delegate call.
   *
   * _Available since v3.4._
   */
  function functionDelegateCall(
    address target,
    bytes memory data,
    string memory errorMessage
  ) internal returns (bytes memory) {
    (bool success, bytes memory returndata) = target.delegatecall(data);
    return verifyCallResultFromTarget(target, success, returndata, errorMessage);
  }

  /**
   * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling
   * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.
   *
   * _Available since v4.8._
   */
  function verifyCallResultFromTarget(
    address target,
    bool success,
    bytes memory returndata,
    string memory errorMessage
  ) internal view returns (bytes memory) {
    if (success) {
      if (returndata.length == 0) {
        // only check isContract if the call was successful and the return data is empty
        // otherwise we already know that it was a contract
        require(isContract(target), 'Address: call to non-contract');
      }
      return returndata;
    } else {
      _revert(returndata, errorMessage);
    }
  }

  /**
   * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the
   * revert reason or using the provided one.
   *
   * _Available since v4.3._
   */
  function verifyCallResult(
    bool success,
    bytes memory returndata,
    string memory errorMessage
  ) internal pure returns (bytes memory) {
    if (success) {
      return returndata;
    } else {
      _revert(returndata, errorMessage);
    }
  }

  function _revert(bytes memory returndata, string memory errorMessage) private pure {
    // Look for revert reason and bubble it up if present
    if (returndata.length > 0) {
      // The easiest way to bubble the revert reason is using memory via assembly
      /// @solidity memory-safe-assembly
      assembly {
        let returndata_size := mload(returndata)
        revert(add(32, returndata), returndata_size)
      }
    } else {
      revert(errorMessage);
    }
  }
}
",
          },
          {
            "id": 9,
            "name": "StorageSlot.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/StorageSlot.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)
// From commit https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8b778fa20d6d76340c5fac1ed66c80273f05b95a

pragma solidity ^0.8.0;

/**
 * @dev Library for reading and writing primitive types to specific storage slots.
 *
 * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.
 * This library helps with reading and writing to such slots without the need for inline assembly.
 *
 * The functions in this library return Slot structs that contain a \`value\` member that can be used to read or write.
 *
 * Example usage to set ERC1967 implementation slot:
 * \`\`\`
 * contract ERC1967 {
 *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;
 *
 *     function _getImplementation() internal view returns (address) {
 *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;
 *     }
 *
 *     function _setImplementation(address newImplementation) internal {
 *         require(Address.isContract(newImplementation), \\"ERC1967: new implementation is not a contract\\");
 *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;
 *     }
 * }
 * \`\`\`
 *
 * _Available since v4.1 for \`address\`, \`bool\`, \`bytes32\`, and \`uint256\`._
 */
library StorageSlot {
  struct AddressSlot {
    address value;
  }

  struct BooleanSlot {
    bool value;
  }

  struct Bytes32Slot {
    bytes32 value;
  }

  struct Uint256Slot {
    uint256 value;
  }

  /**
   * @dev Returns an \`AddressSlot\` with member \`value\` located at \`slot\`.
   */
  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {
    /// @solidity memory-safe-assembly
    assembly {
      r.slot := slot
    }
  }

  /**
   * @dev Returns an \`BooleanSlot\` with member \`value\` located at \`slot\`.
   */
  function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {
    /// @solidity memory-safe-assembly
    assembly {
      r.slot := slot
    }
  }

  /**
   * @dev Returns an \`Bytes32Slot\` with member \`value\` located at \`slot\`.
   */
  function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {
    /// @solidity memory-safe-assembly
    assembly {
      r.slot := slot
    }
  }

  /**
   * @dev Returns an \`Uint256Slot\` with member \`value\` located at \`slot\`.
   */
  function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {
    /// @solidity memory-safe-assembly
    assembly {
      r.slot := slot
    }
  }
}
",
          },
          {
            "id": 12,
            "name": "Proxy.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/transparent-proxy/Proxy.sol",
            "source": "// SPDX-License-Identifier: MIT

/**
 * @dev OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)
 * From https://github.com/OpenZeppelin/openzeppelin-contracts/tree/8b778fa20d6d76340c5fac1ed66c80273f05b95a
 *
 * BGD Labs adaptations:
 * - Linting
 */
pragma solidity ^0.8.0;

/**
 * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM
 * instruction \`delegatecall\`. We refer to the second contract as the _implementation_ behind the proxy, and it has to
 * be specified by overriding the virtual {_implementation} function.
 *
 * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a
 * different contract through the {_delegate} function.
 *
 * The success and return data of the delegated call will be returned back to the caller of the proxy.
 */
abstract contract Proxy {
  /**
   * @dev Delegates the current call to \`implementation\`.
   *
   * This function does not return to its internal call site, it will return directly to the external caller.
   */
  function _delegate(address implementation) internal virtual {
    assembly {
      // Copy msg.data. We take full control of memory in this inline assembly
      // block because it will not return to Solidity code. We overwrite the
      // Solidity scratch pad at memory position 0.
      calldatacopy(0, 0, calldatasize())

      // Call the implementation.
      // out and outsize are 0 because we don't know the size yet.
      let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)

      // Copy the returned data.
      returndatacopy(0, 0, returndatasize())

      switch result
      // delegatecall returns 0 on error.
      case 0 {
        revert(0, returndatasize())
      }
      default {
        return(0, returndatasize())
      }
    }
  }

  /**
   * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function
   * and {_fallback} should delegate.
   */
  function _implementation() internal view virtual returns (address);

  /**
   * @dev Delegates the current call to the address returned by \`_implementation()\`.
   *
   * This function does not return to its internal call site, it will return directly to the external caller.
   */
  function _fallback() internal virtual {
    _beforeFallback();
    _delegate(_implementation());
  }

  /**
   * @dev Fallback function that delegates calls to the address returned by \`_implementation()\`. Will run if no other
   * function in the contract matches the call data.
   */
  fallback() external payable virtual {
    _fallback();
  }

  /**
   * @dev Fallback function that delegates calls to the address returned by \`_implementation()\`. Will run if call data
   * is empty.
   */
  receive() external payable virtual {
    _fallback();
  }

  /**
   * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual \`_fallback\`
   * call, or as part of the Solidity \`fallback\` or \`receive\` functions.
   *
   * If overridden should call \`super._beforeFallback()\`.
   */
  function _beforeFallback() internal virtual {}
}
",
          },
          {
            "id": 28,
            "name": "IStakedTokenV2.sol",
            "path": "src/interfaces/IStakedTokenV2.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

interface IStakedTokenV2 {
  struct CooldownSnapshot {
    uint40 timestamp;
    uint216 amount;
  }

  event RewardsAccrued(address user, uint256 amount);
  event RewardsClaimed(
    address indexed from,
    address indexed to,
    uint256 amount
  );
  event Cooldown(address indexed user, uint256 amount);

  /**
   * @dev Allows staking a specified amount of STAKED_TOKEN
   * @param to The address to receiving the shares
   * @param amount The amount of assets to be staked
   */
  function stake(address to, uint256 amount) external;

  /**
   * @dev Redeems shares, and stop earning rewards
   * @param to Address to redeem to
   * @param amount Amount of shares to redeem
   */
  function redeem(address to, uint256 amount) external;

  /**
   * @dev Activates the cooldown period to unstake
   * - It can't be called if the user is not staking
   */
  function cooldown() external;

  /**
   * @dev Claims an \`amount\` of \`REWARD_TOKEN\` to the address \`to\`
   * @param to Address to send the claimed rewards
   * @param amount Amount to stake
   */
  function claimRewards(address to, uint256 amount) external;

  /**
   * @dev Return the total rewards pending to claim by an staker
   * @param staker The staker address
   * @return The rewards
   */
  function getTotalRewardsBalance(address staker)
    external
    view
    returns (uint256);

  /**
   * @dev implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md
   * @param owner the owner of the funds
   * @param spender the spender
   * @param value the amount
   * @param deadline the deadline timestamp, type(uint256).max for no deadline
   * @param v signature param
   * @param s signature param
   * @param r signature param
   */
  function permit(
    address owner,
    address spender,
    uint256 value,
    uint256 deadline,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external;
}
",
          },
          {
            "id": 31,
            "name": "Address.sol",
            "path": "src/lib/Address.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)

pragma solidity ^0.8.1;

/**
 * @dev Collection of functions related to the address type
 */
library Address {
    /**
     * @dev Returns true if \`account\` is a contract.
     *
     * [IMPORTANT]
     * ====
     * It is unsafe to assume that an address for which this function returns
     * false is an externally-owned account (EOA) and not a contract.
     *
     * Among others, \`isContract\` will return false for the following
     * types of addresses:
     *
     *  - an externally-owned account
     *  - a contract in construction
     *  - an address where a contract will be created
     *  - an address where a contract lived, but was destroyed
     * ====
     *
     * [IMPORTANT]
     * ====
     * You shouldn't rely on \`isContract\` to protect against flash loan attacks!
     *
     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets
     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract
     * constructor.
     * ====
     */
    function isContract(address account) internal view returns (bool) {
        // This method relies on extcodesize/address.code.length, which returns 0
        // for contracts in construction, since the code is only stored at the end
        // of the constructor execution.

        return account.code.length > 0;
    }

    /**
     * @dev Replacement for Solidity's \`transfer\`: sends \`amount\` wei to
     * \`recipient\`, forwarding all available gas and reverting on errors.
     *
     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost
     * of certain opcodes, possibly making contracts go over the 2300 gas limit
     * imposed by \`transfer\`, making them unable to receive funds via
     * \`transfer\`. {sendValue} removes this limitation.
     *
     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].
     *
     * IMPORTANT: because control is transferred to \`recipient\`, care must be
     * taken to not create reentrancy vulnerabilities. Consider using
     * {ReentrancyGuard} or the
     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].
     */
    function sendValue(address payable recipient, uint256 amount) internal {
        require(address(this).balance >= amount, \\"Address: insufficient balance\\");

        (bool success, ) = recipient.call{value: amount}(\\"\\");
        require(success, \\"Address: unable to send value, recipient may have reverted\\");
    }

    /**
     * @dev Performs a Solidity function call using a low level \`call\`. A
     * plain \`call\` is an unsafe replacement for a function call: use this
     * function instead.
     *
     * If \`target\` reverts with a revert reason, it is bubbled up by this
     * function (like regular Solidity function calls).
     *
     * Returns the raw returned data. To convert to the expected return value,
     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[\`abi.decode\`].
     *
     * Requirements:
     *
     * - \`target\` must be a contract.
     * - calling \`target\` with \`data\` must not revert.
     *
     * _Available since v3.1._
     */
    function functionCall(address target, bytes memory data) internal returns (bytes memory) {
        return functionCallWithValue(target, data, 0, \\"Address: low-level call failed\\");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[\`functionCall\`], but with
     * \`errorMessage\` as a fallback revert reason when \`target\` reverts.
     *
     * _Available since v3.1._
     */
    function functionCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal returns (bytes memory) {
        return functionCallWithValue(target, data, 0, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[\`functionCall\`],
     * but also transferring \`value\` wei to \`target\`.
     *
     * Requirements:
     *
     * - the calling contract must have an ETH balance of at least \`value\`.
     * - the called Solidity function must be \`payable\`.
     *
     * _Available since v3.1._
     */
    function functionCallWithValue(
        address target,
        bytes memory data,
        uint256 value
    ) internal returns (bytes memory) {
        return functionCallWithValue(target, data, value, \\"Address: low-level call with value failed\\");
    }

    /**
     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[\`functionCallWithValue\`], but
     * with \`errorMessage\` as a fallback revert reason when \`target\` reverts.
     *
     * _Available since v3.1._
     */
    function functionCallWithValue(
        address target,
        bytes memory data,
        uint256 value,
        string memory errorMessage
    ) internal returns (bytes memory) {
        require(address(this).balance >= value, \\"Address: insufficient balance for call\\");
        (bool success, bytes memory returndata) = target.call{value: value}(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[\`functionCall\`],
     * but performing a static call.
     *
     * _Available since v3.3._
     */
    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {
        return functionStaticCall(target, data, \\"Address: low-level static call failed\\");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[\`functionCall\`],
     * but performing a static call.
     *
     * _Available since v3.3._
     */
    function functionStaticCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal view returns (bytes memory) {
        (bool success, bytes memory returndata) = target.staticcall(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[\`functionCall\`],
     * but performing a delegate call.
     *
     * _Available since v3.4._
     */
    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {
        return functionDelegateCall(target, data, \\"Address: low-level delegate call failed\\");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[\`functionCall\`],
     * but performing a delegate call.
     *
     * _Available since v3.4._
     */
    function functionDelegateCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal returns (bytes memory) {
        (bool success, bytes memory returndata) = target.delegatecall(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling
     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.
     *
     * _Available since v4.8._
     */
    function verifyCallResultFromTarget(
        address target,
        bool success,
        bytes memory returndata,
        string memory errorMessage
    ) internal view returns (bytes memory) {
        if (success) {
            if (returndata.length == 0) {
                // only check isContract if the call was successful and the return data is empty
                // otherwise we already know that it was a contract
                require(isContract(target), \\"Address: call to non-contract\\");
            }
            return returndata;
        } else {
            _revert(returndata, errorMessage);
        }
    }

    /**
     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the
     * revert reason or using the provided one.
     *
     * _Available since v4.3._
     */
    function verifyCallResult(
        bool success,
        bytes memory returndata,
        string memory errorMessage
    ) internal pure returns (bytes memory) {
        if (success) {
            return returndata;
        } else {
            _revert(returndata, errorMessage);
        }
    }

    function _revert(bytes memory returndata, string memory errorMessage) private pure {
        // Look for revert reason and bubble it up if present
        if (returndata.length > 0) {
            // The easiest way to bubble the revert reason is using memory via assembly
            /// @solidity memory-safe-assembly
            assembly {
                let returndata_size := mload(returndata)
                revert(add(32, returndata), returndata_size)
            }
        } else {
            revert(errorMessage);
        }
    }
}
",
          },
          {
            "id": 41,
            "name": "VersionedInitializable.sol",
            "path": "src/utils/VersionedInitializable.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

/**
 * @title VersionedInitializable
 *
 * @dev Helper contract to support initializer functions. To use it, replace
 * the constructor with a function that has the \`initializer\` modifier.
 * WARNING: Unlike constructors, initializer functions must be manually
 * invoked. This applies both to deploying an Initializable contract, as well
 * as extending an Initializable contract via inheritance.
 * WARNING: When used with inheritance, manual care must be taken to not invoke
 * a parent initializer twice, or ensure that all initializers are idempotent,
 * because this is not dealt with automatically as with constructors.
 *
 * @author Aave, inspired by the OpenZeppelin Initializable contract
 */
abstract contract VersionedInitializable {
  /**
   * @dev Indicates that the contract has been initialized.
   */
  uint256 internal lastInitializedRevision = 0;

  /**
   * @dev Modifier to use in the initializer function of a contract.
   */
  modifier initializer() {
    uint256 revision = getRevision();
    require(
      revision > lastInitializedRevision,
      'Contract instance has already been initialized'
    );

    lastInitializedRevision = revision;

    _;
  }

  /// @dev returns the revision number of the contract.
  /// Needs to be defined in the inherited class as a constant.
  function getRevision() internal pure virtual returns (uint256);

  // Reserved storage space to allow for layout changes in the future.
  uint256[50] private ______gap;
}
",
          },
          {
            "id": 4,
            "name": "AaveV2Ethereum.sol",
            "path": "lib/aave-address-book/src/AaveV2Ethereum.sol",
            "source": "// SPDX-License-Identifier: MIT
// AUTOGENERATED - DON'T MANUALLY CHANGE
pragma solidity >=0.6.0;

import {ILendingPoolAddressesProvider, ILendingPool, ILendingPoolConfigurator, IAaveOracle, IAaveProtocolDataProvider, ILendingRateOracle} from './AaveV2.sol';
import {ICollector} from './common/ICollector.sol';

library AaveV2Ethereum {
  ILendingPoolAddressesProvider internal constant POOL_ADDRESSES_PROVIDER =
    ILendingPoolAddressesProvider(0xB53C1a33016B2DC2fF3653530bfF1848a515c8c5);

  ILendingPool internal constant POOL = ILendingPool(0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9);

  ILendingPoolConfigurator internal constant POOL_CONFIGURATOR =
    ILendingPoolConfigurator(0x311Bb771e4F8952E6Da169b425E7e92d6Ac45756);

  IAaveOracle internal constant ORACLE = IAaveOracle(0xA50ba011c48153De246E5192C8f9258A2ba79Ca9);

  ILendingRateOracle internal constant LENDING_RATE_ORACLE =
    ILendingRateOracle(0x8A32f49FFbA88aba6EFF96F45D8BD1D4b3f35c7D);

  IAaveProtocolDataProvider internal constant AAVE_PROTOCOL_DATA_PROVIDER =
    IAaveProtocolDataProvider(0x057835Ad21a177dbdd3090bB1CAE03EaCF78Fc6d);

  address internal constant POOL_ADMIN = 0xEE56e2B3D491590B5b31738cC34d5232F378a8D5;

  address internal constant EMERGENCY_ADMIN = 0xCA76Ebd8617a03126B6FB84F9b1c1A0fB71C2633;

  ICollector internal constant COLLECTOR = ICollector(0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c);

  address internal constant DEFAULT_INCENTIVES_CONTROLLER =
    0xd784927Ff2f95ba542BfC824c8a8a98F3495f6b5;

  address internal constant EMISSION_MANAGER = 0xEE56e2B3D491590B5b31738cC34d5232F378a8D5;

  address internal constant POOL_ADDRESSES_PROVIDER_REGISTRY =
    0x52D306e36E3B6B02c153d0266ff0f85d18BCD413;

  address internal constant WETH_GATEWAY = 0xEFFC18fC3b7eb8E676dac549E0c693ad50D1Ce31;

  address internal constant REPAY_WITH_COLLATERAL_ADAPTER =
    0x80Aca0C645fEdABaa20fd2Bf0Daf57885A309FE6;

  address internal constant SWAP_COLLATERAL_ADAPTER = 0x135896DE8421be2ec868E0b811006171D9df802A;

  address internal constant MIGRATION_HELPER = 0xB748952c7BC638F31775245964707Bcc5DDFabFC;

  address internal constant WALLET_BALANCE_PROVIDER = 0x8E8dAd5409E0263a51C0aB5055dA66Be28cFF922;

  address internal constant UI_POOL_DATA_PROVIDER = 0x00e50FAB64eBB37b87df06Aa46b8B35d5f1A4e1A;

  address internal constant UI_INCENTIVE_DATA_PROVIDER = 0xD01ab9a6577E1D84F142e44D49380e23A340387d;
}

library AaveV2EthereumAssets {
  address internal constant USDT_UNDERLYING = 0xdAC17F958D2ee523a2206206994597C13D831ec7;

  address internal constant USDT_A_TOKEN = 0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811;

  address internal constant USDT_V_TOKEN = 0x531842cEbbdD378f8ee36D171d6cC9C4fcf475Ec;

  address internal constant USDT_S_TOKEN = 0xe91D55AB2240594855aBd11b3faAE801Fd4c4687;

  address internal constant USDT_ORACLE = 0xEe9F2375b4bdF6387aa8265dD4FB8F16512A1d46;

  address internal constant USDT_INTEREST_RATE_STRATEGY =
    0x33DeAc0861FD6a9235b86172AA939E79085c6f52;

  address internal constant WBTC_UNDERLYING = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;

  address internal constant WBTC_A_TOKEN = 0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656;

  address internal constant WBTC_V_TOKEN = 0x9c39809Dec7F95F5e0713634a4D0701329B3b4d2;

  address internal constant WBTC_S_TOKEN = 0x51B039b9AFE64B78758f8Ef091211b5387eA717c;

  address internal constant WBTC_ORACLE = 0xdeb288F737066589598e9214E782fa5A8eD689e8;

  address internal constant WBTC_INTEREST_RATE_STRATEGY =
    0xf41E8F817e6C399d1AdE102059c454093b24f35B;

  address internal constant WETH_UNDERLYING = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;

  address internal constant WETH_A_TOKEN = 0x030bA81f1c18d280636F32af80b9AAd02Cf0854e;

  address internal constant WETH_V_TOKEN = 0xF63B34710400CAd3e044cFfDcAb00a0f32E33eCf;

  address internal constant WETH_S_TOKEN = 0x4e977830ba4bd783C0BB7F15d3e243f73FF57121;

  address internal constant WETH_ORACLE = 0x0000000000000000000000000000000000000000;

  address internal constant WETH_INTEREST_RATE_STRATEGY =
    0xb8975328Aa52c00B9Ec1e11e518C4900f2e6C62a;

  address internal constant YFI_UNDERLYING = 0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e;

  address internal constant YFI_A_TOKEN = 0x5165d24277cD063F5ac44Efd447B27025e888f37;

  address internal constant YFI_V_TOKEN = 0x7EbD09022Be45AD993BAA1CEc61166Fcc8644d97;

  address internal constant YFI_S_TOKEN = 0xca823F78C2Dd38993284bb42Ba9b14152082F7BD;

  address internal constant YFI_ORACLE = 0x7c5d4F8345e66f68099581Db340cd65B078C41f4;

  address internal constant YFI_INTEREST_RATE_STRATEGY = 0xfd71623D7F41360aefE200de4f17E20A29e1d58C;

  address internal constant ZRX_UNDERLYING = 0xE41d2489571d322189246DaFA5ebDe1F4699F498;

  address internal constant ZRX_A_TOKEN = 0xDf7FF54aAcAcbFf42dfe29DD6144A69b629f8C9e;

  address internal constant ZRX_V_TOKEN = 0x85791D117A392097590bDeD3bD5abB8d5A20491A;

  address internal constant ZRX_S_TOKEN = 0x071B4323a24E73A5afeEbe34118Cd21B8FAAF7C3;

  address internal constant ZRX_ORACLE = 0x2Da4983a622a8498bb1a21FaE9D8F6C664939962;

  address internal constant ZRX_INTEREST_RATE_STRATEGY = 0x1a4babC0e20d892167792AC79618273711afD3e7;

  address internal constant UNI_UNDERLYING = 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984;

  address internal constant UNI_A_TOKEN = 0xB9D7CB55f463405CDfBe4E90a6D2Df01C2B92BF1;

  address internal constant UNI_V_TOKEN = 0x5BdB050A92CADcCfCDcCCBFC17204a1C9cC0Ab73;

  address internal constant UNI_S_TOKEN = 0xD939F7430dC8D5a427f156dE1012A56C18AcB6Aa;

  address internal constant UNI_ORACLE = 0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e;

  address internal constant UNI_INTEREST_RATE_STRATEGY = 0x24ABFac8dd8f270D752837fDFe3B3C735361f4eE;

  address internal constant AAVE_UNDERLYING = 0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9;

  address internal constant AAVE_A_TOKEN = 0xFFC97d72E13E01096502Cb8Eb52dEe56f74DAD7B;

  address internal constant AAVE_V_TOKEN = 0xF7DBA49d571745D9d7fcb56225B05BEA803EBf3C;

  address internal constant AAVE_S_TOKEN = 0x079D6a3E844BcECf5720478A718Edb6575362C5f;

  address internal constant AAVE_ORACLE = 0x6Df09E975c830ECae5bd4eD9d90f3A95a4f88012;

  address internal constant AAVE_INTEREST_RATE_STRATEGY =
    0xd4cA26F2496195C4F886D464D8578368236bB747;

  address internal constant BAT_UNDERLYING = 0x0D8775F648430679A709E98d2b0Cb6250d2887EF;

  address internal constant BAT_A_TOKEN = 0x05Ec93c0365baAeAbF7AefFb0972ea7ECdD39CF1;

  address internal constant BAT_V_TOKEN = 0xfc218A6Dfe6901CB34B1a5281FC6f1b8e7E56877;

  address internal constant BAT_S_TOKEN = 0x277f8676FAcf4dAA5a6EA38ba511B7F65AA02f9F;

  address internal constant BAT_ORACLE = 0x0d16d4528239e9ee52fa531af613AcdB23D88c94;

  address internal constant BAT_INTEREST_RATE_STRATEGY = 0xBdfC85b140edF1FeaFd6eD664027AA4C23b4A29F;

  address internal constant BUSD_UNDERLYING = 0x4Fabb145d64652a948d72533023f6E7A623C7C53;

  address internal constant BUSD_A_TOKEN = 0xA361718326c15715591c299427c62086F69923D9;

  address internal constant BUSD_V_TOKEN = 0xbA429f7011c9fa04cDd46a2Da24dc0FF0aC6099c;

  address internal constant BUSD_S_TOKEN = 0x4A7A63909A72D268b1D8a93a9395d098688e0e5C;

  address internal constant BUSD_ORACLE = 0x614715d2Af89E6EC99A233818275142cE88d1Cfd;

  address internal constant BUSD_INTEREST_RATE_STRATEGY =
    0x67a81df2b7FAf4a324D94De9Cc778704F4500478;

  address internal constant DAI_UNDERLYING = 0x6B175474E89094C44Da98b954EedeAC495271d0F;

  address internal constant DAI_A_TOKEN = 0x028171bCA77440897B824Ca71D1c56caC55b68A3;

  address internal constant DAI_V_TOKEN = 0x6C3c78838c761c6Ac7bE9F59fe808ea2A6E4379d;

  address internal constant DAI_S_TOKEN = 0x778A13D3eeb110A4f7bb6529F99c000119a08E92;

  address internal constant DAI_ORACLE = 0x773616E4d11A78F511299002da57A0a94577F1f4;

  address internal constant DAI_INTEREST_RATE_STRATEGY = 0xfffE32106A68aA3eD39CcCE673B646423EEaB62a;

  address internal constant ENJ_UNDERLYING = 0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c;

  address internal constant ENJ_A_TOKEN = 0xaC6Df26a590F08dcC95D5a4705ae8abbc88509Ef;

  address internal constant ENJ_V_TOKEN = 0x38995F292a6E31b78203254fE1cdd5Ca1010A446;

  address internal constant ENJ_S_TOKEN = 0x943DcCA156b5312Aa24c1a08769D67FEce4ac14C;

  address internal constant ENJ_ORACLE = 0x24D9aB51950F3d62E9144fdC2f3135DAA6Ce8D1B;

  address internal constant ENJ_INTEREST_RATE_STRATEGY = 0x4a4fb6B26e7F516594b7242240039EA8FAAc897a;

  address internal constant KNC_UNDERLYING = 0xdd974D5C2e2928deA5F71b9825b8b646686BD200;

  address internal constant KNC_A_TOKEN = 0x39C6b3e42d6A679d7D776778Fe880BC9487C2EDA;

  address internal constant KNC_V_TOKEN = 0x6B05D1c608015Ccb8e205A690cB86773A96F39f1;

  address internal constant KNC_S_TOKEN = 0x9915dfb872778B2890a117DA1F35F335eb06B54f;

  address internal constant KNC_ORACLE = 0x656c0544eF4C98A6a98491833A89204Abb045d6b;

  address internal constant KNC_INTEREST_RATE_STRATEGY = 0xFDBDa42D2aC1bfbbc10555eb255De8387b8977C4;

  address internal constant LINK_UNDERLYING = 0x514910771AF9Ca656af840dff83E8264EcF986CA;

  address internal constant LINK_A_TOKEN = 0xa06bC25B5805d5F8d82847D191Cb4Af5A3e873E0;

  address internal constant LINK_V_TOKEN = 0x0b8f12b1788BFdE65Aa1ca52E3e9F3Ba401be16D;

  address internal constant LINK_S_TOKEN = 0xFB4AEc4Cc858F2539EBd3D37f2a43eAe5b15b98a;

  address internal constant LINK_ORACLE = 0xDC530D9457755926550b59e8ECcdaE7624181557;

  address internal constant LINK_INTEREST_RATE_STRATEGY =
    0xED6547b83276B076B771B88FcCbD68BDeDb3927f;

  address internal constant MANA_UNDERLYING = 0x0F5D2fB29fb7d3CFeE444a200298f468908cC942;

  address internal constant MANA_A_TOKEN = 0xa685a61171bb30d4072B338c80Cb7b2c865c873E;

  address internal constant MANA_V_TOKEN = 0x0A68976301e46Ca6Ce7410DB28883E309EA0D352;

  address internal constant MANA_S_TOKEN = 0xD86C74eA2224f4B8591560652b50035E4e5c0a3b;

  address internal constant MANA_ORACLE = 0x82A44D92D6c329826dc557c5E1Be6ebeC5D5FeB9;

  address internal constant MANA_INTEREST_RATE_STRATEGY =
    0x004fC239848D8A8d3304729b78ba81d73d83C99F;

  address internal constant MKR_UNDERLYING = 0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2;

  address internal constant MKR_A_TOKEN = 0xc713e5E149D5D0715DcD1c156a020976e7E56B88;

  address internal constant MKR_V_TOKEN = 0xba728eAd5e496BE00DCF66F650b6d7758eCB50f8;

  address internal constant MKR_S_TOKEN = 0xC01C8E4b12a89456a9fD4e4e75B72546Bf53f0B5;

  address internal constant MKR_ORACLE = 0x24551a8Fb2A7211A25a17B1481f043A8a8adC7f2;

  address internal constant MKR_INTEREST_RATE_STRATEGY = 0xE3a3DE71B827cB73663A24cDB6243bA7F986cC3b;

  address internal constant REN_UNDERLYING = 0x408e41876cCCDC0F92210600ef50372656052a38;

  address internal constant REN_A_TOKEN = 0xCC12AbE4ff81c9378D670De1b57F8e0Dd228D77a;

  address internal constant REN_V_TOKEN = 0xcd9D82d33bd737De215cDac57FE2F7f04DF77FE0;

  address internal constant REN_S_TOKEN = 0x3356Ec1eFA75d9D150Da1EC7d944D9EDf73703B7;

  address internal constant REN_ORACLE = 0x3147D7203354Dc06D9fd350c7a2437bcA92387a4;

  address internal constant REN_INTEREST_RATE_STRATEGY = 0x9B1e3C7483F0f21abFEaE3AeBC9b47b5f23f5bB0;

  address internal constant SNX_UNDERLYING = 0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F;

  address internal constant SNX_A_TOKEN = 0x35f6B052C598d933D69A4EEC4D04c73A191fE6c2;

  address internal constant SNX_V_TOKEN = 0x267EB8Cf715455517F9BD5834AeAE3CeA1EBdbD8;

  address internal constant SNX_S_TOKEN = 0x8575c8ae70bDB71606A53AeA1c6789cB0fBF3166;

  address internal constant SNX_ORACLE = 0x79291A9d692Df95334B1a0B3B4AE6bC606782f8c;

  address internal constant SNX_INTEREST_RATE_STRATEGY = 0xCc92073dDe8aE03bAA1812AC5cF22e69b5E76914;

  address internal constant sUSD_UNDERLYING = 0x57Ab1ec28D129707052df4dF418D58a2D46d5f51;

  address internal constant sUSD_A_TOKEN = 0x6C5024Cd4F8A59110119C56f8933403A539555EB;

  address internal constant sUSD_V_TOKEN = 0xdC6a3Ab17299D9C2A412B0e0a4C1f55446AE0817;

  address internal constant sUSD_S_TOKEN = 0x30B0f7324feDF89d8eff397275F8983397eFe4af;

  address internal constant sUSD_ORACLE = 0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757;

  address internal constant sUSD_INTEREST_RATE_STRATEGY =
    0x3082D0a473385Ed2cbd1f16087ab8b7BF79f0355;

  address internal constant TUSD_UNDERLYING = 0x0000000000085d4780B73119b644AE5ecd22b376;

  address internal constant TUSD_A_TOKEN = 0x101cc05f4A51C0319f570d5E146a8C625198e636;

  address internal constant TUSD_V_TOKEN = 0x01C0eb1f8c6F1C1bF74ae028697ce7AA2a8b0E92;

  address internal constant TUSD_S_TOKEN = 0x7f38d60D94652072b2C44a18c0e14A481EC3C0dd;

  address internal constant TUSD_ORACLE = 0x3886BA987236181D98F2401c507Fb8BeA7871dF2;

  address internal constant TUSD_INTEREST_RATE_STRATEGY =
    0x6bcE15B789e537f3abA3C60CB183F0E8737f05eC;

  address internal constant USDC_UNDERLYING = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;

  address internal constant USDC_A_TOKEN = 0xBcca60bB61934080951369a648Fb03DF4F96263C;

  address internal constant USDC_V_TOKEN = 0x619beb58998eD2278e08620f97007e1116D5D25b;

  address internal constant USDC_S_TOKEN = 0xE4922afAB0BbaDd8ab2a88E0C79d884Ad337fcA6;

  address internal constant USDC_ORACLE = 0x986b5E1e1755e3C2440e960477f25201B0a8bbD4;

  address internal constant USDC_INTEREST_RATE_STRATEGY =
    0x8Cae0596bC1eD42dc3F04c4506cfe442b3E74e27;

  address internal constant CRV_UNDERLYING = 0xD533a949740bb3306d119CC777fa900bA034cd52;

  address internal constant CRV_A_TOKEN = 0x8dAE6Cb04688C62d939ed9B68d32Bc62e49970b1;

  address internal constant CRV_V_TOKEN = 0x00ad8eBF64F141f1C81e9f8f792d3d1631c6c684;

  address internal constant CRV_S_TOKEN = 0x9288059a74f589C919c7Cf1Db433251CdFEB874B;

  address internal constant CRV_ORACLE = 0x8a12Be339B0cD1829b91Adc01977caa5E9ac121e;

  address internal constant CRV_INTEREST_RATE_STRATEGY = 0xA4C2C730A4c01c64d54ce0165c27120989A3C743;

  address internal constant GUSD_UNDERLYING = 0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd;

  address internal constant GUSD_A_TOKEN = 0xD37EE7e4f452C6638c96536e68090De8cBcdb583;

  address internal constant GUSD_V_TOKEN = 0x279AF5b99540c1A3A7E3CDd326e19659401eF99e;

  address internal constant GUSD_S_TOKEN = 0xf8aC64ec6Ff8E0028b37EB89772d21865321bCe0;

  address internal constant GUSD_ORACLE = 0xEc6f4Cd64d28Ef32507e2dc399948aAe9Bbedd7e;

  address internal constant GUSD_INTEREST_RATE_STRATEGY =
    0x2893405d64a7Bc8Db02Fa617351a5399d59eCf8D;

  address internal constant BAL_UNDERLYING = 0xba100000625a3754423978a60c9317c58a424e3D;

  address internal constant BAL_A_TOKEN = 0x272F97b7a56a387aE942350bBC7Df5700f8a4576;

  address internal constant BAL_V_TOKEN = 0x13210D4Fe0d5402bd7Ecbc4B5bC5cFcA3b71adB0;

  address internal constant BAL_S_TOKEN = 0xe569d31590307d05DA3812964F1eDd551D665a0b;

  address internal constant BAL_ORACLE = 0xC1438AA3823A6Ba0C159CfA8D98dF5A994bA120b;

  address internal constant BAL_INTEREST_RATE_STRATEGY = 0x04c28D6fE897859153eA753f986cc249Bf064f71;

  address internal constant xSUSHI_UNDERLYING = 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272;

  address internal constant xSUSHI_A_TOKEN = 0xF256CC7847E919FAc9B808cC216cAc87CCF2f47a;

  address internal constant xSUSHI_V_TOKEN = 0xfAFEDF95E21184E3d880bd56D4806c4b8d31c69A;

  address internal constant xSUSHI_S_TOKEN = 0x73Bfb81D7dbA75C904f430eA8BAe82DB0D41187B;

  address internal constant xSUSHI_ORACLE = 0xF05D9B6C08757EAcb1fbec18e36A1B7566a13DEB;

  address internal constant xSUSHI_INTEREST_RATE_STRATEGY =
    0xb49034Ada4BE5c6Bb3823A623C6250267110b06b;

  address internal constant renFIL_UNDERLYING = 0xD5147bc8e386d91Cc5DBE72099DAC6C9b99276F5;

  address internal constant renFIL_A_TOKEN = 0x514cd6756CCBe28772d4Cb81bC3156BA9d1744aa;

  address internal constant renFIL_V_TOKEN = 0x348e2eBD5E962854871874E444F4122399c02755;

  address internal constant renFIL_S_TOKEN = 0xcAad05C49E14075077915cB5C820EB3245aFb950;

  address internal constant renFIL_ORACLE = 0x0606Be69451B1C9861Ac6b3626b99093b713E801;

  address internal constant renFIL_INTEREST_RATE_STRATEGY =
    0x311C866D55456e465e314A3E9830276B438A73f0;

  address internal constant RAI_UNDERLYING = 0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919;

  address internal constant RAI_A_TOKEN = 0xc9BC48c72154ef3e5425641a3c747242112a46AF;

  address internal constant RAI_V_TOKEN = 0xB5385132EE8321977FfF44b60cDE9fE9AB0B4e6b;

  address internal constant RAI_S_TOKEN = 0x9C72B8476C33AE214ee3e8C20F0bc28496a62032;

  address internal constant RAI_ORACLE = 0x4ad7B025127e89263242aB68F0f9c4E5C033B489;

  address internal constant RAI_INTEREST_RATE_STRATEGY = 0xA7d4df837926cD55036175AfeF38395d56A64c22;

  address internal constant AMPL_UNDERLYING = 0xD46bA6D942050d489DBd938a2C909A5d5039A161;

  address internal constant AMPL_A_TOKEN = 0x1E6bb68Acec8fefBD87D192bE09bb274170a0548;

  address internal constant AMPL_V_TOKEN = 0xf013D90E4e4E3Baf420dFea60735e75dbd42f1e1;

  address internal constant AMPL_S_TOKEN = 0x18152C9f77DAdc737006e9430dB913159645fa87;

  address internal constant AMPL_ORACLE = 0x492575FDD11a0fCf2C6C719867890a7648d526eB;

  address internal constant AMPL_INTEREST_RATE_STRATEGY =
    0x84d1FaD9559b8AC1Fda17d073B8542c8Fb6986dd;

  address internal constant USDP_UNDERLYING = 0x8E870D67F660D95d5be530380D0eC0bd388289E1;

  address internal constant USDP_A_TOKEN = 0x2e8F4bdbE3d47d7d7DE490437AeA9915D930F1A3;

  address internal constant USDP_V_TOKEN = 0xFDb93B3b10936cf81FA59A02A7523B6e2149b2B7;

  address internal constant USDP_S_TOKEN = 0x2387119bc85A74e0BBcbe190d80676CB16F10D4F;

  address internal constant USDP_ORACLE = 0x3a08ebBaB125224b7b6474384Ee39fBb247D2200;

  address internal constant USDP_INTEREST_RATE_STRATEGY =
    0x404d396fc42e20d14585A1a10Cd64BDdC6C6574A;

  address internal constant DPI_UNDERLYING = 0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b;

  address internal constant DPI_A_TOKEN = 0x6F634c6135D2EBD550000ac92F494F9CB8183dAe;

  address internal constant DPI_V_TOKEN = 0x4dDff5885a67E4EffeC55875a3977D7E60F82ae0;

  address internal constant DPI_S_TOKEN = 0xa3953F07f389d719F99FC378ebDb9276177d8A6e;

  address internal constant DPI_ORACLE = 0x029849bbc0b1d93b85a8b6190e979fd38F5760E2;

  address internal constant DPI_INTEREST_RATE_STRATEGY = 0x9440aEc0795D7485e58bCF26622c2f4A681A9671;

  address internal constant FRAX_UNDERLYING = 0x853d955aCEf822Db058eb8505911ED77F175b99e;

  address internal constant FRAX_A_TOKEN = 0xd4937682df3C8aEF4FE912A96A74121C0829E664;

  address internal constant FRAX_V_TOKEN = 0xfE8F19B17fFeF0fDbfe2671F248903055AFAA8Ca;

  address internal constant FRAX_S_TOKEN = 0x3916e3B6c84b161df1b2733dFfc9569a1dA710c2;

  address internal constant FRAX_ORACLE = 0x14d04Fff8D21bd62987a5cE9ce543d2F1edF5D3E;

  address internal constant FRAX_INTEREST_RATE_STRATEGY =
    0xb0a73aC3B10980A598685d4631c83f5348F5D32c;

  address internal constant FEI_UNDERLYING = 0x956F47F50A910163D8BF957Cf5846D573E7f87CA;

  address internal constant FEI_A_TOKEN = 0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3;

  address internal constant FEI_V_TOKEN = 0xC2e10006AccAb7B45D9184FcF5b7EC7763f5BaAe;

  address internal constant FEI_S_TOKEN = 0xd89cF9E8A858F8B4b31Faf793505e112d6c17449;

  address internal constant FEI_ORACLE = 0x7F0D2c2838c6AC24443d13e23d99490017bDe370;

  address internal constant FEI_INTEREST_RATE_STRATEGY = 0xF0bA2a8c12A2354c075b363765EAe825619bd490;

  address internal constant stETH_UNDERLYING = 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84;

  address internal constant stETH_A_TOKEN = 0x1982b2F5814301d4e9a8b0201555376e62F82428;

  address internal constant stETH_V_TOKEN = 0xA9DEAc9f00Dc4310c35603FCD9D34d1A750f81Db;

  address internal constant stETH_S_TOKEN = 0x66457616Dd8489dF5D0AFD8678F4A260088aAF55;

  address internal constant stETH_ORACLE = 0x86392dC19c0b719886221c78AB11eb8Cf5c52812;

  address internal constant stETH_INTEREST_RATE_STRATEGY =
    0xff04ed5f7a6C3a0F1e5Ea20617F8C6f513D5A77c;

  address internal constant ENS_UNDERLYING = 0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72;

  address internal constant ENS_A_TOKEN = 0x9a14e23A58edf4EFDcB360f68cd1b95ce2081a2F;

  address internal constant ENS_V_TOKEN = 0x176808047cc9b7A2C9AE202c593ED42dDD7C0D13;

  address internal constant ENS_S_TOKEN = 0x34441FFD1948E49dC7a607882D0c38Efd0083815;

  address internal constant ENS_ORACLE = 0xd4641b75015E6536E8102D98479568D05D7123Db;

  address internal constant ENS_INTEREST_RATE_STRATEGY = 0xb2eD1eCE1c13455Ce9299d35D3B00358529f3Dc8;

  address internal constant UST_UNDERLYING = 0xa693B19d2931d498c5B318dF961919BB4aee87a5;

  address internal constant UST_A_TOKEN = 0xc2e2152647F4C26028482Efaf64b2Aa28779EFC4;

  address internal constant UST_V_TOKEN = 0xaf32001cf2E66C4C3af4205F6EA77112AA4160FE;

  address internal constant UST_S_TOKEN = 0x7FDbfB0412700D94403c42cA3CAEeeA183F07B26;

  address internal constant UST_ORACLE = 0xa20623070413d42a5C01Db2c8111640DD7A5A03a;

  address internal constant UST_INTEREST_RATE_STRATEGY = 0x0dEDCaE8Eb22A2EFB597aBde1834173C47Cff186;

  address internal constant CVX_UNDERLYING = 0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B;

  address internal constant CVX_A_TOKEN = 0x952749E07d7157bb9644A894dFAF3Bad5eF6D918;

  address internal constant CVX_V_TOKEN = 0x4Ae5E4409C6Dbc84A00f9f89e4ba096603fb7d50;

  address internal constant CVX_S_TOKEN = 0xB01Eb1cE1Da06179136D561766fc2d609C5F55Eb;

  address internal constant CVX_ORACLE = 0xC9CbF687f43176B302F03f5e58470b77D07c61c6;

  address internal constant CVX_INTEREST_RATE_STRATEGY = 0x1dA981865AE7a0C838eFBF4C7DFecb5c7268E73A;

  address internal constant ONE_INCH_UNDERLYING = 0x111111111117dC0aa78b770fA6A738034120C302;

  address internal constant ONE_INCH_A_TOKEN = 0xB29130CBcC3F791f077eAdE0266168E808E5151e;

  address internal constant ONE_INCH_V_TOKEN = 0xD7896C1B9b4455aFf31473908eB15796ad2295DA;

  address internal constant ONE_INCH_S_TOKEN = 0x1278d6ED804d59d2d18a5Aa5638DfD591A79aF0a;

  address internal constant ONE_INCH_ORACLE = 0x72AFAECF99C9d9C8215fF44C77B94B99C28741e8;

  address internal constant ONE_INCH_INTEREST_RATE_STRATEGY =
    0xb2eD1eCE1c13455Ce9299d35D3B00358529f3Dc8;

  address internal constant LUSD_UNDERLYING = 0x5f98805A4E8be255a32880FDeC7F6728C6568bA0;

  address internal constant LUSD_A_TOKEN = 0xce1871f791548600cb59efbefFC9c38719142079;

  address internal constant LUSD_V_TOKEN = 0x411066489AB40442d6Fc215aD7c64224120D33F2;

  address internal constant LUSD_S_TOKEN = 0x39f010127274b2dBdB770B45e1de54d974974526;

  address internal constant LUSD_ORACLE = 0x60c0b047133f696334a2b7f68af0b49d2F3D4F72;

  address internal constant LUSD_INTEREST_RATE_STRATEGY =
    0x545Ae1908B6F12e91E03B1DEC4F2e06D0570fE1b;
}
",
          },
          {
            "id": 15,
            "name": "AaveDistributionManager.sol",
            "path": "src/contracts/AaveDistributionManager.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {DistributionTypes} from '../lib/DistributionTypes.sol';

/**
 * @title AaveDistributionManager
 * @notice Accounting contract to manage multiple staking distributions
 * @author Aave
 */
contract AaveDistributionManager {
  struct AssetData {
    uint128 emissionPerSecond;
    uint128 lastUpdateTimestamp;
    uint256 index;
    mapping(address => uint256) users;
  }

  uint256 public immutable DISTRIBUTION_END;

  address public immutable EMISSION_MANAGER;

  uint8 public constant PRECISION = 18;

  mapping(address => AssetData) public assets;

  event AssetConfigUpdated(address indexed asset, uint256 emission);
  event AssetIndexUpdated(address indexed asset, uint256 index);
  event UserIndexUpdated(
    address indexed user,
    address indexed asset,
    uint256 index
  );

  constructor(address emissionManager, uint256 distributionDuration) {
    DISTRIBUTION_END = block.timestamp + distributionDuration;
    EMISSION_MANAGER = emissionManager;
  }

  /**
   * @dev Configures the distribution of rewards for a list of assets
   * @param assetsConfigInput The list of configurations to apply
   */
  function _configureAssets(
    DistributionTypes.AssetConfigInput[] memory assetsConfigInput
  ) internal {
    for (uint256 i = 0; i < assetsConfigInput.length; i++) {
      AssetData storage assetConfig = assets[
        assetsConfigInput[i].underlyingAsset
      ];

      _updateAssetStateInternal(
        assetsConfigInput[i].underlyingAsset,
        assetConfig,
        assetsConfigInput[i].totalStaked
      );

      assetConfig.emissionPerSecond = assetsConfigInput[i].emissionPerSecond;

      emit AssetConfigUpdated(
        assetsConfigInput[i].underlyingAsset,
        assetsConfigInput[i].emissionPerSecond
      );
    }
  }

  /**
   * @dev Updates the state of one distribution, mainly rewards index and timestamp
   * @param underlyingAsset The address used as key in the distribution, for example sAAVE or the aTokens addresses on Aave
   * @param assetConfig Storage pointer to the distribution's config
   * @param totalStaked Current total of staked assets for this distribution
   * @return The new distribution index
   */
  function _updateAssetStateInternal(
    address underlyingAsset,
    AssetData storage assetConfig,
    uint256 totalStaked
  ) internal returns (uint256) {
    uint256 oldIndex = assetConfig.index;
    uint128 lastUpdateTimestamp = assetConfig.lastUpdateTimestamp;

    if (block.timestamp == lastUpdateTimestamp) {
      return oldIndex;
    }

    uint256 newIndex = _getAssetIndex(
      oldIndex,
      assetConfig.emissionPerSecond,
      lastUpdateTimestamp,
      totalStaked
    );

    if (newIndex != oldIndex) {
      assetConfig.index = newIndex;
      emit AssetIndexUpdated(underlyingAsset, newIndex);
    }

    assetConfig.lastUpdateTimestamp = uint128(block.timestamp);

    return newIndex;
  }

  /**
   * @dev Updates the state of an user in a distribution
   * @param user The user's address
   * @param asset The address of the reference asset of the distribution
   * @param stakedByUser Amount of tokens staked by the user in the distribution at the moment
   * @param totalStaked Total tokens staked in the distribution
   * @return The accrued rewards for the user until the moment
   */
  function _updateUserAssetInternal(
    address user,
    address asset,
    uint256 stakedByUser,
    uint256 totalStaked
  ) internal returns (uint256) {
    AssetData storage assetData = assets[asset];
    uint256 userIndex = assetData.users[user];
    uint256 accruedRewards = 0;

    uint256 newIndex = _updateAssetStateInternal(asset, assetData, totalStaked);

    if (userIndex != newIndex) {
      if (stakedByUser != 0) {
        accruedRewards = _getRewards(stakedByUser, newIndex, userIndex);
      }

      assetData.users[user] = newIndex;
      emit UserIndexUpdated(user, asset, newIndex);
    }

    return accruedRewards;
  }

  /**
   * @dev Used by \\"frontend\\" stake contracts to update the data of an user when claiming rewards from there
   * @param user The address of the user
   * @param stakes List of structs of the user data related with his stake
   * @return The accrued rewards for the user until the moment
   */
  function _claimRewards(
    address user,
    DistributionTypes.UserStakeInput[] memory stakes
  ) internal returns (uint256) {
    uint256 accruedRewards = 0;

    for (uint256 i = 0; i < stakes.length; i++) {
      accruedRewards =
        accruedRewards +
        _updateUserAssetInternal(
          user,
          stakes[i].underlyingAsset,
          stakes[i].stakedByUser,
          stakes[i].totalStaked
        );
    }

    return accruedRewards;
  }

  /**
   * @dev Return the accrued rewards for an user over a list of distribution
   * @param user The address of the user
   * @param stakes List of structs of the user data related with his stake
   * @return The accrued rewards for the user until the moment
   */
  function _getUnclaimedRewards(
    address user,
    DistributionTypes.UserStakeInput[] memory stakes
  ) internal view returns (uint256) {
    uint256 accruedRewards = 0;

    for (uint256 i = 0; i < stakes.length; i++) {
      AssetData storage assetConfig = assets[stakes[i].underlyingAsset];
      uint256 assetIndex = _getAssetIndex(
        assetConfig.index,
        assetConfig.emissionPerSecond,
        assetConfig.lastUpdateTimestamp,
        stakes[i].totalStaked
      );

      accruedRewards =
        accruedRewards +
        _getRewards(
          stakes[i].stakedByUser,
          assetIndex,
          assetConfig.users[user]
        );
    }
    return accruedRewards;
  }

  /**
   * @dev Internal function for the calculation of user's rewards on a distribution
   * @param principalUserBalance Amount staked by the user on a distribution
   * @param reserveIndex Current index of the distribution
   * @param userIndex Index stored for the user, representation his staking moment
   * @return The rewards
   */
  function _getRewards(
    uint256 principalUserBalance,
    uint256 reserveIndex,
    uint256 userIndex
  ) internal pure returns (uint256) {
    return
      (principalUserBalance * (reserveIndex - userIndex)) /
      (10**uint256(PRECISION));
  }

  /**
   * @dev Calculates the next value of an specific distribution index, with validations
   * @param currentIndex Current index of the distribution
   * @param emissionPerSecond Representing the total rewards distributed per second per asset unit, on the distribution
   * @param lastUpdateTimestamp Last moment this distribution was updated
   * @param totalBalance of tokens considered for the distribution
   * @return The new index.
   */
  function _getAssetIndex(
    uint256 currentIndex,
    uint256 emissionPerSecond,
    uint128 lastUpdateTimestamp,
    uint256 totalBalance
  ) internal view returns (uint256) {
    if (
      emissionPerSecond == 0 ||
      totalBalance == 0 ||
      lastUpdateTimestamp == block.timestamp ||
      lastUpdateTimestamp >= DISTRIBUTION_END
    ) {
      return currentIndex;
    }

    uint256 currentTimestamp = block.timestamp > DISTRIBUTION_END
      ? DISTRIBUTION_END
      : block.timestamp;
    uint256 timeDelta = currentTimestamp - lastUpdateTimestamp;
    return
      ((emissionPerSecond * timeDelta * (10**uint256(PRECISION))) /
        totalBalance) + currentIndex;
  }

  /**
   * @dev Returns the data of an user on a distribution
   * @param user Address of the user
   * @param asset The address of the reference asset of the distribution
   * @return The new index
   */
  function getUserAssetData(address user, address asset)
    public
    view
    returns (uint256)
  {
    return assets[asset].users[user];
  }
}
",
          },
          {
            "id": 20,
            "name": "IAaveDistributionManager.sol",
            "path": "src/interfaces/IAaveDistributionManager.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {DistributionTypes} from '../lib/DistributionTypes.sol';

interface IAaveDistributionManager {
  function configureAssets(
    DistributionTypes.AssetConfigInput[] memory assetsConfigInput
  ) external;
}
",
          },
          {
            "id": 25,
            "name": "IGovernancePowerDelegationToken.sol",
            "path": "src/interfaces/IGovernancePowerDelegationToken.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

interface IGovernancePowerDelegationToken {
  enum DelegationType {
    VOTING_POWER,
    PROPOSITION_POWER
  }

  /**
   * @dev emitted when a user delegates to another
   * @param delegator the delegator
   * @param delegatee the delegatee
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  event DelegateChanged(
    address indexed delegator,
    address indexed delegatee,
    DelegationType delegationType
  );

  /**
   * @dev emitted when an action changes the delegated power of a user
   * @param user the user which delegated power has changed
   * @param amount the amount of delegated power for the user
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  event DelegatedPowerChanged(
    address indexed user,
    uint256 amount,
    DelegationType delegationType
  );

  /**
   * @dev delegates the specific power to a delegatee
   * @param delegatee the user which delegated power has changed
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  function delegateByType(address delegatee, DelegationType delegationType)
    external;

  /**
   * @dev delegates all the powers to a specific user
   * @param delegatee the user to which the power will be delegated
   **/
  function delegate(address delegatee) external;

  /**
   * @dev returns the delegatee of an user
   * @param delegator the address of the delegator
   **/
  function getDelegateeByType(address delegator, DelegationType delegationType)
    external
    view
    returns (address);

  /**
   * @dev returns the current delegated power of a user. The current power is the
   * power delegated at the time of the last snapshot
   * @param user the user
   **/
  function getPowerCurrent(address user, DelegationType delegationType)
    external
    view
    returns (uint256);

  /**
   * @dev returns the delegated power of a user at a certain block
   * @param user the user
   **/
  function getPowerAtBlock(
    address user,
    uint256 blockNumber,
    DelegationType delegationType
  ) external view returns (uint256);

  /**
   * @dev returns the total supply at a certain block number
   **/
  function totalSupplyAt(uint256 blockNumber) external view returns (uint256);
}
",
          },
          {
            "id": 26,
            "name": "IInitializableAdminUpgradeabilityProxy.sol",
            "path": "src/interfaces/IInitializableAdminUpgradeabilityProxy.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity >=0.6.0;

interface IInitializableAdminUpgradeabilityProxy {
  function upgradeTo(address newImplementation) external;

  function upgradeToAndCall(address newImplementation, bytes calldata data)
    external
    payable;

  function implementation() external returns (address);

  function admin() external returns (address);

  function changeAdmin(address newAdmin) external;
}
",
          },
          {
            "id": 5,
            "name": "ICollector.sol",
            "path": "lib/aave-address-book/src/common/ICollector.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity >=0.6.0;

/**
 * @title ICollector
 * @notice Defines the interface of the Collector contract
 * @author Aave
 **/
interface ICollector {
  struct Stream {
    uint256 deposit;
    uint256 ratePerSecond;
    uint256 remainingBalance;
    uint256 startTime;
    uint256 stopTime;
    address recipient;
    address sender;
    address tokenAddress;
    bool isEntity;
  }

  /** @notice Emitted when the funds admin changes
   * @param fundsAdmin The new funds admin.
   **/
  event NewFundsAdmin(address indexed fundsAdmin);

  /** @notice Emitted when the new stream is created
   * @param streamId The identifier of the stream.
   * @param sender The address of the collector.
   * @param recipient The address towards which the money is streamed.
   * @param deposit The amount of money to be streamed.
   * @param tokenAddress The ERC20 token to use as streaming currency.
   * @param startTime The unix timestamp for when the stream starts.
   * @param stopTime The unix timestamp for when the stream stops.
   **/
  event CreateStream(
    uint256 indexed streamId,
    address indexed sender,
    address indexed recipient,
    uint256 deposit,
    address tokenAddress,
    uint256 startTime,
    uint256 stopTime
  );

  /**
   * @notice Emmitted when withdraw happens from the contract to the recipient's account.
   * @param streamId The id of the stream to withdraw tokens from.
   * @param recipient The address towards which the money is streamed.
   * @param amount The amount of tokens to withdraw.
   */
  event WithdrawFromStream(uint256 indexed streamId, address indexed recipient, uint256 amount);

  /**
   * @notice Emmitted when the stream is canceled.
   * @param streamId The id of the stream to withdraw tokens from.
   * @param sender The address of the collector.
   * @param recipient The address towards which the money is streamed.
   * @param senderBalance The sender's balance at the moment of cancelling.
   * @param recipientBalance The recipient's balance at the moment of cancelling.
   */
  event CancelStream(
    uint256 indexed streamId,
    address indexed sender,
    address indexed recipient,
    uint256 senderBalance,
    uint256 recipientBalance
  );

  /** @notice Returns the mock ETH reference address
   * @return address The address
   **/
  function ETH_MOCK_ADDRESS() external pure returns (address);

  /** @notice Initializes the contracts
   * @param fundsAdmin Funds admin address
   * @param nextStreamId StreamId to set, applied if greater than 0
   **/
  function initialize(address fundsAdmin, uint256 nextStreamId) external;

  /**
   * @notice Return the funds admin, only entity to be able to interact with this contract (controller of reserve)
   * @return address The address of the funds admin
   **/
  function getFundsAdmin() external view returns (address);

  /**
   * @notice Returns the available funds for the given stream id and address.
   * @param streamId The id of the stream for which to query the balance.
   * @param who The address for which to query the balance.
   * @notice Returns the total funds allocated to \`who\` as uint256.
   */
  function balanceOf(uint256 streamId, address who) external view returns (uint256 balance);

  /**
   * @dev Function for the funds admin to give ERC20 allowance to other parties
   * @param token The address of the token to give allowance from
   * @param recipient Allowance's recipient
   * @param amount Allowance to approve
   **/
  function approve(
    //IERC20 token,
    address token,
    address recipient,
    uint256 amount
  ) external;

  /**
   * @notice Function for the funds admin to transfer ERC20 tokens to other parties
   * @param token The address of the token to transfer
   * @param recipient Transfer's recipient
   * @param amount Amount to transfer
   **/
  function transfer(
    //IERC20 token,
    address token,
    address recipient,
    uint256 amount
  ) external;

  /**
   * @dev Transfer the ownership of the funds administrator role.
          This function should only be callable by the current funds administrator.
   * @param admin The address of the new funds administrator
   */
  function setFundsAdmin(address admin) external;

  /**
   * @notice Creates a new stream funded by this contracts itself and paid towards \`recipient\`.
   * @param recipient The address towards which the money is streamed.
   * @param deposit The amount of money to be streamed.
   * @param tokenAddress The ERC20 token to use as streaming currency.
   * @param startTime The unix timestamp for when the stream starts.
   * @param stopTime The unix timestamp for when the stream stops.
   * @return streamId the uint256 id of the newly created stream.
   */
  function createStream(
    address recipient,
    uint256 deposit,
    address tokenAddress,
    uint256 startTime,
    uint256 stopTime
  ) external returns (uint256 streamId);

  /**
   * @notice Returns the stream with all its properties.
   * @dev Throws if the id does not point to a valid stream.
   * @param streamId The id of the stream to query.
   * @notice Returns the stream object.
   */
  function getStream(
    uint256 streamId
  )
    external
    view
    returns (
      address sender,
      address recipient,
      uint256 deposit,
      address tokenAddress,
      uint256 startTime,
      uint256 stopTime,
      uint256 remainingBalance,
      uint256 ratePerSecond
    );

  /**
   * @notice Withdraws from the contract to the recipient's account.
   * @param streamId The id of the stream to withdraw tokens from.
   * @param amount The amount of tokens to withdraw.
   * @return bool Returns true if successful.
   */
  function withdrawFromStream(uint256 streamId, uint256 amount) external returns (bool);

  /**
   * @notice Cancels the stream and transfers the tokens back on a pro rata basis.
   * @param streamId The id of the stream to cancel.
   * @return bool Returns true if successful.
   */
  function cancelStream(uint256 streamId) external returns (bool);

  /**
   * @notice Returns the next available stream id
   * @return nextStreamId Returns the stream id.
   */
  function getNextStreamId() external view returns (uint256);
}
",
          },
          {
            "id": 11,
            "name": "ERC1967Upgrade.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/transparent-proxy/ERC1967Upgrade.sol",
            "source": "// SPDX-License-Identifier: MIT

/** @dev OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)
 * From https://github.com/OpenZeppelin/openzeppelin-contracts/tree/8b778fa20d6d76340c5fac1ed66c80273f05b95a
 *
 * BGD Labs adaptations:
 * - This is an opinionated version, to be used on \\"classic\\" transparent upgradeable proxies (non UUPS/Beacon)
 * - For the sake of simplification and gas savings on deployment, the functions/constants related with UUPS/Beacon have been removed
 * - Moved declaration of \`_ADMIN_SLOT\` constant and \`AdminChanged\` event to the top
 * - Linting
 * - Removed imports not used anymore due to not have UUPS/Beacon logic
 */

pragma solidity ^0.8.2;

import '../oz-common/Address.sol';
import '../oz-common/StorageSlot.sol';

/**
 * @dev This abstract contract provides getters and event emitting update functions for
 * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.
 *
 * _Available since v4.1._
 *
 * @custom:oz-upgrades-unsafe-allow delegatecall
 */
abstract contract ERC1967Upgrade {
  /**
   * @dev Storage slot with the address of the current implementation.
   * This is the keccak-256 hash of \\"eip1967.proxy.implementation\\" subtracted by 1, and is
   * validated in the constructor.
   */
  bytes32 internal constant _IMPLEMENTATION_SLOT =
    0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;

  /**
   * @dev Storage slot with the admin of the contract.
   * This is the keccak-256 hash of \\"eip1967.proxy.admin\\" subtracted by 1, and is
   * validated in the constructor.
   */
  bytes32 internal constant _ADMIN_SLOT =
    0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;

  /**
   * @dev Emitted when the implementation is upgraded.
   */
  event Upgraded(address indexed implementation);

  /**
   * @dev Emitted when the admin account has changed.
   */
  event AdminChanged(address previousAdmin, address newAdmin);

  /**
   * @dev Returns the current implementation address.
   */
  function _getImplementation() internal view returns (address) {
    return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;
  }

  /**
   * @dev Stores a new address in the EIP1967 implementation slot.
   */
  function _setImplementation(address newImplementation) private {
    require(Address.isContract(newImplementation), 'ERC1967: new implementation is not a contract');
    StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;
  }

  /**
   * @dev Perform implementation upgrade
   *
   * Emits an {Upgraded} event.
   */
  function _upgradeTo(address newImplementation) internal {
    _setImplementation(newImplementation);
    emit Upgraded(newImplementation);
  }

  /**
   * @dev Perform implementation upgrade with additional setup call.
   *
   * Emits an {Upgraded} event.
   */
  function _upgradeToAndCall(
    address newImplementation,
    bytes memory data,
    bool forceCall
  ) internal {
    _upgradeTo(newImplementation);
    if (data.length > 0 || forceCall) {
      Address.functionDelegateCall(newImplementation, data);
    }
  }

  /**
   * @dev Returns the current admin.
   */
  function _getAdmin() internal view returns (address) {
    return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;
  }

  /**
   * @dev Stores a new address in the EIP1967 admin slot.
   */
  function _setAdmin(address newAdmin) private {
    require(newAdmin != address(0), 'ERC1967: new admin is the zero address');
    StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;
  }

  /**
   * @dev Changes the admin of the proxy.
   *
   * Emits an {AdminChanged} event.
   */
  function _changeAdmin(address newAdmin) internal {
    emit AdminChanged(_getAdmin(), newAdmin);
    _setAdmin(newAdmin);
  }
}
",
          },
          {
            "id": 13,
            "name": "ProxyAdmin.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/transparent-proxy/ProxyAdmin.sol",
            "source": "// SPDX-License-Identifier: MIT

/**
 * @dev OpenZeppelin Contracts v4.4.1 (proxy/transparent/ProxyAdmin.sol)
 * From https://github.com/OpenZeppelin/openzeppelin-contracts/tree/8b778fa20d6d76340c5fac1ed66c80273f05b95a
 *
 * BGD Labs adaptations:
 * - Linting
 */

pragma solidity ^0.8.0;

import './TransparentUpgradeableProxy.sol';
import '../oz-common/Ownable.sol';

/**
 * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an
 * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.
 */
contract ProxyAdmin is Ownable {
  /**
   * @dev Returns the current implementation of \`proxy\`.
   *
   * Requirements:
   *
   * - This contract must be the admin of \`proxy\`.
   */
  function getProxyImplementation(
    TransparentUpgradeableProxy proxy
  ) public view virtual returns (address) {
    // We need to manually run the static call since the getter cannot be flagged as view
    // bytes4(keccak256(\\"implementation()\\")) == 0x5c60da1b
    (bool success, bytes memory returndata) = address(proxy).staticcall(hex'5c60da1b');
    require(success);
    return abi.decode(returndata, (address));
  }

  /**
   * @dev Returns the current admin of \`proxy\`.
   *
   * Requirements:
   *
   * - This contract must be the admin of \`proxy\`.
   */
  function getProxyAdmin(TransparentUpgradeableProxy proxy) public view virtual returns (address) {
    // We need to manually run the static call since the getter cannot be flagged as view
    // bytes4(keccak256(\\"admin()\\")) == 0xf851a440
    (bool success, bytes memory returndata) = address(proxy).staticcall(hex'f851a440');
    require(success);
    return abi.decode(returndata, (address));
  }

  /**
   * @dev Changes the admin of \`proxy\` to \`newAdmin\`.
   *
   * Requirements:
   *
   * - This contract must be the current admin of \`proxy\`.
   */
  function changeProxyAdmin(
    TransparentUpgradeableProxy proxy,
    address newAdmin
  ) public virtual onlyOwner {
    proxy.changeAdmin(newAdmin);
  }

  /**
   * @dev Upgrades \`proxy\` to \`implementation\`. See {TransparentUpgradeableProxy-upgradeTo}.
   *
   * Requirements:
   *
   * - This contract must be the admin of \`proxy\`.
   */
  function upgrade(
    TransparentUpgradeableProxy proxy,
    address implementation
  ) public virtual onlyOwner {
    proxy.upgradeTo(implementation);
  }

  /**
   * @dev Upgrades \`proxy\` to \`implementation\` and calls a function on the new implementation. See
   * {TransparentUpgradeableProxy-upgradeToAndCall}.
   *
   * Requirements:
   *
   * - This contract must be the admin of \`proxy\`.
   */
  function upgradeAndCall(
    TransparentUpgradeableProxy proxy,
    address implementation,
    bytes memory data
  ) public payable virtual onlyOwner {
    proxy.upgradeToAndCall{value: msg.value}(implementation, data);
  }
}
",
          },
          {
            "id": 18,
            "name": "StakedTokenV2.sol",
            "path": "src/contracts/StakedTokenV2.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {IERC20} from '../interfaces/IERC20.sol';
import {IStakedTokenV2} from '../interfaces/IStakedTokenV2.sol';

import {ERC20} from '../lib/ERC20.sol';
import {DistributionTypes} from '../lib/DistributionTypes.sol';
import {SafeERC20} from '../lib/SafeERC20.sol';

import {VersionedInitializable} from '../utils/VersionedInitializable.sol';
import {AaveDistributionManager} from './AaveDistributionManager.sol';
import {GovernancePowerWithSnapshot} from '../lib/GovernancePowerWithSnapshot.sol';

/**
 * @title StakedTokenV2
 * @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract
 * @author BGD Labs
 */
abstract contract StakedTokenV2 is
  IStakedTokenV2,
  GovernancePowerWithSnapshot,
  VersionedInitializable,
  AaveDistributionManager
{
  using SafeERC20 for IERC20;

  IERC20 public immutable STAKED_TOKEN;
  IERC20 public immutable REWARD_TOKEN;

  /// @notice Seconds available to redeem once the cooldown period is fulfilled
  uint256 public immutable UNSTAKE_WINDOW;

  /// @notice Address to pull from the rewards, needs to have approved this contract
  address public immutable REWARDS_VAULT;

  mapping(address => uint256) public stakerRewardsToClaim;
  mapping(address => CooldownSnapshot) public stakersCooldowns;

  /// @dev End of Storage layout from StakedToken v1

  /// @dev To see the voting mappings, go to GovernancePowerWithSnapshot.sol
  mapping(address => address) internal _votingDelegates;

  mapping(address => mapping(uint256 => Snapshot))
    internal _propositionPowerSnapshots;
  mapping(address => uint256) internal _propositionPowerSnapshotsCounts;
  mapping(address => address) internal _propositionPowerDelegates;

  bytes32 public DOMAIN_SEPARATOR;
  bytes public constant EIP712_REVISION = bytes('1');
  bytes32 internal constant EIP712_DOMAIN =
    keccak256(
      'EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'
    );
  bytes32 public constant PERMIT_TYPEHASH =
    keccak256(
      'Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)'
    );

  /// @dev owner => next valid nonce to submit with permit()
  mapping(address => uint256) public _nonces;

  constructor(
    IERC20 stakedToken,
    IERC20 rewardToken,
    uint256 unstakeWindow,
    address rewardsVault,
    address emissionManager,
    uint128 distributionDuration
  ) ERC20() AaveDistributionManager(emissionManager, distributionDuration) {
    STAKED_TOKEN = stakedToken;
    REWARD_TOKEN = rewardToken;
    UNSTAKE_WINDOW = unstakeWindow;
    REWARDS_VAULT = rewardsVault;
  }

  /// @inheritdoc IStakedTokenV2
  function stake(address onBehalfOf, uint256 amount) external virtual override;

  /// @inheritdoc IStakedTokenV2
  function redeem(address to, uint256 amount) external virtual override;

  /// @inheritdoc IStakedTokenV2
  function cooldown() external virtual override;

  /// @inheritdoc IStakedTokenV2
  function claimRewards(address to, uint256 amount) external virtual override;

  /// @inheritdoc IStakedTokenV2
  function getTotalRewardsBalance(address staker)
    external
    view
    returns (uint256)
  {
    DistributionTypes.UserStakeInput[]
      memory userStakeInputs = new DistributionTypes.UserStakeInput[](1);
    userStakeInputs[0] = DistributionTypes.UserStakeInput({
      underlyingAsset: address(this),
      stakedByUser: balanceOf(staker),
      totalStaked: totalSupply()
    });
    return
      stakerRewardsToClaim[staker] +
      _getUnclaimedRewards(staker, userStakeInputs);
  }

  /// @inheritdoc IStakedTokenV2
  function permit(
    address owner,
    address spender,
    uint256 value,
    uint256 deadline,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external {
    require(owner != address(0), 'INVALID_OWNER');
    //solium-disable-next-line
    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');
    uint256 currentValidNonce = _nonces[owner];
    bytes32 digest = keccak256(
      abi.encodePacked(
        '\\\\x19\\\\x01',
        DOMAIN_SEPARATOR,
        keccak256(
          abi.encode(
            PERMIT_TYPEHASH,
            owner,
            spender,
            value,
            currentValidNonce,
            deadline
          )
        )
      )
    );

    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');
    unchecked {
      _nonces[owner] = currentValidNonce + 1;
    }
    _approve(owner, spender, value);
  }

  /**
   * @dev Delegates power from signatory to \`delegatee\`
   * @param delegatee The address to delegate votes to
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   * @param nonce The contract state required to match the signature
   * @param expiry The time at which to expire the signature
   * @param v The recovery byte of the signature
   * @param r Half of the ECDSA signature pair
   * @param s Half of the ECDSA signature pair
   */
  function delegateByTypeBySig(
    address delegatee,
    DelegationType delegationType,
    uint256 nonce,
    uint256 expiry,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) public {
    bytes32 structHash = keccak256(
      abi.encode(
        DELEGATE_BY_TYPE_TYPEHASH,
        delegatee,
        uint256(delegationType),
        nonce,
        expiry
      )
    );
    bytes32 digest = keccak256(
      abi.encodePacked('\\\\x19\\\\x01', DOMAIN_SEPARATOR, structHash)
    );
    address signatory = ecrecover(digest, v, r, s);
    require(signatory != address(0), 'INVALID_SIGNATURE');
    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');
    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');
    _delegateByType(signatory, delegatee, delegationType);
  }

  /**
   * @dev Delegates power from signatory to \`delegatee\`
   * @param delegatee The address to delegate votes to
   * @param nonce The contract state required to match the signature
   * @param expiry The time at which to expire the signature
   * @param v The recovery byte of the signature
   * @param r Half of the ECDSA signature pair
   * @param s Half of the ECDSA signature pair
   */
  function delegateBySig(
    address delegatee,
    uint256 nonce,
    uint256 expiry,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) public {
    bytes32 structHash = keccak256(
      abi.encode(DELEGATE_TYPEHASH, delegatee, nonce, expiry)
    );
    bytes32 digest = keccak256(
      abi.encodePacked('\\\\x19\\\\x01', DOMAIN_SEPARATOR, structHash)
    );
    address signatory = ecrecover(digest, v, r, s);
    require(signatory != address(0), 'INVALID_SIGNATURE');
    require(nonce == _nonces[signatory]++, 'INVALID_NONCE');
    require(block.timestamp <= expiry, 'INVALID_EXPIRATION');
    _delegateByType(signatory, delegatee, DelegationType.VOTING_POWER);
    _delegateByType(signatory, delegatee, DelegationType.PROPOSITION_POWER);
  }

  /**
   * @dev Updates the user state related with his accrued rewards
   * @param user Address of the user
   * @param userBalance The current balance of the user
   * @param updateStorage Boolean flag used to update or not the stakerRewardsToClaim of the user
   * @return The unclaimed rewards that were added to the total accrued
   */
  function _updateCurrentUnclaimedRewards(
    address user,
    uint256 userBalance,
    bool updateStorage
  ) internal returns (uint256) {
    uint256 accruedRewards = _updateUserAssetInternal(
      user,
      address(this),
      userBalance,
      totalSupply()
    );
    uint256 unclaimedRewards = stakerRewardsToClaim[user] + accruedRewards;

    if (accruedRewards != 0) {
      if (updateStorage) {
        stakerRewardsToClaim[user] = unclaimedRewards;
      }
      emit RewardsAccrued(user, accruedRewards);
    }

    return unclaimedRewards;
  }

  /**
   * @dev returns relevant storage slots for a DelegationType
   * @param delegationType the requested DelegationType
   * @return the relevant storage
   */
  function _getDelegationDataByType(DelegationType delegationType)
    internal
    view
    override
    returns (
      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots
      mapping(address => uint256) storage, //snapshots count
      mapping(address => address) storage //delegatees list
    )
  {
    if (delegationType == DelegationType.VOTING_POWER) {
      return (_votingSnapshots, _votingSnapshotsCounts, _votingDelegates);
    } else {
      return (
        _propositionPowerSnapshots,
        _propositionPowerSnapshotsCounts,
        _propositionPowerDelegates
      );
    }
  }
}
",
          },
          {
            "id": 23,
            "name": "IERC20WithPermit.sol",
            "path": "src/interfaces/IERC20WithPermit.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {IERC20} from './IERC20.sol';

interface IERC20WithPermit is IERC20 {
  function permit(
    address owner,
    address spender,
    uint256 value,
    uint256 deadline,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external;
}
",
          },
          {
            "id": 16,
            "name": "ProposalPayload.sol",
            "path": "src/contracts/ProposalPayload.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.16;

import {AaveMisc} from 'aave-address-book/AaveMisc.sol';
import {AaveGovernanceV2} from 'aave-address-book/AaveGovernanceV2.sol';
import {AaveV2EthereumAssets} from 'aave-address-book/AaveV2Ethereum.sol';
import {ProxyAdmin} from 'solidity-utils/contracts/transparent-proxy/ProxyAdmin.sol';
import {TransparentUpgradeableProxy} from 'solidity-utils/contracts/transparent-proxy/TransparentUpgradeableProxy.sol';
import {StakedAaveV3} from './StakedAaveV3.sol';
import {StakedTokenV3} from './StakedTokenV3.sol';
import {IERC20} from '../interfaces/IERC20.sol';
import {IInitializableAdminUpgradeabilityProxy} from '../interfaces/IInitializableAdminUpgradeabilityProxy.sol';

library GenericProposal {
  address public constant SLASHING_ADMIN = AaveGovernanceV2.SHORT_EXECUTOR;

  address public constant COOLDOWN_ADMIN = AaveGovernanceV2.SHORT_EXECUTOR;

  address public constant CLAIM_HELPER = AaveGovernanceV2.SHORT_EXECUTOR;

  address public constant REWARDS_VAULT = AaveMisc.ECOSYSTEM_RESERVE;

  address public constant EMISSION_MANAGER = AaveGovernanceV2.SHORT_EXECUTOR;

  uint256 public constant MAX_SLASHING = 3000; // 30%

  uint256 public constant COOLDOWN_SECONDS = 1728000; // 20 days

  uint256 public constant UNSTAKE_WINDOW = 172800; // 2 days

  uint128 public constant DISTRIBUTION_DURATION = 3155692600; // 100 years
}

/**
 * @title ProposalPayloadStkAave
 * @notice Proposal for upgrading the StkAave implementation
 * @author BGD Labs
 */
contract ProposalPayloadStkAave {
  address public constant STK_AAVE = 0x4da27a545c0c5B758a6BA100e3a049001de870f5;

  function execute() external {
    // 1. move ownership of current token to new proxy
    IInitializableAdminUpgradeabilityProxy(STK_AAVE).changeAdmin(
      address(AaveMisc.PROXY_ADMIN_ETHEREUM_LONG)
    );
    // 2. deploy newimplementation
    StakedAaveV3 newImpl = new StakedAaveV3(
      IERC20(AaveV2EthereumAssets.AAVE_UNDERLYING),
      IERC20(AaveV2EthereumAssets.AAVE_UNDERLYING),
      GenericProposal.UNSTAKE_WINDOW,
      GenericProposal.REWARDS_VAULT,
      GenericProposal.EMISSION_MANAGER,
      GenericProposal.DISTRIBUTION_DURATION
    );
    // 3. upgrade & initialize on proxy
    ProxyAdmin(AaveMisc.PROXY_ADMIN_ETHEREUM_LONG).upgradeAndCall(
      TransparentUpgradeableProxy(payable(STK_AAVE)),
      address(newImpl),
      abi.encodeWithSignature(
        'initialize(address,address,address,uint256,uint256)',
        GenericProposal.SLASHING_ADMIN,
        GenericProposal.COOLDOWN_ADMIN,
        GenericProposal.CLAIM_HELPER,
        GenericProposal.MAX_SLASHING,
        GenericProposal.COOLDOWN_SECONDS
      )
    );
  }
}

/**
 * @title ProposalPayloadStkAbpt
 * @notice Proposal for upgrading the StkAbpt implementation
 * @author BGD Labs
 */
contract ProposalPayloadStkAbpt {
  address public constant STK_ABPT = 0xa1116930326D21fB917d5A27F1E9943A9595fb47;
  address public constant ABPT = 0x41A08648C3766F9F9d85598fF102a08f4ef84F84;

  function execute() external {
    // 1. move ownership of current token to new proxy
    IInitializableAdminUpgradeabilityProxy(STK_ABPT).changeAdmin(
      AaveMisc.PROXY_ADMIN_ETHEREUM
    );
    // 2. deploy newimplementation
    StakedTokenV3 newImpl = new StakedTokenV3(
      IERC20(ABPT),
      IERC20(AaveV2EthereumAssets.AAVE_UNDERLYING),
      GenericProposal.UNSTAKE_WINDOW,
      GenericProposal.REWARDS_VAULT,
      GenericProposal.EMISSION_MANAGER,
      GenericProposal.DISTRIBUTION_DURATION
    );
    // 3. upgrade & initialize on proxy
    ProxyAdmin(AaveMisc.PROXY_ADMIN_ETHEREUM).upgradeAndCall(
      TransparentUpgradeableProxy(payable(STK_ABPT)),
      address(newImpl),
      abi.encodeWithSignature(
        'initialize(address,address,address,uint256,uint256)',
        GenericProposal.SLASHING_ADMIN,
        GenericProposal.COOLDOWN_ADMIN,
        GenericProposal.CLAIM_HELPER,
        GenericProposal.MAX_SLASHING,
        GenericProposal.COOLDOWN_SECONDS
      )
    );
  }
}
",
          },
          {
            "id": 19,
            "name": "StakedTokenV3.sol",
            "path": "src/contracts/StakedTokenV3.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {IERC20} from '../interfaces/IERC20.sol';
import {DistributionTypes} from '../lib/DistributionTypes.sol';
import {SafeERC20} from '../lib/SafeERC20.sol';
import {IAaveDistributionManager} from '../interfaces/IAaveDistributionManager.sol';
import {IERC20Metadata} from '../interfaces/IERC20Metadata.sol';
import {IStakedTokenV2} from '../interfaces/IStakedTokenV2.sol';
import {StakedTokenV2} from './StakedTokenV2.sol';
import {IStakedTokenV3} from '../interfaces/IStakedTokenV3.sol';
import {PercentageMath} from '../lib/PercentageMath.sol';
import {RoleManager} from '../utils/RoleManager.sol';
import {SafeCast} from '../lib/SafeCast.sol';

/**
 * @title StakedTokenV3
 * @notice Contract to stake Aave token, tokenize the position and get rewards, inheriting from a distribution manager contract
 * @author BGD Labs
 */
contract StakedTokenV3 is
  StakedTokenV2,
  IStakedTokenV3,
  RoleManager,
  IAaveDistributionManager
{
  using SafeERC20 for IERC20;
  using PercentageMath for uint256;
  using SafeCast for uint256;

  uint256 public constant SLASH_ADMIN_ROLE = 0;
  uint256 public constant COOLDOWN_ADMIN_ROLE = 1;
  uint256 public constant CLAIM_HELPER_ROLE = 2;
  uint216 public constant INITIAL_EXCHANGE_RATE = 1e18;
  uint256 public constant EXCHANGE_RATE_UNIT = 1e18;

  /// @notice lower bound to prevent spam & avoid exchangeRate issues
  // as returnFunds can be called permissionless an attacker could spam returnFunds(1) to produce exchangeRate snapshots making voting expensive
  uint256 public immutable LOWER_BOUND;

  // Reserved storage space to allow for layout changes in the future.
  uint256[8] private ______gap;
  /// @notice Seconds between starting cooldown and being able to withdraw
  uint256 internal _cooldownSeconds;
  /// @notice The maximum amount of funds that can be slashed at any given time
  uint256 internal _maxSlashablePercentage;
  /// @notice Mirror of latest snapshot value for cheaper access
  uint216 internal _currentExchangeRate;
  /// @notice Flag determining if there's an ongoing slashing event that needs to be settled
  bool public inPostSlashingPeriod;

  modifier onlySlashingAdmin() {
    require(
      msg.sender == getAdmin(SLASH_ADMIN_ROLE),
      'CALLER_NOT_SLASHING_ADMIN'
    );
    _;
  }

  modifier onlyCooldownAdmin() {
    require(
      msg.sender == getAdmin(COOLDOWN_ADMIN_ROLE),
      'CALLER_NOT_COOLDOWN_ADMIN'
    );
    _;
  }

  modifier onlyClaimHelper() {
    require(
      msg.sender == getAdmin(CLAIM_HELPER_ROLE),
      'CALLER_NOT_CLAIM_HELPER'
    );
    _;
  }

  constructor(
    IERC20 stakedToken,
    IERC20 rewardToken,
    uint256 unstakeWindow,
    address rewardsVault,
    address emissionManager,
    uint128 distributionDuration
  )
    StakedTokenV2(
      stakedToken,
      rewardToken,
      unstakeWindow,
      rewardsVault,
      emissionManager,
      distributionDuration
    )
  {
    // brick initialize
    lastInitializedRevision = REVISION();
    uint256 decimals = IERC20Metadata(address(stakedToken)).decimals();
    LOWER_BOUND = 10**decimals;
  }

  /**
   * @dev returns the revision of the implementation contract
   * @return The revision
   */
  function REVISION() public pure virtual returns (uint256) {
    return 3;
  }

  /**
   * @dev returns the revision of the implementation contract
   * @return The revision
   */
  function getRevision() internal pure virtual override returns (uint256) {
    return REVISION();
  }

  /**
   * @dev Called by the proxy contract
   */
  function initialize(
    address slashingAdmin,
    address cooldownPauseAdmin,
    address claimHelper,
    uint256 maxSlashablePercentage,
    uint256 cooldownSeconds
  ) external virtual initializer {
    _initialize(
      slashingAdmin,
      cooldownPauseAdmin,
      claimHelper,
      maxSlashablePercentage,
      cooldownSeconds
    );
  }

  function _initialize(
    address slashingAdmin,
    address cooldownPauseAdmin,
    address claimHelper,
    uint256 maxSlashablePercentage,
    uint256 cooldownSeconds
  ) internal {
    InitAdmin[] memory initAdmins = new InitAdmin[](3);
    initAdmins[0] = InitAdmin(SLASH_ADMIN_ROLE, slashingAdmin);
    initAdmins[1] = InitAdmin(COOLDOWN_ADMIN_ROLE, cooldownPauseAdmin);
    initAdmins[2] = InitAdmin(CLAIM_HELPER_ROLE, claimHelper);

    _initAdmins(initAdmins);

    _setMaxSlashablePercentage(maxSlashablePercentage);
    _setCooldownSeconds(cooldownSeconds);
    _updateExchangeRate(INITIAL_EXCHANGE_RATE);
  }

  /// @inheritdoc IAaveDistributionManager
  function configureAssets(
    DistributionTypes.AssetConfigInput[] memory assetsConfigInput
  ) external override {
    require(msg.sender == EMISSION_MANAGER, 'ONLY_EMISSION_MANAGER');

    for (uint256 i = 0; i < assetsConfigInput.length; i++) {
      assetsConfigInput[i].totalStaked = totalSupply();
    }

    _configureAssets(assetsConfigInput);
  }

  /// @inheritdoc IStakedTokenV3
  function previewStake(uint256 assets) public view returns (uint256) {
    return (assets * _currentExchangeRate) / EXCHANGE_RATE_UNIT;
  }

  /// @inheritdoc IStakedTokenV2
  function stake(address to, uint256 amount)
    external
    override(IStakedTokenV2, StakedTokenV2)
  {
    _stake(msg.sender, to, amount);
  }

  /// @inheritdoc IStakedTokenV2
  function cooldown() external override(IStakedTokenV2, StakedTokenV2) {
    _cooldown(msg.sender);
  }

  /// @inheritdoc IStakedTokenV3
  function cooldownOnBehalfOf(address from) external override onlyClaimHelper {
    _cooldown(from);
  }

  function _cooldown(address from) internal {
    uint256 amount = balanceOf(from);
    require(amount != 0, 'INVALID_BALANCE_ON_COOLDOWN');
    stakersCooldowns[from] = CooldownSnapshot({
      timestamp: uint40(block.timestamp),
      amount: uint216(amount)
    });

    emit Cooldown(from, amount);
  }

  /// @inheritdoc IStakedTokenV2
  function redeem(address to, uint256 amount)
    external
    override(IStakedTokenV2, StakedTokenV2)
  {
    _redeem(msg.sender, to, amount);
  }

  /// @inheritdoc IStakedTokenV3
  function redeemOnBehalf(
    address from,
    address to,
    uint256 amount
  ) external override onlyClaimHelper {
    _redeem(from, to, amount);
  }

  /// @inheritdoc IStakedTokenV2
  function claimRewards(address to, uint256 amount)
    external
    override(IStakedTokenV2, StakedTokenV2)
  {
    _claimRewards(msg.sender, to, amount);
  }

  /// @inheritdoc IStakedTokenV3
  function claimRewardsOnBehalf(
    address from,
    address to,
    uint256 amount
  ) external override onlyClaimHelper returns (uint256) {
    return _claimRewards(from, to, amount);
  }

  /// @inheritdoc IStakedTokenV3
  function claimRewardsAndRedeem(
    address to,
    uint256 claimAmount,
    uint256 redeemAmount
  ) external override {
    _claimRewards(msg.sender, to, claimAmount);
    _redeem(msg.sender, to, redeemAmount);
  }

  /// @inheritdoc IStakedTokenV3
  function claimRewardsAndRedeemOnBehalf(
    address from,
    address to,
    uint256 claimAmount,
    uint256 redeemAmount
  ) external override onlyClaimHelper {
    _claimRewards(from, to, claimAmount);
    _redeem(from, to, redeemAmount);
  }

  /// @inheritdoc IStakedTokenV3
  function getExchangeRate() public view override returns (uint216) {
    return _currentExchangeRate;
  }

  /// @inheritdoc IStakedTokenV3
  function previewRedeem(uint256 shares)
    public
    view
    override
    returns (uint256)
  {
    return (EXCHANGE_RATE_UNIT * shares) / _currentExchangeRate;
  }

  /// @inheritdoc IStakedTokenV3
  function slash(address destination, uint256 amount)
    external
    override
    onlySlashingAdmin
    returns (uint256)
  {
    require(!inPostSlashingPeriod, 'PREVIOUS_SLASHING_NOT_SETTLED');
    require(amount > 0, 'ZERO_AMOUNT');
    uint256 currentShares = totalSupply();
    uint256 balance = previewRedeem(currentShares);

    uint256 maxSlashable = balance.percentMul(_maxSlashablePercentage);

    if (amount > maxSlashable) {
      amount = maxSlashable;
    }
    require(balance - amount >= LOWER_BOUND, 'REMAINING_LT_MINIMUM');

    inPostSlashingPeriod = true;
    _updateExchangeRate(_getExchangeRate(balance - amount, currentShares));

    STAKED_TOKEN.safeTransfer(destination, amount);

    emit Slashed(destination, amount);
    return amount;
  }

  /// @inheritdoc IStakedTokenV3
  function returnFunds(uint256 amount) external override {
    require(amount >= LOWER_BOUND, 'AMOUNT_LT_MINIMUM');
    uint256 currentShares = totalSupply();
    require(currentShares >= LOWER_BOUND, 'SHARES_LT_MINIMUM');
    uint256 assets = previewRedeem(currentShares);
    _updateExchangeRate(_getExchangeRate(assets + amount, currentShares));

    STAKED_TOKEN.safeTransferFrom(msg.sender, address(this), amount);
    emit FundsReturned(amount);
  }

  /// @inheritdoc IStakedTokenV3
  function settleSlashing() external override onlySlashingAdmin {
    inPostSlashingPeriod = false;
    emit SlashingSettled();
  }

  /// @inheritdoc IStakedTokenV3
  function setMaxSlashablePercentage(uint256 percentage)
    external
    override
    onlySlashingAdmin
  {
    _setMaxSlashablePercentage(percentage);
  }

  /// @inheritdoc IStakedTokenV3
  function getMaxSlashablePercentage()
    external
    view
    override
    returns (uint256)
  {
    return _maxSlashablePercentage;
  }

  /// @inheritdoc IStakedTokenV3
  function setCooldownSeconds(uint256 cooldownSeconds)
    external
    onlyCooldownAdmin
  {
    _setCooldownSeconds(cooldownSeconds);
  }

  /// @inheritdoc IStakedTokenV3
  function getCooldownSeconds() external view returns (uint256) {
    return _cooldownSeconds;
  }

  /// @inheritdoc IStakedTokenV3
  function COOLDOWN_SECONDS() external view returns (uint256) {
    return _cooldownSeconds;
  }

  /**
   * @dev sets the max slashable percentage
   * @param percentage must be strictly lower 100% as otherwise the exchange rate calculation would result in 0 division
   */
  function _setMaxSlashablePercentage(uint256 percentage) internal {
    require(
      percentage < PercentageMath.PERCENTAGE_FACTOR,
      'INVALID_SLASHING_PERCENTAGE'
    );

    _maxSlashablePercentage = percentage;
    emit MaxSlashablePercentageChanged(percentage);
  }

  /**
   * @dev sets the cooldown seconds
   * @param cooldownSeconds the new amount of cooldown seconds
   */
  function _setCooldownSeconds(uint256 cooldownSeconds) internal {
    _cooldownSeconds = cooldownSeconds;
    emit CooldownSecondsChanged(cooldownSeconds);
  }

  /**
   * @dev claims the rewards for a specified address to a specified address
   * @param from The address of the from from which to claim
   * @param to Address to receive the rewards
   * @param amount Amount to claim
   * @return amount claimed
   */
  function _claimRewards(
    address from,
    address to,
    uint256 amount
  ) internal returns (uint256) {
    require(amount != 0, 'INVALID_ZERO_AMOUNT');
    uint256 newTotalRewards = _updateCurrentUnclaimedRewards(
      from,
      balanceOf(from),
      false
    );

    uint256 amountToClaim = (amount > newTotalRewards)
      ? newTotalRewards
      : amount;
    require(amountToClaim != 0, 'INVALID_ZERO_AMOUNT');

    stakerRewardsToClaim[from] = newTotalRewards - amountToClaim;
    REWARD_TOKEN.safeTransferFrom(REWARDS_VAULT, to, amountToClaim);
    emit RewardsClaimed(from, to, amountToClaim);
    return amountToClaim;
  }

  /**
   * @dev Claims an \`amount\` of \`REWARD_TOKEN\` and stakes.
   * @param from The address of the from from which to claim
   * @param to Address to stake to
   * @param amount Amount to claim
   * @return amount claimed
   */
  function _claimRewardsAndStakeOnBehalf(
    address from,
    address to,
    uint256 amount
  ) internal returns (uint256) {
    require(REWARD_TOKEN == STAKED_TOKEN, 'REWARD_TOKEN_IS_NOT_STAKED_TOKEN');

    uint256 userUpdatedRewards = _updateCurrentUnclaimedRewards(
      from,
      balanceOf(from),
      true
    );
    uint256 amountToClaim = (amount > userUpdatedRewards)
      ? userUpdatedRewards
      : amount;

    if (amountToClaim != 0) {
      _claimRewards(from, address(this), amountToClaim);
      _stake(address(this), to, amountToClaim);
    }

    return amountToClaim;
  }

  /**
   * @dev Allows staking a specified amount of STAKED_TOKEN
   * @param to The address to receiving the shares
   * @param amount The amount of assets to be staked
   */
  function _stake(
    address from,
    address to,
    uint256 amount
  ) internal {
    require(!inPostSlashingPeriod, 'SLASHING_ONGOING');
    require(amount != 0, 'INVALID_ZERO_AMOUNT');

    uint256 balanceOfTo = balanceOf(to);

    uint256 accruedRewards = _updateUserAssetInternal(
      to,
      address(this),
      balanceOfTo,
      totalSupply()
    );

    if (accruedRewards != 0) {
      stakerRewardsToClaim[to] = stakerRewardsToClaim[to] + accruedRewards;
      emit RewardsAccrued(to, accruedRewards);
    }

    uint256 sharesToMint = previewStake(amount);

    STAKED_TOKEN.safeTransferFrom(from, address(this), amount);

    _mint(to, sharesToMint);

    emit Staked(from, to, amount, sharesToMint);
  }

  /**
   * @dev Redeems staked tokens, and stop earning rewards
   * @param from Address to redeem from
   * @param to Address to redeem to
   * @param amount Amount to redeem
   */
  function _redeem(
    address from,
    address to,
    uint256 amount
  ) internal {
    require(amount != 0, 'INVALID_ZERO_AMOUNT');

    CooldownSnapshot memory cooldownSnapshot = stakersCooldowns[from];
    if (!inPostSlashingPeriod) {
      require(
        (block.timestamp > cooldownSnapshot.timestamp + _cooldownSeconds),
        'INSUFFICIENT_COOLDOWN'
      );
      require(
        (block.timestamp - (cooldownSnapshot.timestamp + _cooldownSeconds) <=
          UNSTAKE_WINDOW),
        'UNSTAKE_WINDOW_FINISHED'
      );
    }

    uint256 balanceOfFrom = balanceOf(from);
    uint256 maxRedeemable = inPostSlashingPeriod
      ? balanceOfFrom
      : cooldownSnapshot.amount;
    require(maxRedeemable != 0, 'INVALID_ZERO_MAX_REDEEMABLE');

    uint256 amountToRedeem = (amount > maxRedeemable) ? maxRedeemable : amount;

    _updateCurrentUnclaimedRewards(from, balanceOfFrom, true);

    uint256 underlyingToRedeem = previewRedeem(amountToRedeem);

    _burn(from, amountToRedeem);

    if (cooldownSnapshot.timestamp != 0) {
      if (cooldownSnapshot.amount - amountToRedeem == 0) {
        delete stakersCooldowns[from];
      } else {
        stakersCooldowns[from].amount =
          stakersCooldowns[from].amount -
          amountToRedeem.toUint184();
      }
    }

    IERC20(STAKED_TOKEN).safeTransfer(to, underlyingToRedeem);

    emit Redeem(from, to, underlyingToRedeem, amountToRedeem);
  }

  /**
   * @dev Updates the exchangeRate and emits events accordingly
   * @param newExchangeRate the new exchange rate
   */
  function _updateExchangeRate(uint216 newExchangeRate) internal virtual {
    require(newExchangeRate != 0, 'ZERO_EXCHANGE_RATE');
    _currentExchangeRate = newExchangeRate;
    emit ExchangeRateChanged(newExchangeRate);
  }

  /**
   * @dev calculates the exchange rate based on totalAssets and totalShares
   * @dev always rounds up to ensure 100% backing of shares by rounding in favor of the contract
   * @param totalAssets The total amount of assets staked
   * @param totalShares The total amount of shares
   * @return exchangeRate as 18 decimal precision uint216
   */
  function _getExchangeRate(uint256 totalAssets, uint256 totalShares)
    internal
    pure
    returns (uint216)
  {
    return
      (((totalShares * EXCHANGE_RATE_UNIT) + totalAssets - 1) / totalAssets)
        .toUint216();
  }

  function _transfer(
    address from,
    address to,
    uint256 amount
  ) internal override {
    uint256 balanceOfFrom = balanceOf(from);
    // Sender
    _updateCurrentUnclaimedRewards(from, balanceOfFrom, true);

    // Recipient
    if (from != to) {
      uint256 balanceOfTo = balanceOf(to);
      _updateCurrentUnclaimedRewards(to, balanceOfTo, true);

      CooldownSnapshot memory previousSenderCooldown = stakersCooldowns[from];
      if (previousSenderCooldown.timestamp != 0) {
        // if cooldown was set and whole balance of sender was transferred - clear cooldown
        if (balanceOfFrom == amount) {
          delete stakersCooldowns[from];
        } else if (balanceOfFrom - amount < previousSenderCooldown.amount) {
          stakersCooldowns[from].amount = uint184(balanceOfFrom - amount);
        }
      }
    }

    super._transfer(from, to, amount);
  }
}
",
          },
          {
            "id": 36,
            "name": "GovernancePowerWithSnapshot.sol",
            "path": "src/lib/GovernancePowerWithSnapshot.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {ERC20} from '../lib/ERC20.sol';
import {ITransferHook} from '../interfaces/ITransferHook.sol';
import {
  GovernancePowerDelegationERC20
} from './GovernancePowerDelegationERC20.sol';

/**
 * @title ERC20WithSnapshot
 * @notice ERC20 including snapshots of balances on transfer-related actions
 * @author Aave
 **/
abstract contract GovernancePowerWithSnapshot is GovernancePowerDelegationERC20 {
  /**
   * @dev The following storage layout points to the prior StakedToken.sol implementation:
   * _snapshots => _votingSnapshots
   * _snapshotsCounts =>  _votingSnapshotsCounts
   * _aaveGovernance => _aaveGovernance
   */
  mapping(address => mapping(uint256 => Snapshot)) public _votingSnapshots;
  mapping(address => uint256) public _votingSnapshotsCounts;

  /// @dev reference to the Aave governance contract to call (if initialized) on _beforeTokenTransfer
  /// !!! IMPORTANT The Aave governance is considered a trustable contract, being its responsibility
  /// to control all potential reentrancies by calling back the this contract
  /// @dev DEPRECATED
  ITransferHook public _aaveGovernance;
}
",
          },
          {
            "id": 40,
            "name": "RoleManager.sol",
            "path": "src/utils/RoleManager.sol",
            "source": "pragma solidity ^0.8.0;

/**
 * @title RoleManager
 * @notice Generic role manager to manage slashing and cooldown admin in StakedAaveV3.
 *         It implements a claim admin role pattern to safely migrate between different admin addresses
 * @author Aave
 **/
contract RoleManager {
  struct InitAdmin {
    uint256 role;
    address admin;
  }

  mapping(uint256 => address) private _admins;
  mapping(uint256 => address) private _pendingAdmins;

  event PendingAdminChanged(address indexed newPendingAdmin, uint256 role);
  event RoleClaimed(address indexed newAdmin, uint256 role);

  modifier onlyRoleAdmin(uint256 role) {
    require(_admins[role] == msg.sender, 'CALLER_NOT_ROLE_ADMIN');
    _;
  }

  modifier onlyPendingRoleAdmin(uint256 role) {
    require(
      _pendingAdmins[role] == msg.sender,
      'CALLER_NOT_PENDING_ROLE_ADMIN'
    );
    _;
  }

  /**
   * @dev returns the admin associated with the specific role
   * @param role the role associated with the admin being returned
   **/
  function getAdmin(uint256 role) public view returns (address) {
    return _admins[role];
  }

  /**
   * @dev returns the pending admin associated with the specific role
   * @param role the role associated with the pending admin being returned
   **/
  function getPendingAdmin(uint256 role) public view returns (address) {
    return _pendingAdmins[role];
  }

  /**
   * @dev sets the pending admin for a specific role
   * @param role the role associated with the new pending admin being set
   * @param newPendingAdmin the address of the new pending admin
   **/
  function setPendingAdmin(uint256 role, address newPendingAdmin)
    public
    onlyRoleAdmin(role)
  {
    _pendingAdmins[role] = newPendingAdmin;
    emit PendingAdminChanged(newPendingAdmin, role);
  }

  /**
   * @dev allows the caller to become a specific role admin
   * @param role the role associated with the admin claiming the new role
   **/
  function claimRoleAdmin(uint256 role) external onlyPendingRoleAdmin(role) {
    _admins[role] = msg.sender;
    _pendingAdmins[role] = address(0);
    emit RoleClaimed(msg.sender, role);
  }

  function _initAdmins(InitAdmin[] memory initAdmins) internal {
    for (uint256 i = 0; i < initAdmins.length; i++) {
      require(
        _admins[initAdmins[i].role] == address(0) &&
          initAdmins[i].admin != address(0),
        'ADMIN_CANNOT_BE_INITIALIZED'
      );
      _admins[initAdmins[i].role] = initAdmins[i].admin;
      emit RoleClaimed(initAdmins[i].admin, initAdmins[i].role);
    }
  }
}
",
          },
          {
            "id": 27,
            "name": "IStakedAaveV3.sol",
            "path": "src/interfaces/IStakedAaveV3.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {IStakedTokenV3} from './IStakedTokenV3.sol';
import {IGhoVariableDebtTokenTransferHook} from './IGhoVariableDebtTokenTransferHook.sol';

interface IStakedAaveV3 is IStakedTokenV3 {
  struct ExchangeRateSnapshot {
    uint40 blockNumber;
    uint216 value;
  }

  event GHODebtTokenChanged(address indexed newDebtToken);

  /**
   * @dev Returnes the number of excahngeRate snapshots
   */
  function getExchangeRateSnapshotsCount() external view returns (uint32);

  /**
   * @dev Returns the exchangeRate for a specified index
   * @param index Index of the exchangeRate
   */
  function getExchangeRateSnapshot(uint32 index)
    external
    view
    returns (ExchangeRateSnapshot memory);

  /**
   * @dev Sets the GHO debt token (only callable by SHORT_EXECUTOR)
   * @param newGHODebtToken Address to GHO debt token
   */
  function setGHODebtToken(IGhoVariableDebtTokenTransferHook newGHODebtToken)
    external;

  /**
   * @dev Claims an \`amount\` of \`REWARD_TOKEN\` and stakes.
   * @param to Address to stake to
   * @param amount Amount to claim
   */
  function claimRewardsAndStake(address to, uint256 amount)
    external
    returns (uint256);

  /**
   * @dev Claims an \`amount\` of \`REWARD_TOKEN\` and stakes. Only the claim helper contract is allowed to call this function
   * @param from The address of the from from which to claim
   * @param to Address to stake to
   * @param amount Amount to claim
   */
  function claimRewardsAndStakeOnBehalf(
    address from,
    address to,
    uint256 amount
  ) external returns (uint256);

  /**
   * @dev Allows staking a certain amount of STAKED_TOKEN with gasless approvals (permit)
   * @param from The address staking the token
   * @param amount The amount to be staked
   * @param deadline The permit execution deadline
   * @param v The v component of the signed message
   * @param r The r component of the signed message
   * @param s The s component of the signed message
   */
  function stakeWithPermit(
    address from,
    uint256 amount,
    uint256 deadline,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external;
}
",
          },
          {
            "id": 34,
            "name": "ERC20.sol",
            "path": "src/lib/ERC20.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)

pragma solidity ^0.8.0;

import \\"../interfaces/IERC20.sol\\";
import \\"../interfaces/IERC20Metadata.sol\\";
import \\"./Context.sol\\";
/**
 * @dev Implementation of the {IERC20} interface.
 *
 * This implementation is agnostic to the way tokens are created. This means
 * that a supply mechanism has to be added in a derived contract using {_mint}.
 * For a generic mechanism see {ERC20PresetMinterPauser}.
 *
 * TIP: For a detailed writeup see our guide
 * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How
 * to implement supply mechanisms].
 *
 * We have followed general OpenZeppelin Contracts guidelines: functions revert
 * instead returning \`false\` on failure. This behavior is nonetheless
 * conventional and does not conflict with the expectations of ERC20
 * applications.
 *
 * Additionally, an {Approval} event is emitted on calls to {transferFrom}.
 * This allows applications to reconstruct the allowance for all accounts just
 * by listening to said events. Other implementations of the EIP may not emit
 * these events, as it isn't required by the specification.
 *
 * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}
 * functions have been added to mitigate the well-known issues around setting
 * allowances. See {IERC20-approve}.
 */
contract ERC20 is Context, IERC20, IERC20Metadata {
    mapping(address => uint256) internal _balances;

    mapping(address => mapping(address => uint256)) private _allowances;

    uint256 internal _totalSupply;

    string private _name;
    string private _symbol;
    uint8 private _decimals; // @deprecated
    /**
     * @dev Sets the values for {name} and {symbol}.
     *
     * The default value of {decimals} is 18. To select a different value for
     * {decimals} you should overload it.
     *
     * All two of these values are immutable: they can only be set once during
     * construction.
     */
    constructor() {}

    /**
     * @dev Returns the name of the token.
     */
    function name() public view virtual override returns (string memory) {
        return _name;
    }

    /**
     * @dev Returns the symbol of the token, usually a shorter version of the
     * name.
     */
    function symbol() public view virtual override returns (string memory) {
        return _symbol;
    }

    /**
     * @dev Returns the number of decimals used to get its user representation.
     * For example, if \`decimals\` equals \`2\`, a balance of \`505\` tokens should
     * be displayed to a user as \`5.05\` (\`505 / 10 ** 2\`).
     *
     * Tokens usually opt for a value of 18, imitating the relationship between
     * Ether and Wei. This is the value {ERC20} uses, unless this function is
     * overridden;
     *
     * NOTE: This information is only used for _display_ purposes: it in
     * no way affects any of the arithmetic of the contract, including
     * {IERC20-balanceOf} and {IERC20-transfer}.
     */
    function decimals() public view virtual override returns (uint8) {
        return 18;
    }

    /**
     * @dev See {IERC20-totalSupply}.
     */
    function totalSupply() public view virtual override returns (uint256) {
        return _totalSupply;
    }

    /**
     * @dev See {IERC20-balanceOf}.
     */
    function balanceOf(address account) public view virtual override returns (uint256) {
        return _balances[account];
    }

    /**
     * @dev See {IERC20-transfer}.
     *
     * Requirements:
     *
     * - \`to\` cannot be the zero address.
     * - the caller must have a balance of at least \`amount\`.
     */
    function transfer(address to, uint256 amount) public virtual override returns (bool) {
        address owner = _msgSender();
        _transfer(owner, to, amount);
        return true;
    }

    /**
     * @dev See {IERC20-allowance}.
     */
    function allowance(address owner, address spender) public view virtual override returns (uint256) {
        return _allowances[owner][spender];
    }

    /**
     * @dev See {IERC20-approve}.
     *
     * NOTE: If \`amount\` is the maximum \`uint256\`, the allowance is not updated on
     * \`transferFrom\`. This is semantically equivalent to an infinite approval.
     *
     * Requirements:
     *
     * - \`spender\` cannot be the zero address.
     */
    function approve(address spender, uint256 amount) public virtual override returns (bool) {
        address owner = _msgSender();
        _approve(owner, spender, amount);
        return true;
    }

    /**
     * @dev See {IERC20-transferFrom}.
     *
     * Emits an {Approval} event indicating the updated allowance. This is not
     * required by the EIP. See the note at the beginning of {ERC20}.
     *
     * NOTE: Does not update the allowance if the current allowance
     * is the maximum \`uint256\`.
     *
     * Requirements:
     *
     * - \`from\` and \`to\` cannot be the zero address.
     * - \`from\` must have a balance of at least \`amount\`.
     * - the caller must have allowance for \`\`from\`\`'s tokens of at least
     * \`amount\`.
     */
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual override returns (bool) {
        address spender = _msgSender();
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }

    /**
     * @dev Atomically increases the allowance granted to \`spender\` by the caller.
     *
     * This is an alternative to {approve} that can be used as a mitigation for
     * problems described in {IERC20-approve}.
     *
     * Emits an {Approval} event indicating the updated allowance.
     *
     * Requirements:
     *
     * - \`spender\` cannot be the zero address.
     */
    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {
        address owner = _msgSender();
        _approve(owner, spender, allowance(owner, spender) + addedValue);
        return true;
    }

    /**
     * @dev Atomically decreases the allowance granted to \`spender\` by the caller.
     *
     * This is an alternative to {approve} that can be used as a mitigation for
     * problems described in {IERC20-approve}.
     *
     * Emits an {Approval} event indicating the updated allowance.
     *
     * Requirements:
     *
     * - \`spender\` cannot be the zero address.
     * - \`spender\` must have allowance for the caller of at least
     * \`subtractedValue\`.
     */
    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {
        address owner = _msgSender();
        uint256 currentAllowance = allowance(owner, spender);
        require(currentAllowance >= subtractedValue, \\"ERC20: decreased allowance below zero\\");
        unchecked {
            _approve(owner, spender, currentAllowance - subtractedValue);
        }

        return true;
    }

    /**
     * @dev Moves \`amount\` of tokens from \`from\` to \`to\`.
     *
     * This internal function is equivalent to {transfer}, and can be used to
     * e.g. implement automatic token fees, slashing mechanisms, etc.
     *
     * Emits a {Transfer} event.
     *
     * Requirements:
     *
     * - \`from\` cannot be the zero address.
     * - \`to\` cannot be the zero address.
     * - \`from\` must have a balance of at least \`amount\`.
     */
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        require(from != address(0), \\"ERC20: transfer from the zero address\\");
        require(to != address(0), \\"ERC20: transfer to the zero address\\");

        _beforeTokenTransfer(from, to, amount);

        uint256 fromBalance = _balances[from];
        require(fromBalance >= amount, \\"ERC20: transfer amount exceeds balance\\");
        unchecked {
            _balances[from] = fromBalance - amount;
            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by
            // decrementing then incrementing.
            _balances[to] += amount;
        }

        emit Transfer(from, to, amount);

        _afterTokenTransfer(from, to, amount);
    }

    /** @dev Creates \`amount\` tokens and assigns them to \`account\`, increasing
     * the total supply.
     *
     * Emits a {Transfer} event with \`from\` set to the zero address.
     *
     * Requirements:
     *
     * - \`account\` cannot be the zero address.
     */
    function _mint(address account, uint256 amount) internal virtual {
        require(account != address(0), \\"ERC20: mint to the zero address\\");

        _beforeTokenTransfer(address(0), account, amount);

        _totalSupply += amount;
        unchecked {
            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.
            _balances[account] += amount;
        }
        emit Transfer(address(0), account, amount);

        _afterTokenTransfer(address(0), account, amount);
    }

    /**
     * @dev Destroys \`amount\` tokens from \`account\`, reducing the
     * total supply.
     *
     * Emits a {Transfer} event with \`to\` set to the zero address.
     *
     * Requirements:
     *
     * - \`account\` cannot be the zero address.
     * - \`account\` must have at least \`amount\` tokens.
     */
    function _burn(address account, uint256 amount) internal virtual {
        require(account != address(0), \\"ERC20: burn from the zero address\\");

        _beforeTokenTransfer(account, address(0), amount);

        uint256 accountBalance = _balances[account];
        require(accountBalance >= amount, \\"ERC20: burn amount exceeds balance\\");
        unchecked {
            _balances[account] = accountBalance - amount;
            // Overflow not possible: amount <= accountBalance <= totalSupply.
            _totalSupply -= amount;
        }

        emit Transfer(account, address(0), amount);

        _afterTokenTransfer(account, address(0), amount);
    }

    /**
     * @dev Sets \`amount\` as the allowance of \`spender\` over the \`owner\` s tokens.
     *
     * This internal function is equivalent to \`approve\`, and can be used to
     * e.g. set automatic allowances for certain subsystems, etc.
     *
     * Emits an {Approval} event.
     *
     * Requirements:
     *
     * - \`owner\` cannot be the zero address.
     * - \`spender\` cannot be the zero address.
     */
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), \\"ERC20: approve from the zero address\\");
        require(spender != address(0), \\"ERC20: approve to the zero address\\");

        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }

    /**
     * @dev Updates \`owner\` s allowance for \`spender\` based on spent \`amount\`.
     *
     * Does not update the allowance amount in case of infinite allowance.
     * Revert if not enough allowance is available.
     *
     * Might emit an {Approval} event.
     */
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, \\"ERC20: insufficient allowance\\");
            unchecked {
                _approve(owner, spender, currentAllowance - amount);
            }
        }
    }

    /**
     * @dev Hook that is called before any transfer of tokens. This includes
     * minting and burning.
     *
     * Calling conditions:
     *
     * - when \`from\` and \`to\` are both non-zero, \`amount\` of \`\`from\`\`'s tokens
     * will be transferred to \`to\`.
     * - when \`from\` is zero, \`amount\` tokens will be minted for \`to\`.
     * - when \`to\` is zero, \`amount\` of \`\`from\`\`'s tokens will be burned.
     * - \`from\` and \`to\` are never both zero.
     *
     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].
     */
    function _beforeTokenTransfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {}

    /**
     * @dev Hook that is called after any transfer of tokens. This includes
     * minting and burning.
     *
     * Calling conditions:
     *
     * - when \`from\` and \`to\` are both non-zero, \`amount\` of \`\`from\`\`'s tokens
     * has been transferred to \`to\`.
     * - when \`from\` is zero, \`amount\` tokens have been minted for \`to\`.
     * - when \`to\` is zero, \`amount\` of \`\`from\`\`'s tokens have been burned.
     * - \`from\` and \`to\` are never both zero.
     *
     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].
     */
    function _afterTokenTransfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {}
}
",
          },
          {
            "id": 1,
            "name": "AaveGovernanceV2.sol",
            "path": "lib/aave-address-book/src/AaveGovernanceV2.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity >=0.6.0;
pragma abicoder v2;

interface IGovernanceStrategy {
  /**
   * @dev Returns the Proposition Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Proposition Power
   * @return Power number
   **/
  function getPropositionPowerAt(address user, uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the total supply of Outstanding Proposition Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalPropositionSupplyAt(uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the total supply of Outstanding Voting Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalVotingSupplyAt(uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the Vote Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Vote Power
   * @return Vote number
   **/
  function getVotingPowerAt(address user, uint256 blockNumber) external view returns (uint256);
}

interface IExecutorWithTimelock {
  /**
   * @dev emitted when a new pending admin is set
   * @param newPendingAdmin address of the new pending admin
   **/
  event NewPendingAdmin(address newPendingAdmin);

  /**
   * @dev emitted when a new admin is set
   * @param newAdmin address of the new admin
   **/
  event NewAdmin(address newAdmin);

  /**
   * @dev emitted when a new delay (between queueing and execution) is set
   * @param delay new delay
   **/
  event NewDelay(uint256 delay);

  /**
   * @dev emitted when a new (trans)action is Queued.
   * @param actionHash hash of the action
   * @param target address of the targeted contract
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  event QueuedAction(
    bytes32 actionHash,
    address indexed target,
    uint256 value,
    string signature,
    bytes data,
    uint256 executionTime,
    bool withDelegatecall
  );

  /**
   * @dev emitted when an action is Cancelled
   * @param actionHash hash of the action
   * @param target address of the targeted contract
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  event CancelledAction(
    bytes32 actionHash,
    address indexed target,
    uint256 value,
    string signature,
    bytes data,
    uint256 executionTime,
    bool withDelegatecall
  );

  /**
   * @dev emitted when an action is Cancelled
   * @param actionHash hash of the action
   * @param target address of the targeted contract
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   * @param resultData the actual callData used on the target
   **/
  event ExecutedAction(
    bytes32 actionHash,
    address indexed target,
    uint256 value,
    string signature,
    bytes data,
    uint256 executionTime,
    bool withDelegatecall,
    bytes resultData
  );

  /**
   * @dev Getter of the current admin address (should be governance)
   * @return The address of the current admin
   **/
  function getAdmin() external view returns (address);

  /**
   * @dev Getter of the current pending admin address
   * @return The address of the pending admin
   **/
  function getPendingAdmin() external view returns (address);

  /**
   * @dev Getter of the delay between queuing and execution
   * @return The delay in seconds
   **/
  function getDelay() external view returns (uint256);

  /**
   * @dev Returns whether an action (via actionHash) is queued
   * @param actionHash hash of the action to be checked
   * keccak256(abi.encode(target, value, signature, data, executionTime, withDelegatecall))
   * @return true if underlying action of actionHash is queued
   **/
  function isActionQueued(bytes32 actionHash) external view returns (bool);

  /**
   * @dev Checks whether a proposal is over its grace period
   * @param governance Governance contract
   * @param proposalId Id of the proposal against which to test
   * @return true of proposal is over grace period
   **/
  function isProposalOverGracePeriod(
    IAaveGovernanceV2 governance,
    uint256 proposalId
  ) external view returns (bool);

  /**
   * @dev Getter of grace period constant
   * @return grace period in seconds
   **/
  function GRACE_PERIOD() external view returns (uint256);

  /**
   * @dev Getter of minimum delay constant
   * @return minimum delay in seconds
   **/
  function MINIMUM_DELAY() external view returns (uint256);

  /**
   * @dev Getter of maximum delay constant
   * @return maximum delay in seconds
   **/
  function MAXIMUM_DELAY() external view returns (uint256);

  /**
   * @dev Function, called by Governance, that queue a transaction, returns action hash
   * @param target smart contract target
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  function queueTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external returns (bytes32);

  /**
   * @dev Function, called by Governance, that cancels a transaction, returns the callData executed
   * @param target smart contract target
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  function executeTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external payable returns (bytes memory);

  /**
   * @dev Function, called by Governance, that cancels a transaction, returns action hash
   * @param target smart contract target
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  function cancelTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external returns (bytes32);
}

interface IAaveGovernanceV2 {
  enum ProposalState {
    Pending,
    Canceled,
    Active,
    Failed,
    Succeeded,
    Queued,
    Expired,
    Executed
  }

  struct Vote {
    bool support;
    uint248 votingPower;
  }

  struct Proposal {
    uint256 id;
    address creator;
    IExecutorWithTimelock executor;
    address[] targets;
    uint256[] values;
    string[] signatures;
    bytes[] calldatas;
    bool[] withDelegatecalls;
    uint256 startBlock;
    uint256 endBlock;
    uint256 executionTime;
    uint256 forVotes;
    uint256 againstVotes;
    bool executed;
    bool canceled;
    address strategy;
    bytes32 ipfsHash;
    mapping(address => Vote) votes;
  }

  struct ProposalWithoutVotes {
    uint256 id;
    address creator;
    IExecutorWithTimelock executor;
    address[] targets;
    uint256[] values;
    string[] signatures;
    bytes[] calldatas;
    bool[] withDelegatecalls;
    uint256 startBlock;
    uint256 endBlock;
    uint256 executionTime;
    uint256 forVotes;
    uint256 againstVotes;
    bool executed;
    bool canceled;
    address strategy;
    bytes32 ipfsHash;
  }

  /**
   * @dev emitted when a new proposal is created
   * @param id Id of the proposal
   * @param creator address of the creator
   * @param executor The ExecutorWithTimelock contract that will execute the proposal
   * @param targets list of contracts called by proposal's associated transactions
   * @param values list of value in wei for each propoposal's associated transaction
   * @param signatures list of function signatures (can be empty) to be used when created the callData
   * @param calldatas list of calldatas: if associated signature empty, calldata ready, else calldata is arguments
   * @param withDelegatecalls boolean, true = transaction delegatecalls the taget, else calls the target
   * @param startBlock block number when vote starts
   * @param endBlock block number when vote ends
   * @param strategy address of the governanceStrategy contract
   * @param ipfsHash IPFS hash of the proposal
   **/
  event ProposalCreated(
    uint256 id,
    address indexed creator,
    IExecutorWithTimelock indexed executor,
    address[] targets,
    uint256[] values,
    string[] signatures,
    bytes[] calldatas,
    bool[] withDelegatecalls,
    uint256 startBlock,
    uint256 endBlock,
    address strategy,
    bytes32 ipfsHash
  );

  /**
   * @dev emitted when a proposal is canceled
   * @param id Id of the proposal
   **/
  event ProposalCanceled(uint256 id);

  /**
   * @dev emitted when a proposal is queued
   * @param id Id of the proposal
   * @param executionTime time when proposal underlying transactions can be executed
   * @param initiatorQueueing address of the initiator of the queuing transaction
   **/
  event ProposalQueued(uint256 id, uint256 executionTime, address indexed initiatorQueueing);
  /**
   * @dev emitted when a proposal is executed
   * @param id Id of the proposal
   * @param initiatorExecution address of the initiator of the execution transaction
   **/
  event ProposalExecuted(uint256 id, address indexed initiatorExecution);
  /**
   * @dev emitted when a vote is registered
   * @param id Id of the proposal
   * @param voter address of the voter
   * @param support boolean, true = vote for, false = vote against
   * @param votingPower Power of the voter/vote
   **/
  event VoteEmitted(uint256 id, address indexed voter, bool support, uint256 votingPower);

  event GovernanceStrategyChanged(address indexed newStrategy, address indexed initiatorChange);

  event VotingDelayChanged(uint256 newVotingDelay, address indexed initiatorChange);

  event ExecutorAuthorized(address executor);

  event ExecutorUnauthorized(address executor);

  /**
   * @dev Creates a Proposal (needs Proposition Power of creator > Threshold)
   * @param executor The ExecutorWithTimelock contract that will execute the proposal
   * @param targets list of contracts called by proposal's associated transactions
   * @param values list of value in wei for each propoposal's associated transaction
   * @param signatures list of function signatures (can be empty) to be used when created the callData
   * @param calldatas list of calldatas: if associated signature empty, calldata ready, else calldata is arguments
   * @param withDelegatecalls if true, transaction delegatecalls the taget, else calls the target
   * @param ipfsHash IPFS hash of the proposal
   **/
  function create(
    IExecutorWithTimelock executor,
    address[] memory targets,
    uint256[] memory values,
    string[] memory signatures,
    bytes[] memory calldatas,
    bool[] memory withDelegatecalls,
    bytes32 ipfsHash
  ) external returns (uint256);

  /**
   * @dev Cancels a Proposal,
   * either at anytime by guardian
   * or when proposal is Pending/Active and threshold no longer reached
   * @param proposalId id of the proposal
   **/
  function cancel(uint256 proposalId) external;

  /**
   * @dev Queue the proposal (If Proposal Succeeded)
   * @param proposalId id of the proposal to queue
   **/
  function queue(uint256 proposalId) external;

  /**
   * @dev Execute the proposal (If Proposal Queued)
   * @param proposalId id of the proposal to execute
   **/
  function execute(uint256 proposalId) external payable;

  /**
   * @dev Function allowing msg.sender to vote for/against a proposal
   * @param proposalId id of the proposal
   * @param support boolean, true = vote for, false = vote against
   **/
  function submitVote(uint256 proposalId, bool support) external;

  /**
   * @dev Function to register the vote of user that has voted offchain via signature
   * @param proposalId id of the proposal
   * @param support boolean, true = vote for, false = vote against
   * @param v v part of the voter signature
   * @param r r part of the voter signature
   * @param s s part of the voter signature
   **/
  function submitVoteBySignature(
    uint256 proposalId,
    bool support,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external;

  /**
   * @dev Set new GovernanceStrategy
   * Note: owner should be a timelocked executor, so needs to make a proposal
   * @param governanceStrategy new Address of the GovernanceStrategy contract
   **/
  function setGovernanceStrategy(address governanceStrategy) external;

  /**
   * @dev Set new Voting Delay (delay before a newly created proposal can be voted on)
   * Note: owner should be a timelocked executor, so needs to make a proposal
   * @param votingDelay new voting delay in seconds
   **/
  function setVotingDelay(uint256 votingDelay) external;

  /**
   * @dev Add new addresses to the list of authorized executors
   * @param executors list of new addresses to be authorized executors
   **/
  function authorizeExecutors(address[] memory executors) external;

  /**
   * @dev Remove addresses to the list of authorized executors
   * @param executors list of addresses to be removed as authorized executors
   **/
  function unauthorizeExecutors(address[] memory executors) external;

  /**
   * @dev Let the guardian abdicate from its priviledged rights
   **/
  function __abdicate() external;

  /**
   * @dev Getter of the current GovernanceStrategy address
   * @return The address of the current GovernanceStrategy contracts
   **/
  function getGovernanceStrategy() external view returns (address);

  /**
   * @dev Getter of the current Voting Delay (delay before a created proposal can be voted on)
   * Different from the voting duration
   * @return The voting delay in seconds
   **/
  function getVotingDelay() external view returns (uint256);

  /**
   * @dev Returns whether an address is an authorized executor
   * @param executor address to evaluate as authorized executor
   * @return true if authorized
   **/
  function isExecutorAuthorized(address executor) external view returns (bool);

  /**
   * @dev Getter the address of the guardian, that can mainly cancel proposals
   * @return The address of the guardian
   **/
  function getGuardian() external view returns (address);

  /**
   * @dev Getter of the proposal count (the current number of proposals ever created)
   * @return the proposal count
   **/
  function getProposalsCount() external view returns (uint256);

  /**
   * @dev Getter of a proposal by id
   * @param proposalId id of the proposal to get
   * @return the proposal as ProposalWithoutVotes memory object
   **/
  function getProposalById(uint256 proposalId) external view returns (ProposalWithoutVotes memory);

  /**
   * @dev Getter of the Vote of a voter about a proposal
   * Note: Vote is a struct: ({bool support, uint248 votingPower})
   * @param proposalId id of the proposal
   * @param voter address of the voter
   * @return The associated Vote memory object
   **/
  function getVoteOnProposal(uint256 proposalId, address voter) external view returns (Vote memory);

  /**
   * @dev Get the current state of a proposal
   * @param proposalId id of the proposal
   * @return The current state if the proposal
   **/
  function getProposalState(uint256 proposalId) external view returns (ProposalState);
}

library AaveGovernanceV2 {
  IAaveGovernanceV2 internal constant GOV =
    IAaveGovernanceV2(0xEC568fffba86c094cf06b22134B23074DFE2252c);

  IGovernanceStrategy public constant GOV_STRATEGY =
    IGovernanceStrategy(0xb7e383ef9B1E9189Fc0F71fb30af8aa14377429e);

  address public constant SHORT_EXECUTOR = 0xEE56e2B3D491590B5b31738cC34d5232F378a8D5;

  address public constant LONG_EXECUTOR = 0x79426A1c24B2978D90d7A5070a46C65B07bC4299;

  address public constant ARC_TIMELOCK = 0xAce1d11d836cb3F51Ef658FD4D353fFb3c301218;

  // https://github.com/aave/governance-crosschain-bridges
  address internal constant POLYGON_BRIDGE_EXECUTOR = 0xdc9A35B16DB4e126cFeDC41322b3a36454B1F772;

  address internal constant OPTIMISM_BRIDGE_EXECUTOR = 0x7d9103572bE58FfE99dc390E8246f02dcAe6f611;

  address internal constant ARBITRUM_BRIDGE_EXECUTOR = 0x7d9103572bE58FfE99dc390E8246f02dcAe6f611;

  address internal constant METIS_BRIDGE_EXECUTOR = 0x8EC77963068474a45016938Deb95E603Ca82a029;

  // https://github.com/bgd-labs/aave-v3-crosschain-listing-template/tree/master/src/contracts
  address internal constant CROSSCHAIN_FORWARDER_POLYGON =
    0x158a6bC04F0828318821baE797f50B0A1299d45b;

  address internal constant CROSSCHAIN_FORWARDER_OPTIMISM =
    0x5f5C02875a8e9B5A26fbd09040ABCfDeb2AA6711;

  address internal constant CROSSCHAIN_FORWARDER_ARBITRUM =
    0xd1B3E25fD7C8AE7CADDC6F71b461b79CD4ddcFa3;

  address internal constant CROSSCHAIN_FORWARDER_METIS = 0x2fE52eF191F0BE1D98459BdaD2F1d3160336C08f;
}
",
          },
          {
            "id": 3,
            "name": "AaveV2.sol",
            "path": "lib/aave-address-book/src/AaveV2.sol",
            "source": "// SPDX-License-Identifier: MIT
pragma solidity >=0.6.0;
pragma experimental ABIEncoderV2;

import {AggregatorInterface} from 'aave-v3-core/contracts/dependencies/chainlink/AggregatorInterface.sol';

library DataTypes {
  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.
  struct ReserveData {
    //stores the reserve configuration
    ReserveConfigurationMap configuration;
    //the liquidity index. Expressed in ray
    uint128 liquidityIndex;
    //variable borrow index. Expressed in ray
    uint128 variableBorrowIndex;
    //the current supply rate. Expressed in ray
    uint128 currentLiquidityRate;
    //the current variable borrow rate. Expressed in ray
    uint128 currentVariableBorrowRate;
    //the current stable borrow rate. Expressed in ray
    uint128 currentStableBorrowRate;
    uint40 lastUpdateTimestamp;
    //tokens addresses
    address aTokenAddress;
    address stableDebtTokenAddress;
    address variableDebtTokenAddress;
    //address of the interest rate strategy
    address interestRateStrategyAddress;
    //the id of the reserve. Represents the position in the list of the active reserves
    uint8 id;
  }

  struct ReserveConfigurationMap {
    //bit 0-15: LTV
    //bit 16-31: Liq. threshold
    //bit 32-47: Liq. bonus
    //bit 48-55: Decimals
    //bit 56: Reserve is active
    //bit 57: reserve is frozen
    //bit 58: borrowing is enabled
    //bit 59: stable rate borrowing enabled
    //bit 60-63: reserved
    //bit 64-79: reserve factor
    uint256 data;
  }

  struct UserConfigurationMap {
    uint256 data;
  }

  enum InterestRateMode {
    NONE,
    STABLE,
    VARIABLE
  }
}

library ConfiguratorInputTypes {
  struct InitReserveInput {
    address aTokenImpl;
    address stableDebtTokenImpl;
    address variableDebtTokenImpl;
    uint8 underlyingAssetDecimals;
    address interestRateStrategyAddress;
    address underlyingAsset;
    address treasury;
    address incentivesController;
    string underlyingAssetName;
    string aTokenName;
    string aTokenSymbol;
    string variableDebtTokenName;
    string variableDebtTokenSymbol;
    string stableDebtTokenName;
    string stableDebtTokenSymbol;
    bytes params;
  }

  struct UpdateATokenInput {
    address asset;
    address treasury;
    address incentivesController;
    string name;
    string symbol;
    address implementation;
    bytes params;
  }

  struct UpdateDebtTokenInput {
    address asset;
    address incentivesController;
    string name;
    string symbol;
    address implementation;
    bytes params;
  }
}

interface ILendingPoolAddressesProvider {
  event MarketIdSet(string newMarketId);
  event LendingPoolUpdated(address indexed newAddress);
  event ConfigurationAdminUpdated(address indexed newAddress);
  event EmergencyAdminUpdated(address indexed newAddress);
  event LendingPoolConfiguratorUpdated(address indexed newAddress);
  event LendingPoolCollateralManagerUpdated(address indexed newAddress);
  event PriceOracleUpdated(address indexed newAddress);
  event LendingRateOracleUpdated(address indexed newAddress);
  event ProxyCreated(bytes32 id, address indexed newAddress);
  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);

  function getMarketId() external view returns (string memory);

  function setMarketId(string calldata marketId) external;

  function setAddress(bytes32 id, address newAddress) external;

  function setAddressAsProxy(bytes32 id, address impl) external;

  function getAddress(bytes32 id) external view returns (address);

  function getLendingPool() external view returns (address);

  function setLendingPoolImpl(address pool) external;

  function getLendingPoolConfigurator() external view returns (address);

  function setLendingPoolConfiguratorImpl(address configurator) external;

  function getLendingPoolCollateralManager() external view returns (address);

  function setLendingPoolCollateralManager(address manager) external;

  function getPoolAdmin() external view returns (address);

  function setPoolAdmin(address admin) external;

  function getEmergencyAdmin() external view returns (address);

  function setEmergencyAdmin(address admin) external;

  function getPriceOracle() external view returns (address);

  function setPriceOracle(address priceOracle) external;

  function getLendingRateOracle() external view returns (address);

  function setLendingRateOracle(address lendingRateOracle) external;
}

interface ILendingPool {
  /**
   * @dev Emitted on deposit()
   * @param reserve The address of the underlying asset of the reserve
   * @param user The address initiating the deposit
   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens
   * @param amount The amount deposited
   * @param referral The referral code used
   **/
  event Deposit(
    address indexed reserve,
    address user,
    address indexed onBehalfOf,
    uint256 amount,
    uint16 indexed referral
  );

  /**
   * @dev Emitted on withdraw()
   * @param reserve The address of the underlyng asset being withdrawn
   * @param user The address initiating the withdrawal, owner of aTokens
   * @param to Address that will receive the underlying
   * @param amount The amount to be withdrawn
   **/
  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);

  /**
   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened
   * @param reserve The address of the underlying asset being borrowed
   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just
   * initiator of the transaction on flashLoan()
   * @param onBehalfOf The address that will be getting the debt
   * @param amount The amount borrowed out
   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable
   * @param borrowRate The numeric rate at which the user has borrowed
   * @param referral The referral code used
   **/
  event Borrow(
    address indexed reserve,
    address user,
    address indexed onBehalfOf,
    uint256 amount,
    uint256 borrowRateMode,
    uint256 borrowRate,
    uint16 indexed referral
  );

  /**
   * @dev Emitted on repay()
   * @param reserve The address of the underlying asset of the reserve
   * @param user The beneficiary of the repayment, getting his debt reduced
   * @param repayer The address of the user initiating the repay(), providing the funds
   * @param amount The amount repaid
   **/
  event Repay(
    address indexed reserve,
    address indexed user,
    address indexed repayer,
    uint256 amount
  );

  /**
   * @dev Emitted on swapBorrowRateMode()
   * @param reserve The address of the underlying asset of the reserve
   * @param user The address of the user swapping his rate mode
   * @param rateMode The rate mode that the user wants to swap to
   **/
  event Swap(address indexed reserve, address indexed user, uint256 rateMode);

  /**
   * @dev Emitted on setUserUseReserveAsCollateral()
   * @param reserve The address of the underlying asset of the reserve
   * @param user The address of the user enabling the usage as collateral
   **/
  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);

  /**
   * @dev Emitted on setUserUseReserveAsCollateral()
   * @param reserve The address of the underlying asset of the reserve
   * @param user The address of the user enabling the usage as collateral
   **/
  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);

  /**
   * @dev Emitted on rebalanceStableBorrowRate()
   * @param reserve The address of the underlying asset of the reserve
   * @param user The address of the user for which the rebalance has been executed
   **/
  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);

  /**
   * @dev Emitted on flashLoan()
   * @param target The address of the flash loan receiver contract
   * @param initiator The address initiating the flash loan
   * @param asset The address of the asset being flash borrowed
   * @param amount The amount flash borrowed
   * @param premium The fee flash borrowed
   * @param referralCode The referral code used
   **/
  event FlashLoan(
    address indexed target,
    address indexed initiator,
    address indexed asset,
    uint256 amount,
    uint256 premium,
    uint16 referralCode
  );

  /**
   * @dev Emitted when the pause is triggered.
   */
  event Paused();

  /**
   * @dev Emitted when the pause is lifted.
   */
  event Unpaused();

  /**
   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via
   * LendingPoolCollateral manager using a DELEGATECALL
   * This allows to have the events in the generated ABI for LendingPool.
   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation
   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation
   * @param user The address of the borrower getting liquidated
   * @param debtToCover The debt amount of borrowed \`asset\` the liquidator wants to cover
   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator
   * @param liquidator The address of the liquidator
   * @param receiveAToken \`true\` if the liquidators wants to receive the collateral aTokens, \`false\` if he wants
   * to receive the underlying collateral asset directly
   **/
  event LiquidationCall(
    address indexed collateralAsset,
    address indexed debtAsset,
    address indexed user,
    uint256 debtToCover,
    uint256 liquidatedCollateralAmount,
    address liquidator,
    bool receiveAToken
  );

  /**
   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared
   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,
   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it
   * gets added to the LendingPool ABI
   * @param reserve The address of the underlying asset of the reserve
   * @param liquidityRate The new liquidity rate
   * @param stableBorrowRate The new stable borrow rate
   * @param variableBorrowRate The new variable borrow rate
   * @param liquidityIndex The new liquidity index
   * @param variableBorrowIndex The new variable borrow index
   **/
  event ReserveDataUpdated(
    address indexed reserve,
    uint256 liquidityRate,
    uint256 stableBorrowRate,
    uint256 variableBorrowRate,
    uint256 liquidityIndex,
    uint256 variableBorrowIndex
  );

  /**
   * @dev Deposits an \`amount\` of underlying asset into the reserve, receiving in return overlying aTokens.
   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC
   * @param asset The address of the underlying asset to deposit
   * @param amount The amount to be deposited
   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user
   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens
   *   is a different wallet
   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.
   *   0 if the action is executed directly by the user, without any middle-man
   **/
  function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;

  /**
   * @dev Withdraws an \`amount\` of underlying asset from the reserve, burning the equivalent aTokens owned
   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC
   * @param asset The address of the underlying asset to withdraw
   * @param amount The underlying amount to be withdrawn
   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance
   * @param to Address that will receive the underlying, same as msg.sender if the user
   *   wants to receive it on his own wallet, or a different address if the beneficiary is a
   *   different wallet
   * @return The final amount withdrawn
   **/
  function withdraw(address asset, uint256 amount, address to) external returns (uint256);

  /**
   * @dev Allows users to borrow a specific \`amount\` of the reserve underlying asset, provided that the borrower
   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the
   * corresponding debt token (StableDebtToken or VariableDebtToken)
   * - E.g. User borrows 100 USDC passing as \`onBehalfOf\` his own address, receiving the 100 USDC in his wallet
   *   and 100 stable/variable debt tokens, depending on the \`interestRateMode\`
   * @param asset The address of the underlying asset to borrow
   * @param amount The amount to be borrowed
   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable
   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.
   *   0 if the action is executed directly by the user, without any middle-man
   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself
   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator
   * if he has been given credit delegation allowance
   **/
  function borrow(
    address asset,
    uint256 amount,
    uint256 interestRateMode,
    uint16 referralCode,
    address onBehalfOf
  ) external;

  /**
   * @notice Repays a borrowed \`amount\` on a specific reserve, burning the equivalent debt tokens owned
   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the \`onBehalfOf\` address
   * @param asset The address of the borrowed underlying asset previously borrowed
   * @param amount The amount to repay
   * - Send the value type(uint256).max in order to repay the whole debt for \`asset\` on the specific \`debtMode\`
   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable
   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the
   * user calling the function if he wants to reduce/remove his own debt, or the address of any other
   * other borrower whose debt should be removed
   * @return The final amount repaid
   **/
  function repay(
    address asset,
    uint256 amount,
    uint256 rateMode,
    address onBehalfOf
  ) external returns (uint256);

  /**
   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa
   * @param asset The address of the underlying asset borrowed
   * @param rateMode The rate mode that the user wants to swap to
   **/
  function swapBorrowRateMode(address asset, uint256 rateMode) external;

  /**
   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.
   * - Users can be rebalanced if the following conditions are satisfied:
   *     1. Usage ratio is above 95%
   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been
   *        borrowed at a stable rate and depositors are not earning enough
   * @param asset The address of the underlying asset borrowed
   * @param user The address of the user to be rebalanced
   **/
  function rebalanceStableBorrowRate(address asset, address user) external;

  /**
   * @dev Allows depositors to enable/disable a specific deposited asset as collateral
   * @param asset The address of the underlying asset deposited
   * @param useAsCollateral \`true\` if the user wants to use the deposit as collateral, \`false\` otherwise
   **/
  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;

  /**
   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1
   * - The caller (liquidator) covers \`debtToCover\` amount of debt of the user getting liquidated, and receives
   *   a proportionally amount of the \`collateralAsset\` plus a bonus to cover market risk
   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation
   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation
   * @param user The address of the borrower getting liquidated
   * @param debtToCover The debt amount of borrowed \`asset\` the liquidator wants to cover
   * @param receiveAToken \`true\` if the liquidators wants to receive the collateral aTokens, \`false\` if he wants
   * to receive the underlying collateral asset directly
   **/
  function liquidationCall(
    address collateralAsset,
    address debtAsset,
    address user,
    uint256 debtToCover,
    bool receiveAToken
  ) external;

  /**
   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,
   * as long as the amount taken plus a fee is returned.
   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.
   * For further details please visit https://developers.aave.com
   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface
   * @param assets The addresses of the assets being flash-borrowed
   * @param amounts The amounts amounts being flash-borrowed
   * @param modes Types of the debt to open if the flash loan is not returned:
   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver
   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the \`onBehalfOf\` address
   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the \`onBehalfOf\` address
   * @param onBehalfOf The address  that will receive the debt in the case of using on \`modes\` 1 or 2
   * @param params Variadic packed params to pass to the receiver as extra information
   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.
   *   0 if the action is executed directly by the user, without any middle-man
   **/
  function flashLoan(
    address receiverAddress,
    address[] calldata assets,
    uint256[] calldata amounts,
    uint256[] calldata modes,
    address onBehalfOf,
    bytes calldata params,
    uint16 referralCode
  ) external;

  /**
   * @dev Returns the user account data across all the reserves
   * @param user The address of the user
   * @return totalCollateralETH the total collateral in ETH of the user
   * @return totalDebtETH the total debt in ETH of the user
   * @return availableBorrowsETH the borrowing power left of the user
   * @return currentLiquidationThreshold the liquidation threshold of the user
   * @return ltv the loan to value of the user
   * @return healthFactor the current health factor of the user
   **/
  function getUserAccountData(
    address user
  )
    external
    view
    returns (
      uint256 totalCollateralETH,
      uint256 totalDebtETH,
      uint256 availableBorrowsETH,
      uint256 currentLiquidationThreshold,
      uint256 ltv,
      uint256 healthFactor
    );

  function initReserve(
    address reserve,
    address aTokenAddress,
    address stableDebtAddress,
    address variableDebtAddress,
    address interestRateStrategyAddress
  ) external;

  function setReserveInterestRateStrategyAddress(
    address reserve,
    address rateStrategyAddress
  ) external;

  function setConfiguration(address reserve, uint256 configuration) external;

  /**
   * @dev Returns the configuration of the reserve
   * @param asset The address of the underlying asset of the reserve
   * @return The configuration of the reserve
   **/
  function getConfiguration(
    address asset
  ) external view returns (DataTypes.ReserveConfigurationMap memory);

  /**
   * @dev Returns the configuration of the user across all the reserves
   * @param user The user address
   * @return The configuration of the user
   **/
  function getUserConfiguration(
    address user
  ) external view returns (DataTypes.UserConfigurationMap memory);

  /**
   * @dev Returns the normalized income normalized income of the reserve
   * @param asset The address of the underlying asset of the reserve
   * @return The reserve's normalized income
   */
  function getReserveNormalizedIncome(address asset) external view returns (uint256);

  /**
   * @dev Returns the normalized variable debt per unit of asset
   * @param asset The address of the underlying asset of the reserve
   * @return The reserve normalized variable debt
   */
  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);

  /**
   * @dev Returns the state and configuration of the reserve
   * @param asset The address of the underlying asset of the reserve
   * @return The state of the reserve
   **/
  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);

  function finalizeTransfer(
    address asset,
    address from,
    address to,
    uint256 amount,
    uint256 balanceFromAfter,
    uint256 balanceToBefore
  ) external;

  function getReservesList() external view returns (address[] memory);

  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);

  function setPause(bool val) external;

  function paused() external view returns (bool);
}

interface ILendingPoolConfigurator {
  /**
   * @dev Emitted when a reserve is initialized.
   * @param asset The address of the underlying asset of the reserve
   * @param aToken The address of the associated aToken contract
   * @param stableDebtToken The address of the associated stable rate debt token
   * @param variableDebtToken The address of the associated variable rate debt token
   * @param interestRateStrategyAddress The address of the interest rate strategy for the reserve
   **/
  event ReserveInitialized(
    address indexed asset,
    address indexed aToken,
    address stableDebtToken,
    address variableDebtToken,
    address interestRateStrategyAddress
  );

  /**
   * @dev Emitted when borrowing is enabled on a reserve
   * @param asset The address of the underlying asset of the reserve
   * @param stableRateEnabled True if stable rate borrowing is enabled, false otherwise
   **/
  event BorrowingEnabledOnReserve(address indexed asset, bool stableRateEnabled);

  /**
   * @dev Emitted when borrowing is disabled on a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  event BorrowingDisabledOnReserve(address indexed asset);

  /**
   * @dev Emitted when the collateralization risk parameters for the specified asset are updated.
   * @param asset The address of the underlying asset of the reserve
   * @param ltv The loan to value of the asset when used as collateral
   * @param liquidationThreshold The threshold at which loans using this asset as collateral will be considered undercollateralized
   * @param liquidationBonus The bonus liquidators receive to liquidate this asset
   **/
  event CollateralConfigurationChanged(
    address indexed asset,
    uint256 ltv,
    uint256 liquidationThreshold,
    uint256 liquidationBonus
  );

  /**
   * @dev Emitted when stable rate borrowing is enabled on a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  event StableRateEnabledOnReserve(address indexed asset);

  /**
   * @dev Emitted when stable rate borrowing is disabled on a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  event StableRateDisabledOnReserve(address indexed asset);

  /**
   * @dev Emitted when a reserve is activated
   * @param asset The address of the underlying asset of the reserve
   **/
  event ReserveActivated(address indexed asset);

  /**
   * @dev Emitted when a reserve is deactivated
   * @param asset The address of the underlying asset of the reserve
   **/
  event ReserveDeactivated(address indexed asset);

  /**
   * @dev Emitted when a reserve is frozen
   * @param asset The address of the underlying asset of the reserve
   **/
  event ReserveFrozen(address indexed asset);

  /**
   * @dev Emitted when a reserve is unfrozen
   * @param asset The address of the underlying asset of the reserve
   **/
  event ReserveUnfrozen(address indexed asset);

  /**
   * @dev Emitted when a reserve factor is updated
   * @param asset The address of the underlying asset of the reserve
   * @param factor The new reserve factor
   **/
  event ReserveFactorChanged(address indexed asset, uint256 factor);

  /**
   * @dev Emitted when the reserve decimals are updated
   * @param asset The address of the underlying asset of the reserve
   * @param decimals The new decimals
   **/
  event ReserveDecimalsChanged(address indexed asset, uint256 decimals);

  /**
   * @dev Emitted when a reserve interest strategy contract is updated
   * @param asset The address of the underlying asset of the reserve
   * @param strategy The new address of the interest strategy contract
   **/
  event ReserveInterestRateStrategyChanged(address indexed asset, address strategy);

  /**
   * @dev Emitted when an aToken implementation is upgraded
   * @param asset The address of the underlying asset of the reserve
   * @param proxy The aToken proxy address
   * @param implementation The new aToken implementation
   **/
  event ATokenUpgraded(
    address indexed asset,
    address indexed proxy,
    address indexed implementation
  );

  /**
   * @dev Emitted when the implementation of a stable debt token is upgraded
   * @param asset The address of the underlying asset of the reserve
   * @param proxy The stable debt token proxy address
   * @param implementation The new aToken implementation
   **/
  event StableDebtTokenUpgraded(
    address indexed asset,
    address indexed proxy,
    address indexed implementation
  );

  /**
   * @dev Emitted when the implementation of a variable debt token is upgraded
   * @param asset The address of the underlying asset of the reserve
   * @param proxy The variable debt token proxy address
   * @param implementation The new aToken implementation
   **/
  event VariableDebtTokenUpgraded(
    address indexed asset,
    address indexed proxy,
    address indexed implementation
  );

  /**
   * @dev Initializes a reserve
   * @param aTokenImpl  The address of the aToken contract implementation
   * @param stableDebtTokenImpl The address of the stable debt token contract
   * @param variableDebtTokenImpl The address of the variable debt token contract
   * @param underlyingAssetDecimals The decimals of the reserve underlying asset
   * @param interestRateStrategyAddress The address of the interest rate strategy contract for this reserve
   **/
  function initReserve(
    address aTokenImpl,
    address stableDebtTokenImpl,
    address variableDebtTokenImpl,
    uint8 underlyingAssetDecimals,
    address interestRateStrategyAddress
  ) external;

  function batchInitReserve(ConfiguratorInputTypes.InitReserveInput[] calldata input) external;

  /**
   * @dev Updates the aToken implementation for the reserve
   * @param asset The address of the underlying asset of the reserve to be updated
   * @param implementation The address of the new aToken implementation
   **/
  function updateAToken(address asset, address implementation) external;

  /**
   * @dev Updates the stable debt token implementation for the reserve
   * @param asset The address of the underlying asset of the reserve to be updated
   * @param implementation The address of the new aToken implementation
   **/
  function updateStableDebtToken(address asset, address implementation) external;

  /**
   * @dev Updates the variable debt token implementation for the asset
   * @param asset The address of the underlying asset of the reserve to be updated
   * @param implementation The address of the new aToken implementation
   **/
  function updateVariableDebtToken(address asset, address implementation) external;

  /**
   * @dev Enables borrowing on a reserve
   * @param asset The address of the underlying asset of the reserve
   * @param stableBorrowRateEnabled True if stable borrow rate needs to be enabled by default on this reserve
   **/
  function enableBorrowingOnReserve(address asset, bool stableBorrowRateEnabled) external;

  /**
   * @dev Disables borrowing on a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  function disableBorrowingOnReserve(address asset) external;

  /**
   * @dev Configures the reserve collateralization parameters
   * all the values are expressed in percentages with two decimals of precision. A valid value is 10000, which means 100.00%
   * @param asset The address of the underlying asset of the reserve
   * @param ltv The loan to value of the asset when used as collateral
   * @param liquidationThreshold The threshold at which loans using this asset as collateral will be considered undercollateralized
   * @param liquidationBonus The bonus liquidators receive to liquidate this asset. The values is always above 100%. A value of 105%
   * means the liquidator will receive a 5% bonus
   **/
  function configureReserveAsCollateral(
    address asset,
    uint256 ltv,
    uint256 liquidationThreshold,
    uint256 liquidationBonus
  ) external;

  /**
   * @dev Enable stable rate borrowing on a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  function enableReserveStableRate(address asset) external;

  /**
   * @dev Disable stable rate borrowing on a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  function disableReserveStableRate(address asset) external;

  /**
   * @dev Activates a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  function activateReserve(address asset) external;

  /**
   * @dev Deactivates a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  function deactivateReserve(address asset) external;

  /**
   * @dev Freezes a reserve. A frozen reserve doesn't allow any new deposit, borrow or rate swap
   *  but allows repayments, liquidations, rate rebalances and withdrawals
   * @param asset The address of the underlying asset of the reserve
   **/
  function freezeReserve(address asset) external;

  /**
   * @dev Unfreezes a reserve
   * @param asset The address of the underlying asset of the reserve
   **/
  function unfreezeReserve(address asset) external;

  /**
   * @dev Updates the reserve factor of a reserve
   * @param asset The address of the underlying asset of the reserve
   * @param reserveFactor The new reserve factor of the reserve
   **/
  function setReserveFactor(address asset, uint256 reserveFactor) external;

  /**
   * @dev Sets the interest rate strategy of a reserve
   * @param asset The address of the underlying asset of the reserve
   * @param rateStrategyAddress The new address of the interest strategy contract
   **/
  function setReserveInterestRateStrategyAddress(
    address asset,
    address rateStrategyAddress
  ) external;

  /**
   * @dev pauses or unpauses all the actions of the protocol, including aToken transfers
   * @param val true if protocol needs to be paused, false otherwise
   **/
  function setPoolPause(bool val) external;
}

interface IAaveOracle {
  event WethSet(address indexed weth);
  event AssetSourceUpdated(address indexed asset, address indexed source);
  event FallbackOracleUpdated(address indexed fallbackOracle);

  /// @notice Returns the WETH address (reference asset of the oracle)
  function WETH() external returns (address);

  /// @notice External function called by the Aave governance to set or replace sources of assets
  /// @param assets The addresses of the assets
  /// @param sources The address of the source of each asset
  function setAssetSources(address[] calldata assets, address[] calldata sources) external;

  /// @notice Sets the fallbackOracle
  /// - Callable only by the Aave governance
  /// @param fallbackOracle The address of the fallbackOracle
  function setFallbackOracle(address fallbackOracle) external;

  /// @notice Gets an asset price by address
  /// @param asset The asset address
  function getAssetPrice(address asset) external view returns (uint256);

  /// @notice Gets a list of prices from a list of assets addresses
  /// @param assets The list of assets addresses
  function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory);

  /// @notice Gets the address of the source for an asset address
  /// @param asset The address of the asset
  /// @return address The address of the source
  function getSourceOfAsset(address asset) external view returns (address);

  /// @notice Gets the address of the fallback oracle
  /// @return address The addres of the fallback oracle
  function getFallbackOracle() external view returns (address);
}

struct TokenData {
  string symbol;
  address tokenAddress;
}

// TODO: incomplete interface
interface IAaveProtocolDataProvider {
  function getReserveConfigurationData(
    address asset
  )
    external
    view
    returns (
      uint256 decimals,
      uint256 ltv,
      uint256 liquidationThreshold,
      uint256 liquidationBonus,
      uint256 reserveFactor,
      bool usageAsCollateralEnabled,
      bool borrowingEnabled,
      bool stableBorrowRateEnabled,
      bool isActive,
      bool isFrozen
    );

  function getAllReservesTokens() external view returns (TokenData[] memory);

  function getReserveTokensAddresses(
    address asset
  )
    external
    view
    returns (
      address aTokenAddress,
      address stableDebtTokenAddress,
      address variableDebtTokenAddress
    );

  function getUserReserveData(
    address asset,
    address user
  )
    external
    view
    returns (
      uint256 currentATokenBalance,
      uint256 currentStableDebt,
      uint256 currentVariableDebt,
      uint256 principalStableDebt,
      uint256 scaledVariableDebt,
      uint256 stableBorrowRate,
      uint256 liquidityRate,
      uint40 stableRateLastUpdated,
      bool usageAsCollateralEnabled
    );
}

interface ILendingRateOracle {
  /**
    @dev returns the market borrow rate in ray
    **/
  function getMarketBorrowRate(address asset) external view returns (uint256);

  /**
    @dev sets the market borrow rate. Rate value must be in ray
    **/
  function setMarketBorrowRate(address asset, uint256 rate) external;
}

interface IDefaultInterestRateStrategy {
  function EXCESS_UTILIZATION_RATE() external view returns (uint256);

  function OPTIMAL_UTILIZATION_RATE() external view returns (uint256);

  function addressesProvider() external view returns (address);

  function baseVariableBorrowRate() external view returns (uint256);

  function calculateInterestRates(
    address reserve,
    uint256 availableLiquidity,
    uint256 totalStableDebt,
    uint256 totalVariableDebt,
    uint256 averageStableBorrowRate,
    uint256 reserveFactor
  ) external view returns (uint256, uint256, uint256);

  function getMaxVariableBorrowRate() external view returns (uint256);

  function stableRateSlope1() external view returns (uint256);

  function stableRateSlope2() external view returns (uint256);

  function variableRateSlope1() external view returns (uint256);

  function variableRateSlope2() external view returns (uint256);
}
",
          },
          {
            "id": 10,
            "name": "ERC1967Proxy.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/transparent-proxy/ERC1967Proxy.sol",
            "source": "// SPDX-License-Identifier: MIT

/** @dev OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)
 * From https://github.com/OpenZeppelin/openzeppelin-contracts/tree/8b778fa20d6d76340c5fac1ed66c80273f05b95a
 *
 * BGD Labs adaptations:
 * - Same exact version as OZ, only linting changes
 */

pragma solidity ^0.8.0;

import './Proxy.sol';
import './ERC1967Upgrade.sol';

/**
 * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an
 * implementation address that can be changed. This address is stored in storage in the location specified by
 * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the
 * implementation behind the proxy.
 */
contract ERC1967Proxy is Proxy, ERC1967Upgrade {
  /**
   * @dev Initializes the upgradeable proxy with an initial implementation specified by \`_logic\`.
   *
   * If \`_data\` is nonempty, it's used as data in a delegate call to \`_logic\`. This will typically be an encoded
   * function call, and allows initializing the storage of the proxy like a Solidity constructor.
   */
  constructor(address _logic, bytes memory _data) payable {
    _upgradeToAndCall(_logic, _data, false);
  }

  /**
   * @dev Returns the current implementation address.
   */
  function _implementation() internal view virtual override returns (address impl) {
    return ERC1967Upgrade._getImplementation();
  }
}
",
          },
          {
            "id": 17,
            "name": "StakedAaveV3.sol",
            "path": "src/contracts/StakedAaveV3.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {IERC20} from '../interfaces/IERC20.sol';
import {DistributionTypes} from '../lib/DistributionTypes.sol';
import {GovernancePowerDelegationERC20} from '../lib/GovernancePowerDelegationERC20.sol';
import {StakedTokenV3} from './StakedTokenV3.sol';
import {IGhoVariableDebtTokenTransferHook} from '../interfaces/IGhoVariableDebtTokenTransferHook.sol';
import {SafeCast} from '../lib/SafeCast.sol';
import {IStakedAaveV3} from '../interfaces/IStakedAaveV3.sol';
import {IERC20WithPermit} from '../interfaces/IERC20WithPermit.sol';

/**
 * @title StakedAaveV3
 * @notice StakedTokenV3 with AAVE token as staked token
 * @author BGD Labs
 */
contract StakedAaveV3 is StakedTokenV3, IStakedAaveV3 {
  using SafeCast for uint256;

  uint32 internal _exchangeRateSnapshotsCount;
  /// @notice Snapshots of the exchangeRate for a given block
  mapping(uint256 => ExchangeRateSnapshot) internal _exchangeRateSnapshots;

  /// @notice GHO debt token to be used in the _beforeTokenTransfer hook
  IGhoVariableDebtTokenTransferHook public ghoDebtToken;

  function REVISION() public pure virtual override returns (uint256) {
    return 5;
  }

  constructor(
    IERC20 stakedToken,
    IERC20 rewardToken,
    uint256 unstakeWindow,
    address rewardsVault,
    address emissionManager,
    uint128 distributionDuration
  )
    StakedTokenV3(
      stakedToken,
      rewardToken,
      unstakeWindow,
      rewardsVault,
      emissionManager,
      distributionDuration
    )
  {
    // brick initialize
    lastInitializedRevision = REVISION();
  }

  /**
   * @dev Called by the proxy contract
   */
  function initialize(
    address slashingAdmin,
    address cooldownPauseAdmin,
    address claimHelper,
    uint256 maxSlashablePercentage,
    uint256 cooldownSeconds
  ) external override initializer {
    _initialize(
      slashingAdmin,
      cooldownPauseAdmin,
      claimHelper,
      maxSlashablePercentage,
      cooldownSeconds
    );

    // needed to claimRewardsAndStake works without a custom approval each time
    STAKED_TOKEN.approve(address(this), type(uint256).max);
  }

  /// @inheritdoc IStakedAaveV3
  function setGHODebtToken(IGhoVariableDebtTokenTransferHook newGHODebtToken)
    external
  {
    require(msg.sender == 0xEE56e2B3D491590B5b31738cC34d5232F378a8D5); // Short executor
    ghoDebtToken = newGHODebtToken;
    emit GHODebtTokenChanged(address(newGHODebtToken));
  }

  /// @inheritdoc IStakedAaveV3
  function claimRewardsAndStake(address to, uint256 amount)
    external
    override
    returns (uint256)
  {
    return _claimRewardsAndStakeOnBehalf(msg.sender, to, amount);
  }

  /// @inheritdoc IStakedAaveV3
  function claimRewardsAndStakeOnBehalf(
    address from,
    address to,
    uint256 amount
  ) external override onlyClaimHelper returns (uint256) {
    return _claimRewardsAndStakeOnBehalf(from, to, amount);
  }

  /// @inheritdoc IStakedAaveV3
  function stakeWithPermit(
    address from,
    uint256 amount,
    uint256 deadline,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external override {
    IERC20WithPermit(address(STAKED_TOKEN)).permit(
      from,
      address(this),
      amount,
      deadline,
      v,
      r,
      s
    );
    _stake(from, from, amount);
  }

  /// @inheritdoc IStakedAaveV3
  function getExchangeRateSnapshotsCount() external view returns (uint32) {
    return _exchangeRateSnapshotsCount;
  }

  /// @inheritdoc IStakedAaveV3
  function getExchangeRateSnapshot(uint32 index)
    external
    view
    returns (ExchangeRateSnapshot memory)
  {
    return _exchangeRateSnapshots[index];
  }

  /**
   * @dev Writes a snapshot before any operation involving transfer of value: _transfer, _mint and _burn
   * - On _transfer, it writes snapshots for both \\"from\\" and \\"to\\"
   * - On _mint, only for _to
   * - On _burn, only for _from
   * @param from the from address
   * @param to the to address
   * @param amount the amount to transfer
   */
  function _beforeTokenTransfer(
    address from,
    address to,
    uint256 amount
  ) internal override {
    IGhoVariableDebtTokenTransferHook cachedGhoDebtToken = ghoDebtToken;
    if (address(cachedGhoDebtToken) != address(0)) {
      try
        cachedGhoDebtToken.updateDiscountDistribution(
          from,
          to,
          balanceOf(from),
          balanceOf(to),
          amount
        )
      {} catch (bytes memory) {}
    }
    address votingFromDelegatee = _votingDelegates[from];
    address votingToDelegatee = _votingDelegates[to];

    if (votingFromDelegatee == address(0)) {
      votingFromDelegatee = from;
    }
    if (votingToDelegatee == address(0)) {
      votingToDelegatee = to;
    }

    _moveDelegatesByType(
      votingFromDelegatee,
      votingToDelegatee,
      amount,
      DelegationType.VOTING_POWER
    );

    address propPowerFromDelegatee = _propositionPowerDelegates[from];
    address propPowerToDelegatee = _propositionPowerDelegates[to];

    if (propPowerFromDelegatee == address(0)) {
      propPowerFromDelegatee = from;
    }
    if (propPowerToDelegatee == address(0)) {
      propPowerToDelegatee = to;
    }

    _moveDelegatesByType(
      propPowerFromDelegatee,
      propPowerToDelegatee,
      amount,
      DelegationType.PROPOSITION_POWER
    );
  }

  /// @dev Modified version accounting for exchange rate at block
  /// @inheritdoc GovernancePowerDelegationERC20
  function _searchByBlockNumber(
    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
    mapping(address => uint256) storage snapshotsCounts,
    address user,
    uint256 blockNumber
  ) internal view override returns (uint256) {
    return
      (super._searchByBlockNumber(
        snapshots,
        snapshotsCounts,
        user,
        blockNumber
      ) * EXCHANGE_RATE_UNIT) /
      _binarySearchExchangeRate(
        _exchangeRateSnapshots,
        _exchangeRateSnapshotsCount,
        blockNumber
      );
  }

  /**
   * @dev Updates the exchangeRate and emits events accordingly
   * @param newExchangeRate the new exchange rate
   */
  function _updateExchangeRate(uint216 newExchangeRate) internal override {
    _exchangeRateSnapshots[_exchangeRateSnapshotsCount] = ExchangeRateSnapshot(
      block.number.toUint40(),
      newExchangeRate
    );
    ++_exchangeRateSnapshotsCount;
    super._updateExchangeRate(newExchangeRate);
  }

  function _binarySearchExchangeRate(
    mapping(uint256 => ExchangeRateSnapshot) storage snapshots,
    uint256 snapshotsCount,
    uint256 blockNumber
  ) internal view returns (uint256) {
    unchecked {
      // First check most recent balance
      if (snapshots[snapshotsCount - 1].blockNumber <= blockNumber) {
        return snapshots[snapshotsCount - 1].value;
      }

      uint256 lower = 0;
      uint256 upper = snapshotsCount - 1;
      while (upper > lower) {
        uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow
        ExchangeRateSnapshot memory snapshot = snapshots[center];
        if (snapshot.blockNumber == blockNumber) {
          return snapshot.value;
        } else if (snapshot.blockNumber < blockNumber) {
          lower = center;
        } else {
          upper = center - 1;
        }
      }
      return snapshots[lower].value;
    }
  }
}
",
          },
          {
            "id": 22,
            "name": "IERC20Metadata.sol",
            "path": "src/interfaces/IERC20Metadata.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)

pragma solidity ^0.8.0;

import './IERC20.sol';

/**
 * @dev Interface for the optional metadata functions from the ERC20 standard.
 *
 * _Available since v4.1._
 */
interface IERC20Metadata is IERC20 {
  /**
   * @dev Returns the name of the token.
   */
  function name() external view returns (string memory);

  /**
   * @dev Returns the symbol of the token.
   */
  function symbol() external view returns (string memory);

  /**
   * @dev Returns the decimals places of the token.
   */
  function decimals() external view returns (uint8);
}
",
          },
          {
            "id": 7,
            "name": "Context.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/Context.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)
// From commit https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8b778fa20d6d76340c5fac1ed66c80273f05b95a

pragma solidity ^0.8.0;

/**
 * @dev Provides information about the current execution context, including the
 * sender of the transaction and its data. While these are generally available
 * via msg.sender and msg.data, they should not be accessed in such a direct
 * manner, since when dealing with meta-transactions the account sending and
 * paying for execution may not be the actual sender (as far as an application
 * is concerned).
 *
 * This contract is only required for intermediate, library-like contracts.
 */
abstract contract Context {
  function _msgSender() internal view virtual returns (address) {
    return msg.sender;
  }

  function _msgData() internal view virtual returns (bytes calldata) {
    return msg.data;
  }
}
",
          },
          {
            "id": 8,
            "name": "Ownable.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/Ownable.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)
// From commit https://github.com/OpenZeppelin/openzeppelin-contracts/commit/8b778fa20d6d76340c5fac1ed66c80273f05b95a

pragma solidity ^0.8.0;

import './Context.sol';

/**
 * @dev Contract module which provides a basic access control mechanism, where
 * there is an account (an owner) that can be granted exclusive access to
 * specific functions.
 *
 * By default, the owner account will be the one that deploys the contract. This
 * can later be changed with {transferOwnership}.
 *
 * This module is used through inheritance. It will make available the modifier
 * \`onlyOwner\`, which can be applied to your functions to restrict their use to
 * the owner.
 */
abstract contract Ownable is Context {
  address private _owner;

  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

  /**
   * @dev Initializes the contract setting the deployer as the initial owner.
   */
  constructor() {
    _transferOwnership(_msgSender());
  }

  /**
   * @dev Throws if called by any account other than the owner.
   */
  modifier onlyOwner() {
    _checkOwner();
    _;
  }

  /**
   * @dev Returns the address of the current owner.
   */
  function owner() public view virtual returns (address) {
    return _owner;
  }

  /**
   * @dev Throws if the sender is not the owner.
   */
  function _checkOwner() internal view virtual {
    require(owner() == _msgSender(), 'Ownable: caller is not the owner');
  }

  /**
   * @dev Leaves the contract without owner. It will not be possible to call
   * \`onlyOwner\` functions anymore. Can only be called by the current owner.
   *
   * NOTE: Renouncing ownership will leave the contract without an owner,
   * thereby removing any functionality that is only available to the owner.
   */
  function renounceOwnership() public virtual onlyOwner {
    _transferOwnership(address(0));
  }

  /**
   * @dev Transfers ownership of the contract to a new account (\`newOwner\`).
   * Can only be called by the current owner.
   */
  function transferOwnership(address newOwner) public virtual onlyOwner {
    require(newOwner != address(0), 'Ownable: new owner is the zero address');
    _transferOwnership(newOwner);
  }

  /**
   * @dev Transfers ownership of the contract to a new account (\`newOwner\`).
   * Internal function without access restriction.
   */
  function _transferOwnership(address newOwner) internal virtual {
    address oldOwner = _owner;
    _owner = newOwner;
    emit OwnershipTransferred(oldOwner, newOwner);
  }
}
",
          },
          {
            "id": 14,
            "name": "TransparentUpgradeableProxy.sol",
            "path": "lib/aave-helpers/lib/solidity-utils/src/contracts/transparent-proxy/TransparentUpgradeableProxy.sol",
            "source": "// SPDX-License-Identifier: MIT

/**
 * @dev OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)
 * From https://github.com/OpenZeppelin/openzeppelin-contracts/tree/8b778fa20d6d76340c5fac1ed66c80273f05b95a
 *
 * BGD Labs adaptations:
 * - Linting
 */

pragma solidity ^0.8.0;

import './ERC1967Proxy.sol';

/**
 * @dev This contract implements a proxy that is upgradeable by an admin.
 *
 * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector
 * clashing], which can potentially be used in an attack, this contract uses the
 * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two
 * things that go hand in hand:
 *
 * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if
 * that call matches one of the admin functions exposed by the proxy itself.
 * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the
 * implementation. If the admin tries to call a function on the implementation it will fail with an error that says
 * \\"admin cannot fallback to proxy target\\".
 *
 * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing
 * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due
 * to sudden errors when trying to call a function from the proxy implementation.
 *
 * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,
 * you should think of the \`ProxyAdmin\` instance as the real administrative interface of your proxy.
 */
contract TransparentUpgradeableProxy is ERC1967Proxy {
  /**
   * @dev Initializes an upgradeable proxy managed by \`_admin\`, backed by the implementation at \`_logic\`, and
   * optionally initialized with \`_data\` as explained in {ERC1967Proxy-constructor}.
   */
  constructor(
    address _logic,
    address admin_,
    bytes memory _data
  ) payable ERC1967Proxy(_logic, _data) {
    _changeAdmin(admin_);
  }

  /**
   * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.
   */
  modifier ifAdmin() {
    if (msg.sender == _getAdmin()) {
      _;
    } else {
      _fallback();
    }
  }

  /**
   * @dev Returns the current admin.
   *
   * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.
   *
   * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the
   * https://eth.wiki/json-rpc/API#eth_getstorageat[\`eth_getStorageAt\`] RPC call.
   * \`0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\`
   */
  function admin() external ifAdmin returns (address admin_) {
    admin_ = _getAdmin();
  }

  /**
   * @dev Returns the current implementation.
   *
   * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.
   *
   * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the
   * https://eth.wiki/json-rpc/API#eth_getstorageat[\`eth_getStorageAt\`] RPC call.
   * \`0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\`
   */
  function implementation() external ifAdmin returns (address implementation_) {
    implementation_ = _implementation();
  }

  /**
   * @dev Changes the admin of the proxy.
   *
   * Emits an {AdminChanged} event.
   *
   * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.
   */
  function changeAdmin(address newAdmin) external virtual ifAdmin {
    _changeAdmin(newAdmin);
  }

  /**
   * @dev Upgrade the implementation of the proxy.
   *
   * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.
   */
  function upgradeTo(address newImplementation) external ifAdmin {
    _upgradeToAndCall(newImplementation, bytes(''), false);
  }

  /**
   * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified
   * by \`data\`, which should be an encoded function call. This is useful to initialize new storage variables in the
   * proxied contract.
   *
   * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.
   */
  function upgradeToAndCall(
    address newImplementation,
    bytes calldata data
  ) external payable ifAdmin {
    _upgradeToAndCall(newImplementation, data, true);
  }

  /**
   * @dev Returns the current admin.
   */
  function _admin() internal view virtual returns (address) {
    return _getAdmin();
  }

  /**
   * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.
   */
  function _beforeFallback() internal virtual override {
    require(
      msg.sender != _getAdmin(),
      'TransparentUpgradeableProxy: admin cannot fallback to proxy target'
    );
    super._beforeFallback();
  }
}
",
          },
          {
            "id": 24,
            "name": "IGhoVariableDebtTokenTransferHook.sol",
            "path": "src/interfaces/IGhoVariableDebtTokenTransferHook.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

interface IGhoVariableDebtTokenTransferHook {
  /**
   * @dev updates the discount when discount token is transferred
   * @dev Only callable by discount token
   * @param sender address of sender
   * @param recipient address of recipient
   * @param senderDiscountTokenBalance sender discount token balance
   * @param recipientDiscountTokenBalance recipient discount token balance
   * @param amount amount of discount token being transferred
   **/
  function updateDiscountDistribution(
    address sender,
    address recipient,
    uint256 senderDiscountTokenBalance,
    uint256 recipientDiscountTokenBalance,
    uint256 amount
  ) external;
}
",
          },
          {
            "id": 30,
            "name": "ITransferHook.sol",
            "path": "src/interfaces/ITransferHook.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

interface ITransferHook {
  function onTransfer(
    address from,
    address to,
    uint256 amount
  ) external;
}
",
          },
          {
            "id": 35,
            "name": "GovernancePowerDelegationERC20.sol",
            "path": "src/lib/GovernancePowerDelegationERC20.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {ERC20} from './ERC20.sol';
import {
  IGovernancePowerDelegationToken
} from '../interfaces/IGovernancePowerDelegationToken.sol';

/**
 * @notice implementation of the AAVE token contract
 * @author Aave
 */
abstract contract GovernancePowerDelegationERC20 is ERC20, IGovernancePowerDelegationToken {
  /// @notice The EIP-712 typehash for the delegation struct used by the contract
  bytes32 public constant DELEGATE_BY_TYPE_TYPEHASH = keccak256(
    'DelegateByType(address delegatee,uint256 type,uint256 nonce,uint256 expiry)'
  );

  bytes32 public constant DELEGATE_TYPEHASH = keccak256(
    'Delegate(address delegatee,uint256 nonce,uint256 expiry)'
  );

  /// @dev snapshot of a value on a specific block, used for votes
  struct Snapshot {
    uint128 blockNumber;
    uint128 value;
  }

  /**
   * @dev delegates one specific power to a delegatee
   * @param delegatee the user which delegated power has changed
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  function delegateByType(address delegatee, DelegationType delegationType) external override {
    _delegateByType(msg.sender, delegatee, delegationType);
  }

  /**
   * @dev delegates all the powers to a specific user
   * @param delegatee the user to which the power will be delegated
   **/
  function delegate(address delegatee) external override {
    _delegateByType(msg.sender, delegatee, DelegationType.VOTING_POWER);
    _delegateByType(msg.sender, delegatee, DelegationType.PROPOSITION_POWER);
  }

  /**
   * @dev returns the delegatee of an user
   * @param delegator the address of the delegator
   **/
  function getDelegateeByType(address delegator, DelegationType delegationType)
    external
    override
    view
    returns (address)
  {
    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);

    return _getDelegatee(delegator, delegates);
  }

  /**
   * @dev returns the current delegated power of a user. The current power is the
   * power delegated at the time of the last snapshot
   * @param user the user
   **/
  function getPowerCurrent(address user, DelegationType delegationType)
    external
    override
    view
    returns (uint256)
  {
    (
      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
      mapping(address => uint256) storage snapshotsCounts,

    ) = _getDelegationDataByType(delegationType);

    return _searchByBlockNumber(snapshots, snapshotsCounts, user, block.number);
  }

  /**
   * @dev returns the delegated power of a user at a certain block
   * @param user the user
   **/
  function getPowerAtBlock(
    address user,
    uint256 blockNumber,
    DelegationType delegationType
  ) external override view returns (uint256) {
    (
      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
      mapping(address => uint256) storage snapshotsCounts,

    ) = _getDelegationDataByType(delegationType);

    return _searchByBlockNumber(snapshots, snapshotsCounts, user, blockNumber);
  }

  /**
   * @dev returns the total supply at a certain block number
   * used by the voting strategy contracts to calculate the total votes needed for threshold/quorum
   * In this initial implementation with no AAVE minting, simply returns the current supply
   * A snapshots mapping will need to be added in case a mint function is added to the AAVE token in the future
   **/
  function totalSupplyAt(uint256) external override view returns (uint256) {
    return super.totalSupply();
  }

  /**
   * @dev delegates the specific power to a delegatee
   * @param delegatee the user which delegated power has changed
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  function _delegateByType(
    address delegator,
    address delegatee,
    DelegationType delegationType
  ) internal {
    require(delegatee != address(0), 'INVALID_DELEGATEE');

    (, , mapping(address => address) storage delegates) = _getDelegationDataByType(delegationType);

    uint256 delegatorBalance = balanceOf(delegator);

    address previousDelegatee = _getDelegatee(delegator, delegates);

    delegates[delegator] = delegatee;

    _moveDelegatesByType(previousDelegatee, delegatee, delegatorBalance, delegationType);
    emit DelegateChanged(delegator, delegatee, delegationType);
  }

  /**
   * @dev moves delegated power from one user to another
   * @param from the user from which delegated power is moved
   * @param to the user that will receive the delegated power
   * @param amount the amount of delegated power to be moved
   * @param delegationType the type of delegation (VOTING_POWER, PROPOSITION_POWER)
   **/
  function _moveDelegatesByType(
    address from,
    address to,
    uint256 amount,
    DelegationType delegationType
  ) internal {
    if (from == to) {
      return;
    }

    (
      mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
      mapping(address => uint256) storage snapshotsCounts,

    ) = _getDelegationDataByType(delegationType);

    if (from != address(0)) {
      uint256 previous = 0;
      uint256 fromSnapshotsCount = snapshotsCounts[from];

      if (fromSnapshotsCount != 0) {
        previous = snapshots[from][fromSnapshotsCount - 1].value;
      } else {
        previous = balanceOf(from);
      }

      _writeSnapshot(
        snapshots,
        snapshotsCounts,
        from,
        uint128(previous),
        uint128(previous - amount)
      );

      emit DelegatedPowerChanged(from, previous - amount, delegationType);
    }
    if (to != address(0)) {
      uint256 previous = 0;
      uint256 toSnapshotsCount = snapshotsCounts[to];
      if (toSnapshotsCount != 0) {
        previous = snapshots[to][toSnapshotsCount - 1].value;
      } else {
        previous = balanceOf(to);
      }

      _writeSnapshot(
        snapshots,
        snapshotsCounts,
        to,
        uint128(previous),
        uint128(previous + amount)
      );

      emit DelegatedPowerChanged(to, previous + amount, delegationType);
    }
  }

  /**
   * @dev searches a snapshot by block number. Uses binary search.
   * @param snapshots the snapshots mapping
   * @param snapshotsCounts the number of snapshots
   * @param user the user for which the snapshot is being searched
   * @param blockNumber the block number being searched
   **/
  function _searchByBlockNumber(
    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
    mapping(address => uint256) storage snapshotsCounts,
    address user,
    uint256 blockNumber
  ) internal virtual view returns (uint256) {
    require(blockNumber <= block.number, 'INVALID_BLOCK_NUMBER');

    uint256 snapshotsCount = snapshotsCounts[user];

    if (snapshotsCount == 0) {
      return balanceOf(user);
    }

    // Check implicit zero balance
    if (snapshots[user][0].blockNumber > blockNumber) {
      return 0;
    }

    return _binarySearch(snapshots[user], snapshotsCount, blockNumber);
  }

  function _binarySearch(mapping(uint256 => Snapshot) storage snapshots, uint256 snapshotsCount, uint256 blockNumber) internal view returns (uint256) {
    unchecked {
      // First check most recent balance
      if (snapshots[snapshotsCount - 1].blockNumber <= blockNumber) {
        return snapshots[snapshotsCount - 1].value;
      }

      uint256 lower = 0;
      uint256 upper = snapshotsCount - 1;
      while (upper > lower) {
        uint256 center = upper - (upper - lower) / 2; // ceil, avoiding overflow
        Snapshot memory snapshot = snapshots[center];
        if (snapshot.blockNumber == blockNumber) {
          return snapshot.value;
        } else if (snapshot.blockNumber < blockNumber) {
          lower = center;
        } else {
          upper = center - 1;
        }
      }
      return snapshots[lower].value;
    }
  }

  /**
   * @dev returns the delegation data (snapshot, snapshotsCount, list of delegates) by delegation type
   * NOTE: Ideal implementation would have mapped this in a struct by delegation type. Unfortunately,
   * the AAVE token and StakeToken already include a mapping for the snapshots, so we require contracts
   * who inherit from this to provide access to the delegation data by overriding this method.
   * @param delegationType the type of delegation
   **/
  function _getDelegationDataByType(DelegationType delegationType)
    internal
    virtual
    view
    returns (
      mapping(address => mapping(uint256 => Snapshot)) storage, //snapshots
      mapping(address => uint256) storage, //snapshots count
      mapping(address => address) storage //delegatees list
    );

  /**
   * @dev Writes a snapshot for an owner of tokens
   * @param owner The owner of the tokens
   * @param oldValue The value before the operation that is gonna be executed after the snapshot
   * @param newValue The value after the operation
   */
  function _writeSnapshot(
    mapping(address => mapping(uint256 => Snapshot)) storage snapshots,
    mapping(address => uint256) storage snapshotsCounts,
    address owner,
    uint128 oldValue,
    uint128 newValue
  ) internal {
    uint128 currentBlock = uint128(block.number);

    uint256 ownerSnapshotsCount = snapshotsCounts[owner];
    mapping(uint256 => Snapshot) storage snapshotsOwner = snapshots[owner];

    // Doing multiple operations in the same block
    if (
      ownerSnapshotsCount != 0 &&
      snapshotsOwner[ownerSnapshotsCount - 1].blockNumber == currentBlock
    ) {
      snapshotsOwner[ownerSnapshotsCount - 1].value = newValue;
    } else {
      snapshotsOwner[ownerSnapshotsCount] = Snapshot(currentBlock, newValue);
      snapshotsCounts[owner] = ownerSnapshotsCount + 1;
    }
  }

  /**
   * @dev returns the user delegatee. If a user never performed any delegation,
   * his delegated address will be 0x0. In that case we simply return the user itself
   * @param delegator the address of the user for which return the delegatee
   * @param delegates the array of delegates for a particular type of delegation
   **/
  function _getDelegatee(address delegator, mapping(address => address) storage delegates)
    internal
    view
    returns (address)
  {
    address previousDelegatee = delegates[delegator];

    if (previousDelegatee == address(0)) {
      return delegator;
    }

    return previousDelegatee;
  }
}
",
          },
          {
            "id": 38,
            "name": "SafeCast.sol",
            "path": "src/lib/SafeCast.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)
// This file was procedurally generated from scripts/generate/templates/SafeCast.js.

pragma solidity ^0.8.0;

/**
 * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow
 * checks.
 *
 * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can
 * easily result in undesired exploitation or bugs, since developers usually
 * assume that overflows raise errors. \`SafeCast\` restores this intuition by
 * reverting the transaction when such an operation overflows.
 *
 * Using this library instead of the unchecked operations eliminates an entire
 * class of bugs, so it's recommended to use it always.
 *
 * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing
 * all math on \`uint256\` and \`int256\` and then downcasting.
 */
library SafeCast {
    /**
     * @dev Returns the downcasted uint248 from uint256, reverting on
     * overflow (when the input is greater than largest uint248).
     *
     * Counterpart to Solidity's \`uint248\` operator.
     *
     * Requirements:
     *
     * - input must fit into 248 bits
     *
     * _Available since v4.7._
     */
    function toUint248(uint256 value) internal pure returns (uint248) {
        require(value <= type(uint248).max, \\"SafeCast: value doesn't fit in 248 bits\\");
        return uint248(value);
    }

    /**
     * @dev Returns the downcasted uint240 from uint256, reverting on
     * overflow (when the input is greater than largest uint240).
     *
     * Counterpart to Solidity's \`uint240\` operator.
     *
     * Requirements:
     *
     * - input must fit into 240 bits
     *
     * _Available since v4.7._
     */
    function toUint240(uint256 value) internal pure returns (uint240) {
        require(value <= type(uint240).max, \\"SafeCast: value doesn't fit in 240 bits\\");
        return uint240(value);
    }

    /**
     * @dev Returns the downcasted uint232 from uint256, reverting on
     * overflow (when the input is greater than largest uint232).
     *
     * Counterpart to Solidity's \`uint232\` operator.
     *
     * Requirements:
     *
     * - input must fit into 232 bits
     *
     * _Available since v4.7._
     */
    function toUint232(uint256 value) internal pure returns (uint232) {
        require(value <= type(uint232).max, \\"SafeCast: value doesn't fit in 232 bits\\");
        return uint232(value);
    }

    /**
     * @dev Returns the downcasted uint224 from uint256, reverting on
     * overflow (when the input is greater than largest uint224).
     *
     * Counterpart to Solidity's \`uint224\` operator.
     *
     * Requirements:
     *
     * - input must fit into 224 bits
     *
     * _Available since v4.2._
     */
    function toUint224(uint256 value) internal pure returns (uint224) {
        require(value <= type(uint224).max, \\"SafeCast: value doesn't fit in 224 bits\\");
        return uint224(value);
    }

    /**
     * @dev Returns the downcasted uint216 from uint256, reverting on
     * overflow (when the input is greater than largest uint216).
     *
     * Counterpart to Solidity's \`uint216\` operator.
     *
     * Requirements:
     *
     * - input must fit into 216 bits
     *
     * _Available since v4.7._
     */
    function toUint216(uint256 value) internal pure returns (uint216) {
        require(value <= type(uint216).max, \\"SafeCast: value doesn't fit in 216 bits\\");
        return uint216(value);
    }

    /**
     * @dev Returns the downcasted uint208 from uint256, reverting on
     * overflow (when the input is greater than largest uint208).
     *
     * Counterpart to Solidity's \`uint208\` operator.
     *
     * Requirements:
     *
     * - input must fit into 208 bits
     *
     * _Available since v4.7._
     */
    function toUint208(uint256 value) internal pure returns (uint208) {
        require(value <= type(uint208).max, \\"SafeCast: value doesn't fit in 208 bits\\");
        return uint208(value);
    }

    /**
     * @dev Returns the downcasted uint200 from uint256, reverting on
     * overflow (when the input is greater than largest uint200).
     *
     * Counterpart to Solidity's \`uint200\` operator.
     *
     * Requirements:
     *
     * - input must fit into 200 bits
     *
     * _Available since v4.7._
     */
    function toUint200(uint256 value) internal pure returns (uint200) {
        require(value <= type(uint200).max, \\"SafeCast: value doesn't fit in 200 bits\\");
        return uint200(value);
    }

    /**
     * @dev Returns the downcasted uint192 from uint256, reverting on
     * overflow (when the input is greater than largest uint192).
     *
     * Counterpart to Solidity's \`uint192\` operator.
     *
     * Requirements:
     *
     * - input must fit into 192 bits
     *
     * _Available since v4.7._
     */
    function toUint192(uint256 value) internal pure returns (uint192) {
        require(value <= type(uint192).max, \\"SafeCast: value doesn't fit in 192 bits\\");
        return uint192(value);
    }

    /**
     * @dev Returns the downcasted uint184 from uint256, reverting on
     * overflow (when the input is greater than largest uint184).
     *
     * Counterpart to Solidity's \`uint184\` operator.
     *
     * Requirements:
     *
     * - input must fit into 184 bits
     *
     * _Available since v4.7._
     */
    function toUint184(uint256 value) internal pure returns (uint184) {
        require(value <= type(uint184).max, \\"SafeCast: value doesn't fit in 184 bits\\");
        return uint184(value);
    }

    /**
     * @dev Returns the downcasted uint176 from uint256, reverting on
     * overflow (when the input is greater than largest uint176).
     *
     * Counterpart to Solidity's \`uint176\` operator.
     *
     * Requirements:
     *
     * - input must fit into 176 bits
     *
     * _Available since v4.7._
     */
    function toUint176(uint256 value) internal pure returns (uint176) {
        require(value <= type(uint176).max, \\"SafeCast: value doesn't fit in 176 bits\\");
        return uint176(value);
    }

    /**
     * @dev Returns the downcasted uint168 from uint256, reverting on
     * overflow (when the input is greater than largest uint168).
     *
     * Counterpart to Solidity's \`uint168\` operator.
     *
     * Requirements:
     *
     * - input must fit into 168 bits
     *
     * _Available since v4.7._
     */
    function toUint168(uint256 value) internal pure returns (uint168) {
        require(value <= type(uint168).max, \\"SafeCast: value doesn't fit in 168 bits\\");
        return uint168(value);
    }

    /**
     * @dev Returns the downcasted uint160 from uint256, reverting on
     * overflow (when the input is greater than largest uint160).
     *
     * Counterpart to Solidity's \`uint160\` operator.
     *
     * Requirements:
     *
     * - input must fit into 160 bits
     *
     * _Available since v4.7._
     */
    function toUint160(uint256 value) internal pure returns (uint160) {
        require(value <= type(uint160).max, \\"SafeCast: value doesn't fit in 160 bits\\");
        return uint160(value);
    }

    /**
     * @dev Returns the downcasted uint152 from uint256, reverting on
     * overflow (when the input is greater than largest uint152).
     *
     * Counterpart to Solidity's \`uint152\` operator.
     *
     * Requirements:
     *
     * - input must fit into 152 bits
     *
     * _Available since v4.7._
     */
    function toUint152(uint256 value) internal pure returns (uint152) {
        require(value <= type(uint152).max, \\"SafeCast: value doesn't fit in 152 bits\\");
        return uint152(value);
    }

    /**
     * @dev Returns the downcasted uint144 from uint256, reverting on
     * overflow (when the input is greater than largest uint144).
     *
     * Counterpart to Solidity's \`uint144\` operator.
     *
     * Requirements:
     *
     * - input must fit into 144 bits
     *
     * _Available since v4.7._
     */
    function toUint144(uint256 value) internal pure returns (uint144) {
        require(value <= type(uint144).max, \\"SafeCast: value doesn't fit in 144 bits\\");
        return uint144(value);
    }

    /**
     * @dev Returns the downcasted uint136 from uint256, reverting on
     * overflow (when the input is greater than largest uint136).
     *
     * Counterpart to Solidity's \`uint136\` operator.
     *
     * Requirements:
     *
     * - input must fit into 136 bits
     *
     * _Available since v4.7._
     */
    function toUint136(uint256 value) internal pure returns (uint136) {
        require(value <= type(uint136).max, \\"SafeCast: value doesn't fit in 136 bits\\");
        return uint136(value);
    }

    /**
     * @dev Returns the downcasted uint128 from uint256, reverting on
     * overflow (when the input is greater than largest uint128).
     *
     * Counterpart to Solidity's \`uint128\` operator.
     *
     * Requirements:
     *
     * - input must fit into 128 bits
     *
     * _Available since v2.5._
     */
    function toUint128(uint256 value) internal pure returns (uint128) {
        require(value <= type(uint128).max, \\"SafeCast: value doesn't fit in 128 bits\\");
        return uint128(value);
    }

    /**
     * @dev Returns the downcasted uint120 from uint256, reverting on
     * overflow (when the input is greater than largest uint120).
     *
     * Counterpart to Solidity's \`uint120\` operator.
     *
     * Requirements:
     *
     * - input must fit into 120 bits
     *
     * _Available since v4.7._
     */
    function toUint120(uint256 value) internal pure returns (uint120) {
        require(value <= type(uint120).max, \\"SafeCast: value doesn't fit in 120 bits\\");
        return uint120(value);
    }

    /**
     * @dev Returns the downcasted uint112 from uint256, reverting on
     * overflow (when the input is greater than largest uint112).
     *
     * Counterpart to Solidity's \`uint112\` operator.
     *
     * Requirements:
     *
     * - input must fit into 112 bits
     *
     * _Available since v4.7._
     */
    function toUint112(uint256 value) internal pure returns (uint112) {
        require(value <= type(uint112).max, \\"SafeCast: value doesn't fit in 112 bits\\");
        return uint112(value);
    }

    /**
     * @dev Returns the downcasted uint104 from uint256, reverting on
     * overflow (when the input is greater than largest uint104).
     *
     * Counterpart to Solidity's \`uint104\` operator.
     *
     * Requirements:
     *
     * - input must fit into 104 bits
     *
     * _Available since v4.7._
     */
    function toUint104(uint256 value) internal pure returns (uint104) {
        require(value <= type(uint104).max, \\"SafeCast: value doesn't fit in 104 bits\\");
        return uint104(value);
    }

    /**
     * @dev Returns the downcasted uint96 from uint256, reverting on
     * overflow (when the input is greater than largest uint96).
     *
     * Counterpart to Solidity's \`uint96\` operator.
     *
     * Requirements:
     *
     * - input must fit into 96 bits
     *
     * _Available since v4.2._
     */
    function toUint96(uint256 value) internal pure returns (uint96) {
        require(value <= type(uint96).max, \\"SafeCast: value doesn't fit in 96 bits\\");
        return uint96(value);
    }

    /**
     * @dev Returns the downcasted uint88 from uint256, reverting on
     * overflow (when the input is greater than largest uint88).
     *
     * Counterpart to Solidity's \`uint88\` operator.
     *
     * Requirements:
     *
     * - input must fit into 88 bits
     *
     * _Available since v4.7._
     */
    function toUint88(uint256 value) internal pure returns (uint88) {
        require(value <= type(uint88).max, \\"SafeCast: value doesn't fit in 88 bits\\");
        return uint88(value);
    }

    /**
     * @dev Returns the downcasted uint80 from uint256, reverting on
     * overflow (when the input is greater than largest uint80).
     *
     * Counterpart to Solidity's \`uint80\` operator.
     *
     * Requirements:
     *
     * - input must fit into 80 bits
     *
     * _Available since v4.7._
     */
    function toUint80(uint256 value) internal pure returns (uint80) {
        require(value <= type(uint80).max, \\"SafeCast: value doesn't fit in 80 bits\\");
        return uint80(value);
    }

    /**
     * @dev Returns the downcasted uint72 from uint256, reverting on
     * overflow (when the input is greater than largest uint72).
     *
     * Counterpart to Solidity's \`uint72\` operator.
     *
     * Requirements:
     *
     * - input must fit into 72 bits
     *
     * _Available since v4.7._
     */
    function toUint72(uint256 value) internal pure returns (uint72) {
        require(value <= type(uint72).max, \\"SafeCast: value doesn't fit in 72 bits\\");
        return uint72(value);
    }

    /**
     * @dev Returns the downcasted uint64 from uint256, reverting on
     * overflow (when the input is greater than largest uint64).
     *
     * Counterpart to Solidity's \`uint64\` operator.
     *
     * Requirements:
     *
     * - input must fit into 64 bits
     *
     * _Available since v2.5._
     */
    function toUint64(uint256 value) internal pure returns (uint64) {
        require(value <= type(uint64).max, \\"SafeCast: value doesn't fit in 64 bits\\");
        return uint64(value);
    }

    /**
     * @dev Returns the downcasted uint56 from uint256, reverting on
     * overflow (when the input is greater than largest uint56).
     *
     * Counterpart to Solidity's \`uint56\` operator.
     *
     * Requirements:
     *
     * - input must fit into 56 bits
     *
     * _Available since v4.7._
     */
    function toUint56(uint256 value) internal pure returns (uint56) {
        require(value <= type(uint56).max, \\"SafeCast: value doesn't fit in 56 bits\\");
        return uint56(value);
    }

    /**
     * @dev Returns the downcasted uint48 from uint256, reverting on
     * overflow (when the input is greater than largest uint48).
     *
     * Counterpart to Solidity's \`uint48\` operator.
     *
     * Requirements:
     *
     * - input must fit into 48 bits
     *
     * _Available since v4.7._
     */
    function toUint48(uint256 value) internal pure returns (uint48) {
        require(value <= type(uint48).max, \\"SafeCast: value doesn't fit in 48 bits\\");
        return uint48(value);
    }

    /**
     * @dev Returns the downcasted uint40 from uint256, reverting on
     * overflow (when the input is greater than largest uint40).
     *
     * Counterpart to Solidity's \`uint40\` operator.
     *
     * Requirements:
     *
     * - input must fit into 40 bits
     *
     * _Available since v4.7._
     */
    function toUint40(uint256 value) internal pure returns (uint40) {
        require(value <= type(uint40).max, \\"SafeCast: value doesn't fit in 40 bits\\");
        return uint40(value);
    }

    /**
     * @dev Returns the downcasted uint32 from uint256, reverting on
     * overflow (when the input is greater than largest uint32).
     *
     * Counterpart to Solidity's \`uint32\` operator.
     *
     * Requirements:
     *
     * - input must fit into 32 bits
     *
     * _Available since v2.5._
     */
    function toUint32(uint256 value) internal pure returns (uint32) {
        require(value <= type(uint32).max, \\"SafeCast: value doesn't fit in 32 bits\\");
        return uint32(value);
    }

    /**
     * @dev Returns the downcasted uint24 from uint256, reverting on
     * overflow (when the input is greater than largest uint24).
     *
     * Counterpart to Solidity's \`uint24\` operator.
     *
     * Requirements:
     *
     * - input must fit into 24 bits
     *
     * _Available since v4.7._
     */
    function toUint24(uint256 value) internal pure returns (uint24) {
        require(value <= type(uint24).max, \\"SafeCast: value doesn't fit in 24 bits\\");
        return uint24(value);
    }

    /**
     * @dev Returns the downcasted uint16 from uint256, reverting on
     * overflow (when the input is greater than largest uint16).
     *
     * Counterpart to Solidity's \`uint16\` operator.
     *
     * Requirements:
     *
     * - input must fit into 16 bits
     *
     * _Available since v2.5._
     */
    function toUint16(uint256 value) internal pure returns (uint16) {
        require(value <= type(uint16).max, \\"SafeCast: value doesn't fit in 16 bits\\");
        return uint16(value);
    }

    /**
     * @dev Returns the downcasted uint8 from uint256, reverting on
     * overflow (when the input is greater than largest uint8).
     *
     * Counterpart to Solidity's \`uint8\` operator.
     *
     * Requirements:
     *
     * - input must fit into 8 bits
     *
     * _Available since v2.5._
     */
    function toUint8(uint256 value) internal pure returns (uint8) {
        require(value <= type(uint8).max, \\"SafeCast: value doesn't fit in 8 bits\\");
        return uint8(value);
    }

    /**
     * @dev Converts a signed int256 into an unsigned uint256.
     *
     * Requirements:
     *
     * - input must be greater than or equal to 0.
     *
     * _Available since v3.0._
     */
    function toUint256(int256 value) internal pure returns (uint256) {
        require(value >= 0, \\"SafeCast: value must be positive\\");
        return uint256(value);
    }

    /**
     * @dev Returns the downcasted int248 from int256, reverting on
     * overflow (when the input is less than smallest int248 or
     * greater than largest int248).
     *
     * Counterpart to Solidity's \`int248\` operator.
     *
     * Requirements:
     *
     * - input must fit into 248 bits
     *
     * _Available since v4.7._
     */
    function toInt248(int256 value) internal pure returns (int248 downcasted) {
        downcasted = int248(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 248 bits\\");
    }

    /**
     * @dev Returns the downcasted int240 from int256, reverting on
     * overflow (when the input is less than smallest int240 or
     * greater than largest int240).
     *
     * Counterpart to Solidity's \`int240\` operator.
     *
     * Requirements:
     *
     * - input must fit into 240 bits
     *
     * _Available since v4.7._
     */
    function toInt240(int256 value) internal pure returns (int240 downcasted) {
        downcasted = int240(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 240 bits\\");
    }

    /**
     * @dev Returns the downcasted int232 from int256, reverting on
     * overflow (when the input is less than smallest int232 or
     * greater than largest int232).
     *
     * Counterpart to Solidity's \`int232\` operator.
     *
     * Requirements:
     *
     * - input must fit into 232 bits
     *
     * _Available since v4.7._
     */
    function toInt232(int256 value) internal pure returns (int232 downcasted) {
        downcasted = int232(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 232 bits\\");
    }

    /**
     * @dev Returns the downcasted int224 from int256, reverting on
     * overflow (when the input is less than smallest int224 or
     * greater than largest int224).
     *
     * Counterpart to Solidity's \`int224\` operator.
     *
     * Requirements:
     *
     * - input must fit into 224 bits
     *
     * _Available since v4.7._
     */
    function toInt224(int256 value) internal pure returns (int224 downcasted) {
        downcasted = int224(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 224 bits\\");
    }

    /**
     * @dev Returns the downcasted int216 from int256, reverting on
     * overflow (when the input is less than smallest int216 or
     * greater than largest int216).
     *
     * Counterpart to Solidity's \`int216\` operator.
     *
     * Requirements:
     *
     * - input must fit into 216 bits
     *
     * _Available since v4.7._
     */
    function toInt216(int256 value) internal pure returns (int216 downcasted) {
        downcasted = int216(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 216 bits\\");
    }

    /**
     * @dev Returns the downcasted int208 from int256, reverting on
     * overflow (when the input is less than smallest int208 or
     * greater than largest int208).
     *
     * Counterpart to Solidity's \`int208\` operator.
     *
     * Requirements:
     *
     * - input must fit into 208 bits
     *
     * _Available since v4.7._
     */
    function toInt208(int256 value) internal pure returns (int208 downcasted) {
        downcasted = int208(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 208 bits\\");
    }

    /**
     * @dev Returns the downcasted int200 from int256, reverting on
     * overflow (when the input is less than smallest int200 or
     * greater than largest int200).
     *
     * Counterpart to Solidity's \`int200\` operator.
     *
     * Requirements:
     *
     * - input must fit into 200 bits
     *
     * _Available since v4.7._
     */
    function toInt200(int256 value) internal pure returns (int200 downcasted) {
        downcasted = int200(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 200 bits\\");
    }

    /**
     * @dev Returns the downcasted int192 from int256, reverting on
     * overflow (when the input is less than smallest int192 or
     * greater than largest int192).
     *
     * Counterpart to Solidity's \`int192\` operator.
     *
     * Requirements:
     *
     * - input must fit into 192 bits
     *
     * _Available since v4.7._
     */
    function toInt192(int256 value) internal pure returns (int192 downcasted) {
        downcasted = int192(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 192 bits\\");
    }

    /**
     * @dev Returns the downcasted int184 from int256, reverting on
     * overflow (when the input is less than smallest int184 or
     * greater than largest int184).
     *
     * Counterpart to Solidity's \`int184\` operator.
     *
     * Requirements:
     *
     * - input must fit into 184 bits
     *
     * _Available since v4.7._
     */
    function toInt184(int256 value) internal pure returns (int184 downcasted) {
        downcasted = int184(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 184 bits\\");
    }

    /**
     * @dev Returns the downcasted int176 from int256, reverting on
     * overflow (when the input is less than smallest int176 or
     * greater than largest int176).
     *
     * Counterpart to Solidity's \`int176\` operator.
     *
     * Requirements:
     *
     * - input must fit into 176 bits
     *
     * _Available since v4.7._
     */
    function toInt176(int256 value) internal pure returns (int176 downcasted) {
        downcasted = int176(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 176 bits\\");
    }

    /**
     * @dev Returns the downcasted int168 from int256, reverting on
     * overflow (when the input is less than smallest int168 or
     * greater than largest int168).
     *
     * Counterpart to Solidity's \`int168\` operator.
     *
     * Requirements:
     *
     * - input must fit into 168 bits
     *
     * _Available since v4.7._
     */
    function toInt168(int256 value) internal pure returns (int168 downcasted) {
        downcasted = int168(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 168 bits\\");
    }

    /**
     * @dev Returns the downcasted int160 from int256, reverting on
     * overflow (when the input is less than smallest int160 or
     * greater than largest int160).
     *
     * Counterpart to Solidity's \`int160\` operator.
     *
     * Requirements:
     *
     * - input must fit into 160 bits
     *
     * _Available since v4.7._
     */
    function toInt160(int256 value) internal pure returns (int160 downcasted) {
        downcasted = int160(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 160 bits\\");
    }

    /**
     * @dev Returns the downcasted int152 from int256, reverting on
     * overflow (when the input is less than smallest int152 or
     * greater than largest int152).
     *
     * Counterpart to Solidity's \`int152\` operator.
     *
     * Requirements:
     *
     * - input must fit into 152 bits
     *
     * _Available since v4.7._
     */
    function toInt152(int256 value) internal pure returns (int152 downcasted) {
        downcasted = int152(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 152 bits\\");
    }

    /**
     * @dev Returns the downcasted int144 from int256, reverting on
     * overflow (when the input is less than smallest int144 or
     * greater than largest int144).
     *
     * Counterpart to Solidity's \`int144\` operator.
     *
     * Requirements:
     *
     * - input must fit into 144 bits
     *
     * _Available since v4.7._
     */
    function toInt144(int256 value) internal pure returns (int144 downcasted) {
        downcasted = int144(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 144 bits\\");
    }

    /**
     * @dev Returns the downcasted int136 from int256, reverting on
     * overflow (when the input is less than smallest int136 or
     * greater than largest int136).
     *
     * Counterpart to Solidity's \`int136\` operator.
     *
     * Requirements:
     *
     * - input must fit into 136 bits
     *
     * _Available since v4.7._
     */
    function toInt136(int256 value) internal pure returns (int136 downcasted) {
        downcasted = int136(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 136 bits\\");
    }

    /**
     * @dev Returns the downcasted int128 from int256, reverting on
     * overflow (when the input is less than smallest int128 or
     * greater than largest int128).
     *
     * Counterpart to Solidity's \`int128\` operator.
     *
     * Requirements:
     *
     * - input must fit into 128 bits
     *
     * _Available since v3.1._
     */
    function toInt128(int256 value) internal pure returns (int128 downcasted) {
        downcasted = int128(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 128 bits\\");
    }

    /**
     * @dev Returns the downcasted int120 from int256, reverting on
     * overflow (when the input is less than smallest int120 or
     * greater than largest int120).
     *
     * Counterpart to Solidity's \`int120\` operator.
     *
     * Requirements:
     *
     * - input must fit into 120 bits
     *
     * _Available since v4.7._
     */
    function toInt120(int256 value) internal pure returns (int120 downcasted) {
        downcasted = int120(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 120 bits\\");
    }

    /**
     * @dev Returns the downcasted int112 from int256, reverting on
     * overflow (when the input is less than smallest int112 or
     * greater than largest int112).
     *
     * Counterpart to Solidity's \`int112\` operator.
     *
     * Requirements:
     *
     * - input must fit into 112 bits
     *
     * _Available since v4.7._
     */
    function toInt112(int256 value) internal pure returns (int112 downcasted) {
        downcasted = int112(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 112 bits\\");
    }

    /**
     * @dev Returns the downcasted int104 from int256, reverting on
     * overflow (when the input is less than smallest int104 or
     * greater than largest int104).
     *
     * Counterpart to Solidity's \`int104\` operator.
     *
     * Requirements:
     *
     * - input must fit into 104 bits
     *
     * _Available since v4.7._
     */
    function toInt104(int256 value) internal pure returns (int104 downcasted) {
        downcasted = int104(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 104 bits\\");
    }

    /**
     * @dev Returns the downcasted int96 from int256, reverting on
     * overflow (when the input is less than smallest int96 or
     * greater than largest int96).
     *
     * Counterpart to Solidity's \`int96\` operator.
     *
     * Requirements:
     *
     * - input must fit into 96 bits
     *
     * _Available since v4.7._
     */
    function toInt96(int256 value) internal pure returns (int96 downcasted) {
        downcasted = int96(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 96 bits\\");
    }

    /**
     * @dev Returns the downcasted int88 from int256, reverting on
     * overflow (when the input is less than smallest int88 or
     * greater than largest int88).
     *
     * Counterpart to Solidity's \`int88\` operator.
     *
     * Requirements:
     *
     * - input must fit into 88 bits
     *
     * _Available since v4.7._
     */
    function toInt88(int256 value) internal pure returns (int88 downcasted) {
        downcasted = int88(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 88 bits\\");
    }

    /**
     * @dev Returns the downcasted int80 from int256, reverting on
     * overflow (when the input is less than smallest int80 or
     * greater than largest int80).
     *
     * Counterpart to Solidity's \`int80\` operator.
     *
     * Requirements:
     *
     * - input must fit into 80 bits
     *
     * _Available since v4.7._
     */
    function toInt80(int256 value) internal pure returns (int80 downcasted) {
        downcasted = int80(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 80 bits\\");
    }

    /**
     * @dev Returns the downcasted int72 from int256, reverting on
     * overflow (when the input is less than smallest int72 or
     * greater than largest int72).
     *
     * Counterpart to Solidity's \`int72\` operator.
     *
     * Requirements:
     *
     * - input must fit into 72 bits
     *
     * _Available since v4.7._
     */
    function toInt72(int256 value) internal pure returns (int72 downcasted) {
        downcasted = int72(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 72 bits\\");
    }

    /**
     * @dev Returns the downcasted int64 from int256, reverting on
     * overflow (when the input is less than smallest int64 or
     * greater than largest int64).
     *
     * Counterpart to Solidity's \`int64\` operator.
     *
     * Requirements:
     *
     * - input must fit into 64 bits
     *
     * _Available since v3.1._
     */
    function toInt64(int256 value) internal pure returns (int64 downcasted) {
        downcasted = int64(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 64 bits\\");
    }

    /**
     * @dev Returns the downcasted int56 from int256, reverting on
     * overflow (when the input is less than smallest int56 or
     * greater than largest int56).
     *
     * Counterpart to Solidity's \`int56\` operator.
     *
     * Requirements:
     *
     * - input must fit into 56 bits
     *
     * _Available since v4.7._
     */
    function toInt56(int256 value) internal pure returns (int56 downcasted) {
        downcasted = int56(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 56 bits\\");
    }

    /**
     * @dev Returns the downcasted int48 from int256, reverting on
     * overflow (when the input is less than smallest int48 or
     * greater than largest int48).
     *
     * Counterpart to Solidity's \`int48\` operator.
     *
     * Requirements:
     *
     * - input must fit into 48 bits
     *
     * _Available since v4.7._
     */
    function toInt48(int256 value) internal pure returns (int48 downcasted) {
        downcasted = int48(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 48 bits\\");
    }

    /**
     * @dev Returns the downcasted int40 from int256, reverting on
     * overflow (when the input is less than smallest int40 or
     * greater than largest int40).
     *
     * Counterpart to Solidity's \`int40\` operator.
     *
     * Requirements:
     *
     * - input must fit into 40 bits
     *
     * _Available since v4.7._
     */
    function toInt40(int256 value) internal pure returns (int40 downcasted) {
        downcasted = int40(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 40 bits\\");
    }

    /**
     * @dev Returns the downcasted int32 from int256, reverting on
     * overflow (when the input is less than smallest int32 or
     * greater than largest int32).
     *
     * Counterpart to Solidity's \`int32\` operator.
     *
     * Requirements:
     *
     * - input must fit into 32 bits
     *
     * _Available since v3.1._
     */
    function toInt32(int256 value) internal pure returns (int32 downcasted) {
        downcasted = int32(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 32 bits\\");
    }

    /**
     * @dev Returns the downcasted int24 from int256, reverting on
     * overflow (when the input is less than smallest int24 or
     * greater than largest int24).
     *
     * Counterpart to Solidity's \`int24\` operator.
     *
     * Requirements:
     *
     * - input must fit into 24 bits
     *
     * _Available since v4.7._
     */
    function toInt24(int256 value) internal pure returns (int24 downcasted) {
        downcasted = int24(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 24 bits\\");
    }

    /**
     * @dev Returns the downcasted int16 from int256, reverting on
     * overflow (when the input is less than smallest int16 or
     * greater than largest int16).
     *
     * Counterpart to Solidity's \`int16\` operator.
     *
     * Requirements:
     *
     * - input must fit into 16 bits
     *
     * _Available since v3.1._
     */
    function toInt16(int256 value) internal pure returns (int16 downcasted) {
        downcasted = int16(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 16 bits\\");
    }

    /**
     * @dev Returns the downcasted int8 from int256, reverting on
     * overflow (when the input is less than smallest int8 or
     * greater than largest int8).
     *
     * Counterpart to Solidity's \`int8\` operator.
     *
     * Requirements:
     *
     * - input must fit into 8 bits
     *
     * _Available since v3.1._
     */
    function toInt8(int256 value) internal pure returns (int8 downcasted) {
        downcasted = int8(value);
        require(downcasted == value, \\"SafeCast: value doesn't fit in 8 bits\\");
    }

    /**
     * @dev Converts an unsigned uint256 into a signed int256.
     *
     * Requirements:
     *
     * - input must be less than or equal to maxInt256.
     *
     * _Available since v3.0._
     */
    function toInt256(uint256 value) internal pure returns (int256) {
        // Note: Unsafe cast below is okay because \`type(int256).max\` is guaranteed to be positive
        require(value <= uint256(type(int256).max), \\"SafeCast: value doesn't fit in an int256\\");
        return int256(value);
    }
}
",
          },
          {
            "id": 21,
            "name": "IERC20.sol",
            "path": "src/interfaces/IERC20.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)

pragma solidity ^0.8.0;

/**
 * @dev Interface of the ERC20 standard as defined in the EIP.
 */
interface IERC20 {
  /**
   * @dev Emitted when \`value\` tokens are moved from one account (\`from\`) to
   * another (\`to\`).
   *
   * Note that \`value\` may be zero.
   */
  event Transfer(address indexed from, address indexed to, uint256 value);

  /**
   * @dev Emitted when the allowance of a \`spender\` for an \`owner\` is set by
   * a call to {approve}. \`value\` is the new allowance.
   */
  event Approval(address indexed owner, address indexed spender, uint256 value);

  /**
   * @dev Returns the amount of tokens in existence.
   */
  function totalSupply() external view returns (uint256);

  /**
   * @dev Returns the amount of tokens owned by \`account\`.
   */
  function balanceOf(address account) external view returns (uint256);

  /**
   * @dev Moves \`amount\` tokens from the caller's account to \`to\`.
   *
   * Returns a boolean value indicating whether the operation succeeded.
   *
   * Emits a {Transfer} event.
   */
  function transfer(address to, uint256 amount) external returns (bool);

  /**
   * @dev Returns the remaining number of tokens that \`spender\` will be
   * allowed to spend on behalf of \`owner\` through {transferFrom}. This is
   * zero by default.
   *
   * This value changes when {approve} or {transferFrom} are called.
   */
  function allowance(address owner, address spender)
    external
    view
    returns (uint256);

  /**
   * @dev Sets \`amount\` as the allowance of \`spender\` over the caller's tokens.
   *
   * Returns a boolean value indicating whether the operation succeeded.
   *
   * IMPORTANT: Beware that changing an allowance with this method brings the risk
   * that someone may use both the old and the new allowance by unfortunate
   * transaction ordering. One possible solution to mitigate this race
   * condition is to first reduce the spender's allowance to 0 and set the
   * desired value afterwards:
   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
   *
   * Emits an {Approval} event.
   */
  function approve(address spender, uint256 amount) external returns (bool);

  /**
   * @dev Moves \`amount\` tokens from \`from\` to \`to\` using the
   * allowance mechanism. \`amount\` is then deducted from the caller's
   * allowance.
   *
   * Returns a boolean value indicating whether the operation succeeded.
   *
   * Emits a {Transfer} event.
   */
  function transferFrom(
    address from,
    address to,
    uint256 amount
  ) external returns (bool);
}
",
          },
          {
            "id": 29,
            "name": "IStakedTokenV3.sol",
            "path": "src/interfaces/IStakedTokenV3.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity ^0.8.0;

import {IStakedTokenV2} from './IStakedTokenV2.sol';

interface IStakedTokenV3 is IStakedTokenV2 {
  event Staked(
    address indexed from,
    address indexed to,
    uint256 assets,
    uint256 shares
  );
  event Redeem(
    address indexed from,
    address indexed to,
    uint256 assets,
    uint256 shares
  );
  event MaxSlashablePercentageChanged(uint256 newPercentage);
  event Slashed(address indexed destination, uint256 amount);
  event SlashingExitWindowDurationChanged(uint256 windowSeconds);
  event CooldownSecondsChanged(uint256 cooldownSeconds);
  event ExchangeRateChanged(uint216 exchangeRate);
  event FundsReturned(uint256 amount);
  event SlashingSettled();

  /**
   * @dev Returns the current exchange rate
   * @return exchangeRate as 18 decimal precision uint216
   */
  function getExchangeRate() external view returns (uint216);

  /**
   * @dev Executes a slashing of the underlying of a certain amount, transferring the seized funds
   * to destination. Decreasing the amount of underlying will automatically adjust the exchange rate.
   * A call to \`slash\` will start a slashing event which has to be settled via \`settleSlashing\`.
   * As long as the slashing event is ongoing, stake and slash are deactivated.
   * - MUST NOT be called when a previous slashing is still ongoing
   * @param destination the address where seized funds will be transferred
   * @param amount the amount to be slashed
   * - if the amount bigger than maximum allowed, the maximum will be slashed instead.
   * @return amount the amount slashed
   */
  function slash(address destination, uint256 amount)
    external
    returns (uint256);

  /**
   * @dev Settles an ongoing slashing event
   */
  function settleSlashing() external;

  /**
   * @dev Pulls STAKE_TOKEN and distributes them amongst current stakers by altering the exchange rate.
   * This method is permissionless and intended to be used after a slashing event to return potential excess funds.
   * @param amount amount of STAKE_TOKEN to pull.
   */
  function returnFunds(uint256 amount) external;

  /**
   * @dev Getter of the cooldown seconds
   * @return cooldownSeconds the amount of seconds between starting the cooldown and being able to redeem
   */
  function getCooldownSeconds() external view returns (uint256);

  /**
   * @dev Getter of the cooldown seconds
   * @return cooldownSeconds the amount of seconds between starting the cooldown and being able to redeem
   */
  function COOLDOWN_SECONDS() external view returns (uint256); // @deprecated

  /**
   * @dev Setter of cooldown seconds
   * Can only be called by the cooldown admin
   * @param cooldownSeconds the new amount of seconds you have to wait between starting the cooldown and being able to redeem
   */
  function setCooldownSeconds(uint256 cooldownSeconds) external;

  /**
   * @dev Getter of the max slashable percentage of the total staked amount.
   * @return percentage the maximum slashable percentage
   */
  function getMaxSlashablePercentage() external view returns (uint256);

  /**
   * @dev Setter of max slashable percentage of the total staked amount.
   * Can only be called by the slashing admin
   * @param percentage the new maximum slashable percentage
   */
  function setMaxSlashablePercentage(uint256 percentage) external;

  /**
   * @dev returns the exact amount of shares that would be received for the provided number of assets
   * @param assets the number of assets to stake
   * @return uint256 shares the number of shares that would be received
   */
  function previewStake(uint256 assets) external view returns (uint256);

  /**
   * @dev Activates the cooldown period to unstake
   * - It can't be called if the user is not staking
   */
  function cooldownOnBehalfOf(address from) external;

  /**
   * @dev Claims an \`amount\` of \`REWARD_TOKEN\` to the address \`to\` on behalf of the user. Only the claim helper contract is allowed to call this function
   * @param from The address of the user from to claim
   * @param to Address to send the claimed rewards
   * @param amount Amount to claim
   */
  function claimRewardsOnBehalf(
    address from,
    address to,
    uint256 amount
  ) external returns (uint256);

  /**
   * @dev returns the exact amount of assets that would be redeemed for the provided number of shares
   * @param shares the number of shares to redeem
   * @return uint256 assets the number of assets that would be redeemed
   */
  function previewRedeem(uint256 shares) external view returns (uint256);

  /**
   * @dev Redeems shares for a user. Only the claim helper contract is allowed to call this function
   * @param from Address to redeem from
   * @param to Address to redeem to
   * @param amount Amount of shares to redeem
   */
  function redeemOnBehalf(
    address from,
    address to,
    uint256 amount
  ) external;

  /**
   * @dev Claims an \`amount\` of \`REWARD_TOKEN\` and redeems to the provided address
   * @param to Address to claim and redeem to
   * @param claimAmount Amount to claim
   * @param redeemAmount Amount to redeem
   */
  function claimRewardsAndRedeem(
    address to,
    uint256 claimAmount,
    uint256 redeemAmount
  ) external;

  /**
   * @dev Claims an \`amount\` of \`REWARD_TOKEN\` and redeems the \`redeemAmount\` to an address. Only the claim helper contract is allowed to call this function
   * @param from The address of the from
   * @param to Address to claim and redeem to
   * @param claimAmount Amount to claim
   * @param redeemAmount Amount to redeem
   */
  function claimRewardsAndRedeemOnBehalf(
    address from,
    address to,
    uint256 claimAmount,
    uint256 redeemAmount
  ) external;
}
",
          },
          {
            "id": 39,
            "name": "SafeERC20.sol",
            "path": "src/lib/SafeERC20.sol",
            "source": "// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)

pragma solidity ^0.8.0;

import \\"../interfaces/IERC20.sol\\";
import \\"./Address.sol\\";

/**
 * @title SafeERC20
 * @dev Wrappers around ERC20 operations that throw on failure (when the token
 * contract returns false). Tokens that return no value (and instead revert or
 * throw on failure) are also supported, non-reverting calls are assumed to be
 * successful.
 * To use this library you can add a \`using SafeERC20 for IERC20;\` statement to your contract,
 * which allows you to call the safe operations as \`token.safeTransfer(...)\`, etc.
 */
library SafeERC20 {
    using Address for address;

    function safeTransfer(
        IERC20 token,
        address to,
        uint256 value
    ) internal {
        _callOptionalReturn(
            token,
            abi.encodeWithSelector(token.transfer.selector, to, value)
        );
    }

    function safeTransferFrom(
        IERC20 token,
        address from,
        address to,
        uint256 value
    ) internal {
        _callOptionalReturn(
            token,
            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)
        );
    }

    /**
     * @dev Deprecated. This function has issues similar to the ones found in
     * {IERC20-approve}, and its usage is discouraged.
     *
     * Whenever possible, use {safeIncreaseAllowance} and
     * {safeDecreaseAllowance} instead.
     */
    function safeApprove(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        // safeApprove should only be called when setting an initial allowance,
        // or when resetting it to zero. To increase and decrease it, use
        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'
        require(
            (value == 0) || (token.allowance(address(this), spender) == 0),
            \\"SafeERC20: approve from non-zero to non-zero allowance\\"
        );
        _callOptionalReturn(
            token,
            abi.encodeWithSelector(token.approve.selector, spender, value)
        );
    }

    function safeIncreaseAllowance(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        uint256 newAllowance = token.allowance(address(this), spender) + value;
        _callOptionalReturn(
            token,
            abi.encodeWithSelector(
                token.approve.selector,
                spender,
                newAllowance
            )
        );
    }

    function safeDecreaseAllowance(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        unchecked {
            uint256 oldAllowance = token.allowance(address(this), spender);
            require(
                oldAllowance >= value,
                \\"SafeERC20: decreased allowance below zero\\"
            );
            uint256 newAllowance = oldAllowance - value;
            _callOptionalReturn(
                token,
                abi.encodeWithSelector(
                    token.approve.selector,
                    spender,
                    newAllowance
                )
            );
        }
    }

    /**
     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement
     * on the return value: the return value is optional (but if data is returned, it must not be false).
     * @param token The token targeted by the call.
     * @param data The call data (encoded using abi.encode or one of its variants).
     */
    function _callOptionalReturn(IERC20 token, bytes memory data) private {
        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since
        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that
        // the target address contains contract code and also asserts for success in the low-level call.

        bytes memory returndata = address(token).functionCall(
            data,
            \\"SafeERC20: low-level call failed\\"
        );
        if (returndata.length > 0) {
            // Return data is optional
            require(
                abi.decode(returndata, (bool)),
                \\"SafeERC20: ERC20 operation did not succeed\\"
            );
        }
    }
}
",
          },
        ],
        "main_contract": 16,
        "raw_abi": null,
      },
      "ens_domain": null,
      "evm_version": "",
      "export": false,
      "id": "eth:1:0xe427fcbd54169136391cfedf68e96abb13da87a0",
      "in_project": false,
      "language": "solidity",
      "libraries": null,
      "network_id": "1",
      "number_of_files": 42,
      "number_of_watches": null,
      "optimization_runs": 200,
      "optimizations_used": true,
      "public": true,
      "type": "contract",
      "verification_date": null,
      "verified_by": "etherscan",
    },
    {
      "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
      "balance": "",
      "child_contracts": [
        {
          "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
          "id": "eth:1:0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
          "network_id": "1",
        },
      ],
      "compiler_version": "v0.7.5+commit.eb77ed08",
      "contract_id": "eth:1:0xec568fffba86c094cf06b22134b23074dfe2252c",
      "contract_name": "AaveGovernanceV2",
      "created_at": "2020-12-10T20:42:05Z",
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "data": {
        "abi": [
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governanceStrategy",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "votingDelay",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "guardian",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executors",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "address[]",
              },
            ],
            "name": "",
            "outputs": null,
            "stateMutability": "",
            "type": "constructor",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "isExecutorAuthorized",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "AAVE",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "NAME",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getVotingPowerAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newOwner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "getProposalsCount",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getTotalVotingSupplyAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getProposalState",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "getVotingDelay",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getProposalById",
            "outputs": [
              {
                "components": [
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "id",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint256",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "creator",
                    "offset": 0,
                    "simple_type": {
                      "type": "address",
                    },
                    "storage_location": "default",
                    "type": "address",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "executor",
                    "offset": 0,
                    "simple_type": {
                      "type": "address",
                    },
                    "storage_location": "default",
                    "type": "address",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "targets",
                    "offset": 0,
                    "simple_type": {
                      "nested_type": {
                        "type": "address",
                      },
                      "type": "slice",
                    },
                    "storage_location": "default",
                    "type": "address[]",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "values",
                    "offset": 0,
                    "simple_type": {
                      "nested_type": {
                        "type": "uint",
                      },
                      "type": "slice",
                    },
                    "storage_location": "default",
                    "type": "uint256[]",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "signatures",
                    "offset": 0,
                    "simple_type": {
                      "nested_type": {
                        "type": "string",
                      },
                      "type": "slice",
                    },
                    "storage_location": "default",
                    "type": "string[]",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "calldatas",
                    "offset": 0,
                    "simple_type": {
                      "nested_type": {
                        "type": "bytes",
                      },
                      "type": "slice",
                    },
                    "storage_location": "default",
                    "type": "bytes[]",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "withDelegatecalls",
                    "offset": 0,
                    "simple_type": {
                      "nested_type": {
                        "type": "bool",
                      },
                      "type": "slice",
                    },
                    "storage_location": "default",
                    "type": "bool[]",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "startBlock",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint256",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "endBlock",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint256",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "executionTime",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint256",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "forVotes",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint256",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "againstVotes",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint256",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "executed",
                    "offset": 0,
                    "simple_type": {
                      "type": "bool",
                    },
                    "storage_location": "default",
                    "type": "bool",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "canceled",
                    "offset": 0,
                    "simple_type": {
                      "type": "bool",
                    },
                    "storage_location": "default",
                    "type": "bool",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "strategy",
                    "offset": 0,
                    "simple_type": {
                      "type": "address",
                    },
                    "storage_location": "default",
                    "type": "address",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "ipfsHash",
                    "offset": 0,
                    "simple_type": {
                      "type": "bytes",
                    },
                    "storage_location": "default",
                    "type": "bytes32",
                  },
                ],
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "storage_location": "default",
                "type": "tuple",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "__abdicate",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "queue",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "governanceStrategy",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "setGovernanceStrategy",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "DOMAIN_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "support",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "v",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint8",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "r",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "s",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "submitVoteBySignature",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "votingDelay",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "setVotingDelay",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "getGovernanceStrategy",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "execute",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executors",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "address[]",
              },
            ],
            "name": "authorizeExecutors",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "cancel",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "voter",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "getVoteOnProposal",
            "outputs": [
              {
                "components": [
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "support",
                    "offset": 0,
                    "simple_type": {
                      "type": "bool",
                    },
                    "storage_location": "default",
                    "type": "bool",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "votingPower",
                    "offset": 0,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "default",
                    "type": "uint248",
                  },
                ],
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "storage_location": "default",
                "type": "tuple",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "proposalId",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "support",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
            ],
            "name": "submitVote",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "STK_AAVE",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "user",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getPropositionPowerAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "VOTE_EMITTED_TYPEHASH",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "blockNumber",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "getTotalPropositionSupplyAt",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executors",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "address[]",
              },
            ],
            "name": "unauthorizeExecutors",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "targets",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "address[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "values",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "uint",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "uint256[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signatures",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "string",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "string[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "calldatas",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "bytes",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "bytes[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecalls",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "bool",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "bool[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "ipfsHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "create",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "stateMutability": "nonpayable",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [],
            "name": "getGuardian",
            "outputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "stateMutability": "view",
            "type": "function",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "id",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "voter",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "support",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "votingPower",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "VoteEmitted",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newVotingDelay",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "initiatorChange",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "VotingDelayChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "ExecutorAuthorized",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "id",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
            ],
            "name": "ProposalCanceled",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "id",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "initiatorExecution",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "ProposalExecuted",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "ExecutorUnauthorized",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "previousOwner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "newOwner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "OwnershipTransferred",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "id",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "initiatorQueueing",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "ProposalQueued",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "newStrategy",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "initiatorChange",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
            ],
            "name": "GovernanceStrategyChanged",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
          {
            "anonymous": false,
            "constant": false,
            "inputs": [
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "id",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "creator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "executor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "targets",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "address[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "values",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "uint",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "uint256[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signatures",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "string",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "string[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "calldatas",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "bytes",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "bytes[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecalls",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "bool",
                  },
                  "type": "slice",
                },
                "storage_location": "default",
                "type": "bool[]",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "startBlock",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "endBlock",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "strategy",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "ipfsHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
            ],
            "name": "ProposalCreated",
            "outputs": null,
            "stateMutability": "",
            "type": "event",
          },
        ],
        "contract_info": [
          {
            "id": 0,
            "name": "AaveGovernanceV2.sol",
            "path": "AaveGovernanceV2.sol",
            "source": "// SPDX-License-Identifier: agpl-3.0
pragma solidity 0.7.5;
pragma abicoder v2;

function getChainId() pure returns (uint256) {
  uint256 chainId;
  assembly {
    chainId := chainid()
  }
  return chainId;
}

function isContract(address account) view returns (bool) {
  // According to EIP-1052, 0x0 is the value returned for not-yet created accounts
  // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned
  // for accounts without code, i.e. \`keccak256('')\`
  bytes32 codehash;
  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;
  // solhint-disable-next-line no-inline-assembly
  assembly {
    codehash := extcodehash(account)
  }
  return (codehash != accountHash && codehash != 0x0);
}

/*
 * @dev Provides information about the current execution context, including the
 * sender of the transaction and its data. While these are generally available
 * via msg.sender and msg.data, they should not be accessed in such a direct
 * manner, since when dealing with GSN meta-transactions the account sending and
 * paying for execution may not be the actual sender (as far as an application
 * is concerned).
 *
 * This contract is only required for intermediate, library-like contracts.
 */
abstract contract Context {
  function _msgSender() internal view virtual returns (address payable) {
    return msg.sender;
  }

  function _msgData() internal view virtual returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
}

/**
 * @dev Contract module which provides a basic access control mechanism, where
 * there is an account (an owner) that can be granted exclusive access to
 * specific functions.
 *
 * By default, the owner account will be the one that deploys the contract. This
 * can later be changed with {transferOwnership}.
 *
 * This module is used through inheritance. It will make available the modifier
 * \`onlyOwner\`, which can be applied to your functions to restrict their use to
 * the owner.
 */
contract Ownable is Context {
  address private _owner;

  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

  /**
   * @dev Initializes the contract setting the deployer as the initial owner.
   */
  constructor() {
    address msgSender = _msgSender();
    _owner = msgSender;
    emit OwnershipTransferred(address(0), msgSender);
  }

  /**
   * @dev Returns the address of the current owner.
   */
  function owner() public view returns (address) {
    return _owner;
  }

  /**
   * @dev Throws if called by any account other than the owner.
   */
  modifier onlyOwner() {
    require(_owner == _msgSender(), 'Ownable: caller is not the owner');
    _;
  }

  /**
   * @dev Leaves the contract without owner. It will not be possible to call
   * \`onlyOwner\` functions anymore. Can only be called by the current owner.
   *
   * NOTE: Renouncing ownership will leave the contract without an owner,
   * thereby removing any functionality that is only available to the owner.
   */
  function renounceOwnership() public virtual onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }

  /**
   * @dev Transfers ownership of the contract to a new account (\`newOwner\`).
   * Can only be called by the current owner.
   */
  function transferOwnership(address newOwner) public virtual onlyOwner {
    require(newOwner != address(0), 'Ownable: new owner is the zero address');
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
}

/**
 * @dev Wrappers over Solidity's arithmetic operations with added overflow
 * checks.
 *
 * Arithmetic operations in Solidity wrap on overflow. This can easily result
 * in bugs, because programmers usually assume that an overflow raises an
 * error, which is the standard behavior in high level programming languages.
 * \`SafeMath\` restores this intuition by reverting the transaction when an
 * operation overflows.
 *
 * Using this library instead of the unchecked operations eliminates an entire
 * class of bugs, so it's recommended to use it always.
 */
library SafeMath {
  /**
   * @dev Returns the addition of two unsigned integers, reverting on
   * overflow.
   *
   * Counterpart to Solidity's \`+\` operator.
   *
   * Requirements:
   * - Addition cannot overflow.
   */
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, 'SafeMath: addition overflow');

    return c;
  }

  /**
   * @dev Returns the subtraction of two unsigned integers, reverting on
   * overflow (when the result is negative).
   *
   * Counterpart to Solidity's \`-\` operator.
   *
   * Requirements:
   * - Subtraction cannot overflow.
   */
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, 'SafeMath: subtraction overflow');
  }

  /**
   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on
   * overflow (when the result is negative).
   *
   * Counterpart to Solidity's \`-\` operator.
   *
   * Requirements:
   * - Subtraction cannot overflow.
   */
  function sub(
    uint256 a,
    uint256 b,
    string memory errorMessage
  ) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }

  /**
   * @dev Returns the multiplication of two unsigned integers, reverting on
   * overflow.
   *
   * Counterpart to Solidity's \`*\` operator.
   *
   * Requirements:
   * - Multiplication cannot overflow.
   */
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, 'SafeMath: multiplication overflow');

    return c;
  }

  /**
   * @dev Returns the integer division of two unsigned integers. Reverts on
   * division by zero. The result is rounded towards zero.
   *
   * Counterpart to Solidity's \`/\` operator. Note: this function uses a
   * \`revert\` opcode (which leaves remaining gas untouched) while Solidity
   * uses an invalid opcode to revert (consuming all remaining gas).
   *
   * Requirements:
   * - The divisor cannot be zero.
   */
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, 'SafeMath: division by zero');
  }

  /**
   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on
   * division by zero. The result is rounded towards zero.
   *
   * Counterpart to Solidity's \`/\` operator. Note: this function uses a
   * \`revert\` opcode (which leaves remaining gas untouched) while Solidity
   * uses an invalid opcode to revert (consuming all remaining gas).
   *
   * Requirements:
   * - The divisor cannot be zero.
   */
  function div(
    uint256 a,
    uint256 b,
    string memory errorMessage
  ) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }

  /**
   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),
   * Reverts when dividing by zero.
   *
   * Counterpart to Solidity's \`%\` operator. This function uses a \`revert\`
   * opcode (which leaves remaining gas untouched) while Solidity uses an
   * invalid opcode to revert (consuming all remaining gas).
   *
   * Requirements:
   * - The divisor cannot be zero.
   */
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, 'SafeMath: modulo by zero');
  }

  /**
   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),
   * Reverts with custom message when dividing by zero.
   *
   * Counterpart to Solidity's \`%\` operator. This function uses a \`revert\`
   * opcode (which leaves remaining gas untouched) while Solidity uses an
   * invalid opcode to revert (consuming all remaining gas).
   *
   * Requirements:
   * - The divisor cannot be zero.
   */
  function mod(
    uint256 a,
    uint256 b,
    string memory errorMessage
  ) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
}

interface IVotingStrategy {
  function getVotingPowerAt(address user, uint256 blockNumber) external view returns (uint256);
}

interface IProposalValidator {
  /**
   * @dev Called to validate a proposal (e.g when creating new proposal in Governance)
   * @param governance Governance Contract
   * @param user Address of the proposal creator
   * @param blockNumber Block Number against which to make the test (e.g proposal creation block -1).
   * @return boolean, true if can be created
   **/
  function validateCreatorOfProposal(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) external view returns (bool);

  /**
   * @dev Called to validate the cancellation of a proposal
   * @param governance Governance Contract
   * @param user Address of the proposal creator
   * @param blockNumber Block Number against which to make the test (e.g proposal creation block -1).
   * @return boolean, true if can be cancelled
   **/
  function validateProposalCancellation(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) external view returns (bool);

  /**
   * @dev Returns whether a user has enough Proposition Power to make a proposal.
   * @param governance Governance Contract
   * @param user Address of the user to be challenged.
   * @param blockNumber Block Number against which to make the challenge.
   * @return true if user has enough power
   **/
  function isPropositionPowerEnough(
    IAaveGovernanceV2 governance,
    address user,
    uint256 blockNumber
  ) external view returns (bool);

  /**
   * @dev Returns the minimum Proposition Power needed to create a proposition.
   * @param governance Governance Contract
   * @param blockNumber Blocknumber at which to evaluate
   * @return minimum Proposition Power needed
   **/
  function getMinimumPropositionPowerNeeded(IAaveGovernanceV2 governance, uint256 blockNumber)
    external
    view
    returns (uint256);

  /**
   * @dev Returns whether a proposal passed or not
   * @param governance Governance Contract
   * @param proposalId Id of the proposal to set
   * @return true if proposal passed
   **/
  function isProposalPassed(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool);

  /**
   * @dev Check whether a proposal has reached quorum, ie has enough FOR-voting-power
   * Here quorum is not to understand as number of votes reached, but number of for-votes reached
   * @param governance Governance Contract
   * @param proposalId Id of the proposal to verify
   * @return voting power needed for a proposal to pass
   **/
  function isQuorumValid(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool);

  /**
   * @dev Check whether a proposal has enough extra FOR-votes than AGAINST-votes
   * FOR VOTES - AGAINST VOTES > VOTE_DIFFERENTIAL * voting supply
   * @param governance Governance Contract
   * @param proposalId Id of the proposal to verify
   * @return true if enough For-Votes
   **/
  function isVoteDifferentialValid(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool);

  /**
   * @dev Calculates the minimum amount of Voting Power needed for a proposal to Pass
   * @param votingSupply Total number of oustanding voting tokens
   * @return voting power needed for a proposal to pass
   **/
  function getMinimumVotingPowerNeeded(uint256 votingSupply) external view returns (uint256);

  /**
   * @dev Get proposition threshold constant value
   * @return the proposition threshold value (100 <=> 1%)
   **/
  function PROPOSITION_THRESHOLD() external view returns (uint256);

  /**
   * @dev Get voting duration constant value
   * @return the voting duration value in seconds
   **/
  function VOTING_DURATION() external view returns (uint256);

  /**
   * @dev Get the vote differential threshold constant value
   * to compare with % of for votes/total supply - % of against votes/total supply
   * @return the vote differential threshold value (100 <=> 1%)
   **/
  function VOTE_DIFFERENTIAL() external view returns (uint256);

  /**
   * @dev Get quorum threshold constant value
   * to compare with % of for votes/total supply
   * @return the quorum threshold value (100 <=> 1%)
   **/
  function MINIMUM_QUORUM() external view returns (uint256);

  /**
   * @dev precision helper: 100% = 10000
   * @return one hundred percents with our chosen precision
   **/
  function ONE_HUNDRED_WITH_PRECISION() external view returns (uint256);
}

interface IGovernanceStrategy {
  /**
   * @dev Returns the Proposition Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Proposition Power
   * @return Power number
   **/
  function getPropositionPowerAt(address user, uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the total supply of Outstanding Proposition Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalPropositionSupplyAt(uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the total supply of Outstanding Voting Tokens
   * @param blockNumber Blocknumber at which to evaluate
   * @return total supply at blockNumber
   **/
  function getTotalVotingSupplyAt(uint256 blockNumber) external view returns (uint256);

  /**
   * @dev Returns the Vote Power of a user at a specific block number.
   * @param user Address of the user.
   * @param blockNumber Blocknumber at which to fetch Vote Power
   * @return Vote number
   **/
  function getVotingPowerAt(address user, uint256 blockNumber) external view returns (uint256);
}

interface IExecutorWithTimelock {
  /**
   * @dev emitted when a new pending admin is set
   * @param newPendingAdmin address of the new pending admin
   **/
  event NewPendingAdmin(address newPendingAdmin);

  /**
   * @dev emitted when a new admin is set
   * @param newAdmin address of the new admin
   **/
  event NewAdmin(address newAdmin);

  /**
   * @dev emitted when a new delay (between queueing and execution) is set
   * @param delay new delay
   **/
  event NewDelay(uint256 delay);

  /**
   * @dev emitted when a new (trans)action is Queued.
   * @param actionHash hash of the action
   * @param target address of the targeted contract
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  event QueuedAction(
    bytes32 actionHash,
    address indexed target,
    uint256 value,
    string signature,
    bytes data,
    uint256 executionTime,
    bool withDelegatecall
  );

  /**
   * @dev emitted when an action is Cancelled
   * @param actionHash hash of the action
   * @param target address of the targeted contract
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  event CancelledAction(
    bytes32 actionHash,
    address indexed target,
    uint256 value,
    string signature,
    bytes data,
    uint256 executionTime,
    bool withDelegatecall
  );

  /**
   * @dev emitted when an action is Cancelled
   * @param actionHash hash of the action
   * @param target address of the targeted contract
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   * @param resultData the actual callData used on the target
   **/
  event ExecutedAction(
    bytes32 actionHash,
    address indexed target,
    uint256 value,
    string signature,
    bytes data,
    uint256 executionTime,
    bool withDelegatecall,
    bytes resultData
  );

  /**
   * @dev Getter of the current admin address (should be governance)
   * @return The address of the current admin
   **/
  function getAdmin() external view returns (address);

  /**
   * @dev Getter of the current pending admin address
   * @return The address of the pending admin
   **/
  function getPendingAdmin() external view returns (address);

  /**
   * @dev Getter of the delay between queuing and execution
   * @return The delay in seconds
   **/
  function getDelay() external view returns (uint256);

  /**
   * @dev Returns whether an action (via actionHash) is queued
   * @param actionHash hash of the action to be checked
   * keccak256(abi.encode(target, value, signature, data, executionTime, withDelegatecall))
   * @return true if underlying action of actionHash is queued
   **/
  function isActionQueued(bytes32 actionHash) external view returns (bool);

  /**
   * @dev Checks whether a proposal is over its grace period
   * @param governance Governance contract
   * @param proposalId Id of the proposal against which to test
   * @return true of proposal is over grace period
   **/
  function isProposalOverGracePeriod(IAaveGovernanceV2 governance, uint256 proposalId)
    external
    view
    returns (bool);

  /**
   * @dev Getter of grace period constant
   * @return grace period in seconds
   **/
  function GRACE_PERIOD() external view returns (uint256);

  /**
   * @dev Getter of minimum delay constant
   * @return minimum delay in seconds
   **/
  function MINIMUM_DELAY() external view returns (uint256);

  /**
   * @dev Getter of maximum delay constant
   * @return maximum delay in seconds
   **/
  function MAXIMUM_DELAY() external view returns (uint256);

  /**
   * @dev Function, called by Governance, that queue a transaction, returns action hash
   * @param target smart contract target
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  function queueTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external returns (bytes32);

  /**
   * @dev Function, called by Governance, that cancels a transaction, returns the callData executed
   * @param target smart contract target
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  function executeTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external payable returns (bytes memory);

  /**
   * @dev Function, called by Governance, that cancels a transaction, returns action hash
   * @param target smart contract target
   * @param value wei value of the transaction
   * @param signature function signature of the transaction
   * @param data function arguments of the transaction or callData if signature empty
   * @param executionTime time at which to execute the transaction
   * @param withDelegatecall boolean, true = transaction delegatecalls the target, else calls the target
   **/
  function cancelTransaction(
    address target,
    uint256 value,
    string memory signature,
    bytes memory data,
    uint256 executionTime,
    bool withDelegatecall
  ) external returns (bytes32);
}

interface IAaveGovernanceV2 {
  enum ProposalState {Pending, Canceled, Active, Failed, Succeeded, Queued, Expired, Executed}

  struct Vote {
    bool support;
    uint248 votingPower;
  }

  struct Proposal {
    uint256 id;
    address creator;
    IExecutorWithTimelock executor;
    address[] targets;
    uint256[] values;
    string[] signatures;
    bytes[] calldatas;
    bool[] withDelegatecalls;
    uint256 startBlock;
    uint256 endBlock;
    uint256 executionTime;
    uint256 forVotes;
    uint256 againstVotes;
    bool executed;
    bool canceled;
    address strategy;
    bytes32 ipfsHash;
    mapping(address => Vote) votes;
  }

  struct ProposalWithoutVotes {
    uint256 id;
    address creator;
    IExecutorWithTimelock executor;
    address[] targets;
    uint256[] values;
    string[] signatures;
    bytes[] calldatas;
    bool[] withDelegatecalls;
    uint256 startBlock;
    uint256 endBlock;
    uint256 executionTime;
    uint256 forVotes;
    uint256 againstVotes;
    bool executed;
    bool canceled;
    address strategy;
    bytes32 ipfsHash;
  }

  /**
   * @dev emitted when a new proposal is created
   * @param id Id of the proposal
   * @param creator address of the creator
   * @param executor The ExecutorWithTimelock contract that will execute the proposal
   * @param targets list of contracts called by proposal's associated transactions
   * @param values list of value in wei for each propoposal's associated transaction
   * @param signatures list of function signatures (can be empty) to be used when created the callData
   * @param calldatas list of calldatas: if associated signature empty, calldata ready, else calldata is arguments
   * @param withDelegatecalls boolean, true = transaction delegatecalls the taget, else calls the target
   * @param startBlock block number when vote starts
   * @param endBlock block number when vote ends
   * @param strategy address of the governanceStrategy contract
   * @param ipfsHash IPFS hash of the proposal
   **/
  event ProposalCreated(
    uint256 id,
    address indexed creator,
    IExecutorWithTimelock indexed executor,
    address[] targets,
    uint256[] values,
    string[] signatures,
    bytes[] calldatas,
    bool[] withDelegatecalls,
    uint256 startBlock,
    uint256 endBlock,
    address strategy,
    bytes32 ipfsHash
  );

  /**
   * @dev emitted when a proposal is canceled
   * @param id Id of the proposal
   **/
  event ProposalCanceled(uint256 id);

  /**
   * @dev emitted when a proposal is queued
   * @param id Id of the proposal
   * @param executionTime time when proposal underlying transactions can be executed
   * @param initiatorQueueing address of the initiator of the queuing transaction
   **/
  event ProposalQueued(uint256 id, uint256 executionTime, address indexed initiatorQueueing);
  /**
   * @dev emitted when a proposal is executed
   * @param id Id of the proposal
   * @param initiatorExecution address of the initiator of the execution transaction
   **/
  event ProposalExecuted(uint256 id, address indexed initiatorExecution);
  /**
   * @dev emitted when a vote is registered
   * @param id Id of the proposal
   * @param voter address of the voter
   * @param support boolean, true = vote for, false = vote against
   * @param votingPower Power of the voter/vote
   **/
  event VoteEmitted(uint256 id, address indexed voter, bool support, uint256 votingPower);

  event GovernanceStrategyChanged(address indexed newStrategy, address indexed initiatorChange);

  event VotingDelayChanged(uint256 newVotingDelay, address indexed initiatorChange);

  event ExecutorAuthorized(address executor);

  event ExecutorUnauthorized(address executor);

  /**
   * @dev Creates a Proposal (needs Proposition Power of creator > Threshold)
   * @param executor The ExecutorWithTimelock contract that will execute the proposal
   * @param targets list of contracts called by proposal's associated transactions
   * @param values list of value in wei for each propoposal's associated transaction
   * @param signatures list of function signatures (can be empty) to be used when created the callData
   * @param calldatas list of calldatas: if associated signature empty, calldata ready, else calldata is arguments
   * @param withDelegatecalls if true, transaction delegatecalls the taget, else calls the target
   * @param ipfsHash IPFS hash of the proposal
   **/
  function create(
    IExecutorWithTimelock executor,
    address[] memory targets,
    uint256[] memory values,
    string[] memory signatures,
    bytes[] memory calldatas,
    bool[] memory withDelegatecalls,
    bytes32 ipfsHash
  ) external returns (uint256);

  /**
   * @dev Cancels a Proposal,
   * either at anytime by guardian
   * or when proposal is Pending/Active and threshold no longer reached
   * @param proposalId id of the proposal
   **/
  function cancel(uint256 proposalId) external;

  /**
   * @dev Queue the proposal (If Proposal Succeeded)
   * @param proposalId id of the proposal to queue
   **/
  function queue(uint256 proposalId) external;

  /**
   * @dev Execute the proposal (If Proposal Queued)
   * @param proposalId id of the proposal to execute
   **/
  function execute(uint256 proposalId) external payable;

  /**
   * @dev Function allowing msg.sender to vote for/against a proposal
   * @param proposalId id of the proposal
   * @param support boolean, true = vote for, false = vote against
   **/
  function submitVote(uint256 proposalId, bool support) external;

  /**
   * @dev Function to register the vote of user that has voted offchain via signature
   * @param proposalId id of the proposal
   * @param support boolean, true = vote for, false = vote against
   * @param v v part of the voter signature
   * @param r r part of the voter signature
   * @param s s part of the voter signature
   **/
  function submitVoteBySignature(
    uint256 proposalId,
    bool support,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external;

  /**
   * @dev Set new GovernanceStrategy
   * Note: owner should be a timelocked executor, so needs to make a proposal
   * @param governanceStrategy new Address of the GovernanceStrategy contract
   **/
  function setGovernanceStrategy(address governanceStrategy) external;

  /**
   * @dev Set new Voting Delay (delay before a newly created proposal can be voted on)
   * Note: owner should be a timelocked executor, so needs to make a proposal
   * @param votingDelay new voting delay in seconds
   **/
  function setVotingDelay(uint256 votingDelay) external;

  /**
   * @dev Add new addresses to the list of authorized executors
   * @param executors list of new addresses to be authorized executors
   **/
  function authorizeExecutors(address[] memory executors) external;

  /**
   * @dev Remove addresses to the list of authorized executors
   * @param executors list of addresses to be removed as authorized executors
   **/
  function unauthorizeExecutors(address[] memory executors) external;

  /**
   * @dev Let the guardian abdicate from its priviledged rights
   **/
  function __abdicate() external;

  /**
   * @dev Getter of the current GovernanceStrategy address
   * @return The address of the current GovernanceStrategy contracts
   **/
  function getGovernanceStrategy() external view returns (address);

  /**
   * @dev Getter of the current Voting Delay (delay before a created proposal can be voted on)
   * Different from the voting duration
   * @return The voting delay in seconds
   **/
  function getVotingDelay() external view returns (uint256);

  /**
   * @dev Returns whether an address is an authorized executor
   * @param executor address to evaluate as authorized executor
   * @return true if authorized
   **/
  function isExecutorAuthorized(address executor) external view returns (bool);

  /**
   * @dev Getter the address of the guardian, that can mainly cancel proposals
   * @return The address of the guardian
   **/
  function getGuardian() external view returns (address);

  /**
   * @dev Getter of the proposal count (the current number of proposals ever created)
   * @return the proposal count
   **/
  function getProposalsCount() external view returns (uint256);

  /**
   * @dev Getter of a proposal by id
   * @param proposalId id of the proposal to get
   * @return the proposal as ProposalWithoutVotes memory object
   **/
  function getProposalById(uint256 proposalId) external view returns (ProposalWithoutVotes memory);

  /**
   * @dev Getter of the Vote of a voter about a proposal
   * Note: Vote is a struct: ({bool support, uint248 votingPower})
   * @param proposalId id of the proposal
   * @param voter address of the voter
   * @return The associated Vote memory object
   **/
  function getVoteOnProposal(uint256 proposalId, address voter) external view returns (Vote memory);

  /**
   * @dev Get the current state of a proposal
   * @param proposalId id of the proposal
   * @return The current state if the proposal
   **/
  function getProposalState(uint256 proposalId) external view returns (ProposalState);
}

/**
 * @title Governance V2 contract
 * @dev Main point of interaction with Aave protocol's governance
 * - Create a Proposal
 * - Cancel a Proposal
 * - Queue a Proposal
 * - Execute a Proposal
 * - Submit Vote to a Proposal
 * Proposal States : Pending => Active => Succeeded(/Failed) => Queued => Executed(/Expired)
 *                   The transition to \\"Canceled\\" can appear in multiple states
 * @author Aave
 **/
contract AaveGovernanceV2 is Ownable, IAaveGovernanceV2 {
  using SafeMath for uint256;

  address private _governanceStrategy;
  uint256 private _votingDelay;

  uint256 private _proposalsCount;
  mapping(uint256 => Proposal) private _proposals;
  mapping(address => bool) private _authorizedExecutors;

  address private _guardian;

  bytes32 public constant DOMAIN_TYPEHASH = keccak256(
    'EIP712Domain(string name,uint256 chainId,address verifyingContract)'
  );
  bytes32 public constant VOTE_EMITTED_TYPEHASH = keccak256('VoteEmitted(uint256 id,bool support)');
  string public constant NAME = 'Aave Governance v2';

  modifier onlyGuardian() {
    require(msg.sender == _guardian, 'ONLY_BY_GUARDIAN');
    _;
  }

  constructor(
    address governanceStrategy,
    uint256 votingDelay,
    address guardian,
    address[] memory executors
  ) {
    _setGovernanceStrategy(governanceStrategy);
    _setVotingDelay(votingDelay);
    _guardian = guardian;

    authorizeExecutors(executors);
  }

  struct CreateVars {
    uint256 startBlock;
    uint256 endBlock;
    uint256 previousProposalsCount;
  }

  /**
   * @dev Creates a Proposal (needs to be validated by the Proposal Validator)
   * @param executor The ExecutorWithTimelock contract that will execute the proposal
   * @param targets list of contracts called by proposal's associated transactions
   * @param values list of value in wei for each propoposal's associated transaction
   * @param signatures list of function signatures (can be empty) to be used when created the callData
   * @param calldatas list of calldatas: if associated signature empty, calldata ready, else calldata is arguments
   * @param withDelegatecalls boolean, true = transaction delegatecalls the taget, else calls the target
   * @param ipfsHash IPFS hash of the proposal
   **/
  function create(
    IExecutorWithTimelock executor,
    address[] memory targets,
    uint256[] memory values,
    string[] memory signatures,
    bytes[] memory calldatas,
    bool[] memory withDelegatecalls,
    bytes32 ipfsHash
  ) external override returns (uint256) {
    require(targets.length != 0, 'INVALID_EMPTY_TARGETS');
    require(
      targets.length == values.length &&
        targets.length == signatures.length &&
        targets.length == calldatas.length &&
        targets.length == withDelegatecalls.length,
      'INCONSISTENT_PARAMS_LENGTH'
    );

    require(isExecutorAuthorized(address(executor)), 'EXECUTOR_NOT_AUTHORIZED');

    require(
      IProposalValidator(address(executor)).validateCreatorOfProposal(
        this,
        msg.sender,
        block.number - 1
      ),
      'PROPOSITION_CREATION_INVALID'
    );

    CreateVars memory vars;

    vars.startBlock = block.number.add(_votingDelay);
    vars.endBlock = vars.startBlock.add(IProposalValidator(address(executor)).VOTING_DURATION());

    vars.previousProposalsCount = _proposalsCount;

    Proposal storage newProposal = _proposals[vars.previousProposalsCount];
    newProposal.id = vars.previousProposalsCount;
    newProposal.creator = msg.sender;
    newProposal.executor = executor;
    newProposal.targets = targets;
    newProposal.values = values;
    newProposal.signatures = signatures;
    newProposal.calldatas = calldatas;
    newProposal.withDelegatecalls = withDelegatecalls;
    newProposal.startBlock = vars.startBlock;
    newProposal.endBlock = vars.endBlock;
    newProposal.strategy = _governanceStrategy;
    newProposal.ipfsHash = ipfsHash;
    _proposalsCount++;

    emit ProposalCreated(
      vars.previousProposalsCount,
      msg.sender,
      executor,
      targets,
      values,
      signatures,
      calldatas,
      withDelegatecalls,
      vars.startBlock,
      vars.endBlock,
      _governanceStrategy,
      ipfsHash
    );

    return newProposal.id;
  }

  /**
   * @dev Cancels a Proposal.
   * - Callable by the _guardian with relaxed conditions, or by anybody if the conditions of
   *   cancellation on the executor are fulfilled
   * @param proposalId id of the proposal
   **/
  function cancel(uint256 proposalId) external override {
    ProposalState state = getProposalState(proposalId);
    require(
      state != ProposalState.Executed &&
        state != ProposalState.Canceled &&
        state != ProposalState.Expired,
      'ONLY_BEFORE_EXECUTED'
    );

    Proposal storage proposal = _proposals[proposalId];
    require(
      msg.sender == _guardian ||
        IProposalValidator(address(proposal.executor)).validateProposalCancellation(
          this,
          proposal.creator,
          block.number - 1
        ),
      'PROPOSITION_CANCELLATION_INVALID'
    );
    proposal.canceled = true;
    for (uint256 i = 0; i < proposal.targets.length; i++) {
      proposal.executor.cancelTransaction(
        proposal.targets[i],
        proposal.values[i],
        proposal.signatures[i],
        proposal.calldatas[i],
        proposal.executionTime,
        proposal.withDelegatecalls[i]
      );
    }

    emit ProposalCanceled(proposalId);
  }

  /**
   * @dev Queue the proposal (If Proposal Succeeded)
   * @param proposalId id of the proposal to queue
   **/
  function queue(uint256 proposalId) external override {
    require(getProposalState(proposalId) == ProposalState.Succeeded, 'INVALID_STATE_FOR_QUEUE');
    Proposal storage proposal = _proposals[proposalId];
    uint256 executionTime = block.timestamp.add(proposal.executor.getDelay());
    for (uint256 i = 0; i < proposal.targets.length; i++) {
      _queueOrRevert(
        proposal.executor,
        proposal.targets[i],
        proposal.values[i],
        proposal.signatures[i],
        proposal.calldatas[i],
        executionTime,
        proposal.withDelegatecalls[i]
      );
    }
    proposal.executionTime = executionTime;

    emit ProposalQueued(proposalId, executionTime, msg.sender);
  }

  /**
   * @dev Execute the proposal (If Proposal Queued)
   * @param proposalId id of the proposal to execute
   **/
  function execute(uint256 proposalId) external payable override {
    require(getProposalState(proposalId) == ProposalState.Queued, 'ONLY_QUEUED_PROPOSALS');
    Proposal storage proposal = _proposals[proposalId];
    proposal.executed = true;
    for (uint256 i = 0; i < proposal.targets.length; i++) {
      proposal.executor.executeTransaction{value: proposal.values[i]}(
        proposal.targets[i],
        proposal.values[i],
        proposal.signatures[i],
        proposal.calldatas[i],
        proposal.executionTime,
        proposal.withDelegatecalls[i]
      );
    }
    emit ProposalExecuted(proposalId, msg.sender);
  }

  /**
   * @dev Function allowing msg.sender to vote for/against a proposal
   * @param proposalId id of the proposal
   * @param support boolean, true = vote for, false = vote against
   **/
  function submitVote(uint256 proposalId, bool support) external override {
    return _submitVote(msg.sender, proposalId, support);
  }

  /**
   * @dev Function to register the vote of user that has voted offchain via signature
   * @param proposalId id of the proposal
   * @param support boolean, true = vote for, false = vote against
   * @param v v part of the voter signature
   * @param r r part of the voter signature
   * @param s s part of the voter signature
   **/
  function submitVoteBySignature(
    uint256 proposalId,
    bool support,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external override {
    bytes32 digest = keccak256(
      abi.encodePacked(
        '\\\\x19\\\\x01',
        keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(NAME)), getChainId(), address(this))),
        keccak256(abi.encode(VOTE_EMITTED_TYPEHASH, proposalId, support))
      )
    );
    address signer = ecrecover(digest, v, r, s);
    require(signer != address(0), 'INVALID_SIGNATURE');
    return _submitVote(signer, proposalId, support);
  }

  /**
   * @dev Set new GovernanceStrategy
   * Note: owner should be a timelocked executor, so needs to make a proposal
   * @param governanceStrategy new Address of the GovernanceStrategy contract
   **/
  function setGovernanceStrategy(address governanceStrategy) external override onlyOwner {
    _setGovernanceStrategy(governanceStrategy);
  }

  /**
   * @dev Set new Voting Delay (delay before a newly created proposal can be voted on)
   * Note: owner should be a timelocked executor, so needs to make a proposal
   * @param votingDelay new voting delay in terms of blocks
   **/
  function setVotingDelay(uint256 votingDelay) external override onlyOwner {
    _setVotingDelay(votingDelay);
  }

  /**
   * @dev Add new addresses to the list of authorized executors
   * @param executors list of new addresses to be authorized executors
   **/
  function authorizeExecutors(address[] memory executors) public override onlyOwner {
    for (uint256 i = 0; i < executors.length; i++) {
      _authorizeExecutor(executors[i]);
    }
  }

  /**
   * @dev Remove addresses to the list of authorized executors
   * @param executors list of addresses to be removed as authorized executors
   **/
  function unauthorizeExecutors(address[] memory executors) public override onlyOwner {
    for (uint256 i = 0; i < executors.length; i++) {
      _unauthorizeExecutor(executors[i]);
    }
  }

  /**
   * @dev Let the guardian abdicate from its priviledged rights
   **/
  function __abdicate() external override onlyGuardian {
    _guardian = address(0);
  }

  /**
   * @dev Getter of the current GovernanceStrategy address
   * @return The address of the current GovernanceStrategy contracts
   **/
  function getGovernanceStrategy() external view override returns (address) {
    return _governanceStrategy;
  }

  /**
   * @dev Getter of the current Voting Delay (delay before a created proposal can be voted on)
   * Different from the voting duration
   * @return The voting delay in number of blocks
   **/
  function getVotingDelay() external view override returns (uint256) {
    return _votingDelay;
  }

  /**
   * @dev Returns whether an address is an authorized executor
   * @param executor address to evaluate as authorized executor
   * @return true if authorized
   **/
  function isExecutorAuthorized(address executor) public view override returns (bool) {
    return _authorizedExecutors[executor];
  }

  /**
   * @dev Getter the address of the guardian, that can mainly cancel proposals
   * @return The address of the guardian
   **/
  function getGuardian() external view override returns (address) {
    return _guardian;
  }

  /**
   * @dev Getter of the proposal count (the current number of proposals ever created)
   * @return the proposal count
   **/
  function getProposalsCount() external view override returns (uint256) {
    return _proposalsCount;
  }

  /**
   * @dev Getter of a proposal by id
   * @param proposalId id of the proposal to get
   * @return the proposal as ProposalWithoutVotes memory object
   **/
  function getProposalById(uint256 proposalId)
    external
    view
    override
    returns (ProposalWithoutVotes memory)
  {
    Proposal storage proposal = _proposals[proposalId];
    ProposalWithoutVotes memory proposalWithoutVotes = ProposalWithoutVotes({
      id: proposal.id,
      creator: proposal.creator,
      executor: proposal.executor,
      targets: proposal.targets,
      values: proposal.values,
      signatures: proposal.signatures,
      calldatas: proposal.calldatas,
      withDelegatecalls: proposal.withDelegatecalls,
      startBlock: proposal.startBlock,
      endBlock: proposal.endBlock,
      executionTime: proposal.executionTime,
      forVotes: proposal.forVotes,
      againstVotes: proposal.againstVotes,
      executed: proposal.executed,
      canceled: proposal.canceled,
      strategy: proposal.strategy,
      ipfsHash: proposal.ipfsHash
    });

    return proposalWithoutVotes;
  }

  /**
   * @dev Getter of the Vote of a voter about a proposal
   * Note: Vote is a struct: ({bool support, uint248 votingPower})
   * @param proposalId id of the proposal
   * @param voter address of the voter
   * @return The associated Vote memory object
   **/
  function getVoteOnProposal(uint256 proposalId, address voter)
    external
    view
    override
    returns (Vote memory)
  {
    return _proposals[proposalId].votes[voter];
  }

  /**
   * @dev Get the current state of a proposal
   * @param proposalId id of the proposal
   * @return The current state if the proposal
   **/
  function getProposalState(uint256 proposalId) public view override returns (ProposalState) {
    require(_proposalsCount >= proposalId, 'INVALID_PROPOSAL_ID');
    Proposal storage proposal = _proposals[proposalId];
    if (proposal.canceled) {
      return ProposalState.Canceled;
    } else if (block.number <= proposal.startBlock) {
      return ProposalState.Pending;
    } else if (block.number <= proposal.endBlock) {
      return ProposalState.Active;
    } else if (!IProposalValidator(address(proposal.executor)).isProposalPassed(this, proposalId)) {
      return ProposalState.Failed;
    } else if (proposal.executionTime == 0) {
      return ProposalState.Succeeded;
    } else if (proposal.executed) {
      return ProposalState.Executed;
    } else if (proposal.executor.isProposalOverGracePeriod(this, proposalId)) {
      return ProposalState.Expired;
    } else {
      return ProposalState.Queued;
    }
  }

  function _queueOrRevert(
    IExecutorWithTimelock executor,
    address target,
    uint256 value,
    string memory signature,
    bytes memory callData,
    uint256 executionTime,
    bool withDelegatecall
  ) internal {
    require(
      !executor.isActionQueued(
        keccak256(abi.encode(target, value, signature, callData, executionTime, withDelegatecall))
      ),
      'DUPLICATED_ACTION'
    );
    executor.queueTransaction(target, value, signature, callData, executionTime, withDelegatecall);
  }

  function _submitVote(
    address voter,
    uint256 proposalId,
    bool support
  ) internal {
    require(getProposalState(proposalId) == ProposalState.Active, 'VOTING_CLOSED');
    Proposal storage proposal = _proposals[proposalId];
    Vote storage vote = proposal.votes[voter];

    require(vote.votingPower == 0, 'VOTE_ALREADY_SUBMITTED');

    uint256 votingPower = IVotingStrategy(proposal.strategy).getVotingPowerAt(
      voter,
      proposal.startBlock
    );

    if (support) {
      proposal.forVotes = proposal.forVotes.add(votingPower);
    } else {
      proposal.againstVotes = proposal.againstVotes.add(votingPower);
    }

    vote.support = support;
    vote.votingPower = uint248(votingPower);

    emit VoteEmitted(proposalId, voter, support, votingPower);
  }

  function _setGovernanceStrategy(address governanceStrategy) internal {
    _governanceStrategy = governanceStrategy;

    emit GovernanceStrategyChanged(governanceStrategy, msg.sender);
  }

  function _setVotingDelay(uint256 votingDelay) internal {
    _votingDelay = votingDelay;

    emit VotingDelayChanged(votingDelay, msg.sender);
  }

  function _authorizeExecutor(address executor) internal {
    _authorizedExecutors[executor] = true;
    emit ExecutorAuthorized(executor);
  }

  function _unauthorizeExecutor(address executor) internal {
    _authorizedExecutors[executor] = false;
    emit ExecutorUnauthorized(executor);
  }
}",
          },
        ],
        "main_contract": 0,
        "raw_abi": null,
        "states": [
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false,
            "name": "_guardian",
            "offset": 0,
            "simple_type": {
              "type": "address",
            },
            "storage_location": "storage",
            "type": "address",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "name": "_owner",
            "offset": 0,
            "simple_type": {
              "type": "address",
            },
            "storage_location": "storage",
            "type": "address",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "name": "_governanceStrategy",
            "offset": 0,
            "simple_type": {
              "type": "address",
            },
            "storage_location": "storage",
            "type": "address",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "name": "_votingDelay",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false,
            "name": "_proposalsCount",
            "offset": 0,
            "simple_type": {
              "type": "uint",
            },
            "storage_location": "storage",
            "type": "uint256",
          },
          {
            "components": [
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d90",
                "indexed": false,
                "name": "id",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d91",
                "indexed": false,
                "name": "creator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "memory",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d92",
                "indexed": false,
                "name": "executor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "memory",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d93",
                "indexed": false,
                "name": "targets",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "address[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d94",
                "indexed": false,
                "name": "values",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "uint",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "uint256[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d95",
                "indexed": false,
                "name": "signatures",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "string",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "string[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d96",
                "indexed": false,
                "name": "calldatas",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "bytes",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "bytes[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d97",
                "indexed": false,
                "name": "withDelegatecalls",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "bool",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "bool[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d98",
                "indexed": false,
                "name": "startBlock",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d99",
                "indexed": false,
                "name": "endBlock",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9a",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9b",
                "indexed": false,
                "name": "forVotes",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9c",
                "indexed": false,
                "name": "againstVotes",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "indexed": false,
                "name": "executed",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "memory",
                "type": "bool",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "indexed": false,
                "name": "canceled",
                "offset": 8,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "memory",
                "type": "bool",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "indexed": false,
                "name": "strategy",
                "offset": 16,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "memory",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9e",
                "indexed": false,
                "name": "ipfsHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "memory",
                "type": "bytes32",
              },
              {
                "components": [
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "support",
                    "offset": 0,
                    "simple_type": {
                      "type": "bool",
                    },
                    "storage_location": "memory",
                    "type": "bool",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "votingPower",
                    "offset": 8,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "memory",
                    "type": "uint248",
                  },
                ],
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9f",
                "indexed": false,
                "name": "votes",
                "offset": 0,
                "storage_location": "memory",
                "type": "mapping (address => tuple)",
              },
            ],
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "name": "_proposals",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (uint256 => tuple)",
          },
          {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false,
            "name": "_authorizedExecutors",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => bool)",
          },
        ],
      },
      "ens_domain": null,
      "evm_version": "",
      "export": false,
      "id": "eth:1:0xec568fffba86c094cf06b22134b23074dfe2252c",
      "in_project": false,
      "language": "solidity",
      "libraries": null,
      "network_id": "1",
      "number_of_files": 1,
      "number_of_watches": null,
      "optimization_runs": 200,
      "optimizations_used": true,
      "public": true,
      "standard": "custom_proxy",
      "standards": [
        "custom_proxy",
      ],
      "type": "contract",
      "verification_date": null,
      "verified_by": "etherscan",
    },
  ],
  "generated_access_list": [
    {
      "address": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
      "storage_keys": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
      ],
    },
    {
      "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
      "storage_keys": [
        "0x6cb566158d39ce882c18d59584646aeb55a2f9585b27af1d635f5ea325cfbeaf",
        "0x0000000000000000000000000000000000000000000000000000000000000006",
        "0x0000000000000000000000000000000000000000000000000000000000000005",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
      ],
    },
    {
      "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
      "storage_keys": [
        "0x0000000000000000000000000000000000000000000000000000000000000003",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d92",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d93",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d91",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d95",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d99",
        "0x35829a65d81a27d477338ea5d3be75d37fc751126832f3c6934aed3e7d383898",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9b",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9c",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9a",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d94",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d90",
        "0x36d06d074f7ef6830376735502beb414a913873e2b06e0233956464f73b51d74",
        "0xd64c9c905dc50a3c97603dfe8ef94e79a95886f7d5795cbd91849f1427daa606",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
        "0xd595e902ae271a069ee18d698e4de818249e7ae6c6fc2d246bf134d77cec43de",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9e",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d96",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d98",
        "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d97",
        "0xac4e1e17b408029850ed991c06c47cebdd5973fe76d4ab77dde30cc20a79566a",
      ],
    },
    {
      "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
    },
    {
      "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
    },
    {
      "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      "storage_keys": [
        "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
        "0x0000000000000000000000000000000000000000000000000000000000000002",
        "0x0000000000000000000000000000000000000000000000000000000000000005",
        "0x6b10b271c83e13bfb156269bdf3ef636613d1542d8235a1f5293a89c8f8a5431",
        "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
      ],
    },
    {
      "address": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
    },
    {
      "address": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
    },
    {
      "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
      "storage_keys": [
        "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
        "0xcf23cc7089fed28926e3cca2bfa1d6811ea4ce7e8c64119a740cf101b353080f",
        "0x000000000000000000000000000000000000000000000000000000000000004f",
        "0x0000000000000000000000000000000000000000000000000000000000000009",
        "0xb476eedba4f8c885c12cb813443bb78e21239c276d1586e24afd457c6ea531b7",
        "0x0000000000000000000000000000000000000000000000000000000000000050",
        "0xae7f735405eae778c062be95d86a15d8e443f03071caf36c523900c28f6324ad",
        "0x2d3d1c9680bbdec853995b6859c48c938bd9c76a8e98a938491cbf18b6665bed",
        "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
        "0x0000000000000000000000000000000000000000000000000000000000000051",
      ],
    },
    {
      "address": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
    },
  ],
  "simulation": {
    "access_list": null,
    "addresses": [
      "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
      "0xec568fffba86c094cf06b22134b23074dfe2252c",
      "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
      "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
      "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      "0x96f68837877fd0414b55050c9e794aecdbcfca59",
      "0xe427fcbd54169136391cfedf68e96abb13da87a0",
      "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
      "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
      "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
    ],
    "block_header": {
      "baseFeePerGas": "0x844fffb25",
      "difficulty": "0x0",
      "extraData": "0x496c6c756d696e61746520446d6f63726174697a6520447374726962757465",
      "gasLimit": "0x1c9c380",
      "gasUsed": "0xead8f1",
      "hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "logsBloom": "0x00b51b054986511282801661a59812652e143e4821100b0828eba0180d06f190658ea2a4823b6d20410410645f10d3306287a9f5a940a0252e149c831168bd0089235393441404686b245c6ac25d6a7bcaa1860780e40be42e477e498c32852b56acee001b0e5407720701c28071591c4410542460b84c0d91c22356413fe08122a3b1f2518518a8f0ed8820739a430670161ea1218421981d0f016c95b5c4daae48014382807b60f92b42d4080b8d025412dc34a0e6d30ecc476d20a616120859e424e24a21ca601b0d208c9545b054ec46220016ba5074e24030831e76bca90e387b08d0001002806517140001ca679e7a9414de1849541d74b918846615a3",
      "miner": "0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5",
      "mixHash": "0xfafe001984b3c18e31e7b3fde3bdb76a6da378df8c486aa1e3c91a68ecd4e559",
      "nonce": "0x0000000000000000",
      "number": "0x1071341",
      "parentHash": "0x49d77dcb92befd7160f4f1a2035d05023df296a639869bd33322aea7afc28094",
      "receiptsRoot": "0x2be525a2ef5e8ca0ae301332ac282b35778e21cd7ab18c4a2b27d58e372816d4",
      "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      "size": "0x0",
      "stateRoot": "0xcb6b8b4d2f8294ba50f90f6948ea783df2c70f7bac68437cbea02f9555b0fcb6",
      "timestamp": "0x6466a910",
      "totalDifficulty": "0x0",
      "transactions": null,
      "transactionsRoot": "0x45475a911b75f9ec2aa4936b2910b5fadbfa3c8aa1a720aa35d87473350b3268",
      "uncles": null,
    },
    "block_number": 17263718,
    "contract_ids": [
      "eth:1:0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
      "eth:1:0xec568fffba86c094cf06b22134b23074dfe2252c",
      "eth:1:0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
      "eth:1:0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
      "eth:1:0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      "eth:1:0x96f68837877fd0414b55050c9e794aecdbcfca59",
      "eth:1:0xe427fcbd54169136391cfedf68e96abb13da87a0",
      "eth:1:0x4da27a545c0c5b758a6ba100e3a049001de870f5",
      "eth:1:0xaa9faa887bce5182c39f68ac46c43f36723c395b",
      "eth:1:0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
    ],
    "created_at": "2023-05-15T07:32:39.87477574Z",
    "deposit_tx": false,
    "from": "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
    "gas": 30000000,
    "gas_price": "0",
    "gas_used": 4670319,
    "id": "2c0466d7-c193-4dcd-9f92-3d0dd8765c24",
    "input": "0xfe0d94c100000000000000000000000000000000000000000000000000000000000000d6",
    "method": "execute",
    "mint": null,
    "network_id": "1",
    "nonce": 0,
    "owner_id": "bae4aba9-1d01-4156-aab1-ca49e2df1c11",
    "project_id": "964dde8f-011b-47dc-a6ee-e5e2f1ea10f2",
    "queue_origin": "",
    "state_overrides": {
      "0x79426A1c24B2978D90d7A5070a46C65B07bC4299": {
        "storage": {
          "0x6cb566158d39ce882c18d59584646aeb55a2f9585b27af1d635f5ea325cfbeaf": "0x0000000000000000000000000000000000000000000000000000000000000001",
        },
      },
      "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073": {
        "balance": "10000000000000000000",
      },
      "0xEC568fffba86c094cf06b22134B23074DFE2252c": {
        "storage": {
          "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9a": "0x000000000000000000000000000000000000000000000000000000006466a910",
          "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9b": "0x000000000000000000000000000000000000000000027b46536c66c8e3000000",
          "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9c": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d": "0x00000000000000000000b7e383ef9B1E9189Fc0F71fb30af8aa14377429e0000",
        },
      },
    },
    "status": true,
    "system_tx": false,
    "to": "0xEC568fffba86c094cf06b22134B23074DFE2252c",
    "transaction_index": 0,
    "value": "0",
  },
  "transaction": {
    "access_list": null,
    "addresses": [
      "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
      "0xec568fffba86c094cf06b22134b23074dfe2252c",
      "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
      "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
      "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      "0x96f68837877fd0414b55050c9e794aecdbcfca59",
      "0xe427fcbd54169136391cfedf68e96abb13da87a0",
      "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
      "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
      "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
    ],
    "block_hash": "",
    "block_number": 17263718,
    "call_trace": [
      {
        "call_type": "CALL",
        "from": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
        "fromBalance": "0x8ac7230489e80000",
        "gas": 29978796,
        "gas_used": 4653915,
        "input": "0xfe0d94c100000000000000000000000000000000000000000000000000000000000000d6",
        "subtraces": 3,
        "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
        "toBalance": "0x2386f26fc10000",
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0xec568fffba86c094cf06b22134b23074dfe2252c",
        "fromBalance": "0x2386f26fc10000",
        "gas": 29496653,
        "gas_cost": 29496753,
        "gas_in": 29964953,
        "gas_used": 83684,
        "input": "0x06fbb3ab000000000000000000000000ec568fffba86c094cf06b22134b23074dfe2252c00000000000000000000000000000000000000000000000000000000000000d6",
        "outLen": 32,
        "outOff": 128,
        "output": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "subtraces": 4,
        "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "trace_address": [
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 29035155,
        "gas_cost": 29035255,
        "gas_in": 29496130,
        "gas_used": 40469,
        "input": "0x3656de2100000000000000000000000000000000000000000000000000000000000000d6",
        "outOff": 128,
        "output": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000d6000000000000000000000000329c54289ff5d6b7b7dae13592c6b1eda1543ed400000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc42990000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000106193f000000000000000000000000000000000000000000000000000000000107133f000000000000000000000000000000000000000000000000000000006466a910000000000000000000000000000000000000000000027b46536c66c8e3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a
        "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
        "toBalance": "0x2386f26fc10000",
        "trace_address": [
          0,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 28987568,
        "gas_cost": 28990168,
        "gas_in": 29450288,
        "gas_used": 13158,
        "input": "0x7a71f9d7000000000000000000000000000000000000000000000000000000000106193f",
        "outLen": 32,
        "outOff": 2080,
        "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
        "subtraces": 1,
        "to": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
        "trace_address": [
          0,
          1,
        ],
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
        "gas": 28531576,
        "gas_cost": 28531676,
        "gas_in": 28984558,
        "gas_used": 9777,
        "input": "0x981b24d0000000000000000000000000000000000000000000000000000000000106193f",
        "outLen": 32,
        "outOff": 128,
        "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
        "subtraces": 1,
        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        "trace_address": [
          0,
          1,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "DELEGATECALL",
        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        "gas": 28078658,
        "gas_cost": 28081258,
        "gas_in": 28526950,
        "gas_used": 2510,
        "input": "0x981b24d0000000000000000000000000000000000000000000000000000000000106193f",
        "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
        "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
        "trace_address": [
          0,
          1,
          0,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 28971887,
        "gas_cost": 28971987,
        "gas_in": 29431858,
        "gas_used": 8469,
        "input": "0x3656de2100000000000000000000000000000000000000000000000000000000000000d6",
        "outOff": 2112,
        "output": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000d6000000000000000000000000329c54289ff5d6b7b7dae13592c6b1eda1543ed400000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc42990000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000106193f000000000000000000000000000000000000000000000000000000000107133f000000000000000000000000000000000000000000000000000000006466a910000000000000000000000000000000000000000000027b46536c66c8e3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a
        "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
        "toBalance": "0x2386f26fc10000",
        "trace_address": [
          0,
          2,
        ],
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 28958247,
        "gas_cost": 28958347,
        "gas_in": 29418001,
        "gas_used": 2158,
        "input": "0x7a71f9d7000000000000000000000000000000000000000000000000000000000106193f",
        "outLen": 32,
        "outOff": 4064,
        "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
        "subtraces": 1,
        "to": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
        "trace_address": [
          0,
          3,
        ],
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
        "gas": 28505174,
        "gas_cost": 28505274,
        "gas_in": 28957737,
        "gas_used": 1277,
        "input": "0x981b24d0000000000000000000000000000000000000000000000000000000000106193f",
        "outLen": 32,
        "outOff": 128,
        "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
        "subtraces": 1,
        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        "trace_address": [
          0,
          3,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "DELEGATECALL",
        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        "gas": 28059066,
        "gas_cost": 28059166,
        "gas_in": 28504548,
        "gas_used": 510,
        "input": "0x981b24d0000000000000000000000000000000000000000000000000000000000106193f",
        "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
        "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
        "trace_address": [
          0,
          3,
          0,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0xec568fffba86c094cf06b22134b23074dfe2252c",
        "fromBalance": "0x2386f26fc10000",
        "gas": 29413281,
        "gas_cost": 29413381,
        "gas_in": 29880258,
        "gas_used": 14379,
        "input": "0xf670a5f9000000000000000000000000ec568fffba86c094cf06b22134b23074dfe2252c00000000000000000000000000000000000000000000000000000000000000d6",
        "outLen": 32,
        "outOff": 160,
        "output": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "subtraces": 1,
        "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "trace_address": [
          1,
        ],
        "type": "CALL",
      },
      {
        "call_type": "STATICCALL",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 28953091,
        "gas_cost": 28953191,
        "gas_in": 29412763,
        "gas_used": 8469,
        "input": "0x3656de2100000000000000000000000000000000000000000000000000000000000000d6",
        "outOff": 128,
        "output": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000d6000000000000000000000000329c54289ff5d6b7b7dae13592c6b1eda1543ed400000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc42990000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000106193f000000000000000000000000000000000000000000000000000000000107133f000000000000000000000000000000000000000000000000000000006466a910000000000000000000000000000000000000000000027b46536c66c8e3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a
        "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
        "toBalance": "0x2386f26fc10000",
        "trace_address": [
          1,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "CALL",
        "from": "0xec568fffba86c094cf06b22134b23074dfe2252c",
        "fromBalance": "0x2386f26fc10000",
        "gas": 29392748,
        "gas_cost": 29392848,
        "gas_in": 29859399,
        "gas_used": 4532189,
        "input": "0x8902ab65000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000006466a91000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000009657865637574652829000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "outOff": 192,
        "output": "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
        "subtraces": 1,
        "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "trace_address": [
          2,
        ],
        "type": "CALL",
      },
      {
        "call_type": "DELEGATECALL",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 28920615,
        "gas_cost": 28923215,
        "gas_in": 29382272,
        "gas_used": 4513778,
        "input": "0x61461954",
        "outOff": 580,
        "subtraces": 3,
        "to": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
        "trace_address": [
          2,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "CALL",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 28465844,
        "gas_cost": 28465944,
        "gas_in": 28917782,
        "gas_used": 6858,
        "input": "0x8f28397000000000000000000000000086c3ffee349a7cff7ca88c449717b1b133bfb517",
        "outOff": 128,
        "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
        "trace_address": [
          2,
          0,
          0,
        ],
        "type": "CALL",
      },
      {
        "address": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
        "call_type": "CREATE",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 28420895,
        "gas_cost": 33398,
        "gas_in": 28905418,
        "gas_used": 4251163,
        "input": "0x61016060405260006009553480156200001757600080fd5b5060405162005687380380620056878339810160408190526200003a916200014c565b858585858585858585858585816001600160801b0382166200005d8142620001f5565b608052506001600160a01b0390811660a05295861660c052505091831660e05261010052166101205260056009819055506000866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f5919062000211565b60ff1690506200010781600a6200033a565b61014052506200011e9550506200012e9350505050565b6009555062000348945050505050565b600590565b6001600160a01b03811681146200014957600080fd5b50565b60008060008060008060c087890312156200016657600080fd5b8651620001738162000133565b6020880151909650620001868162000133565b604088015160608901519196509450620001a08162000133565b6080880151909350620001b38162000133565b60a08801519092506001600160801b0381168114620001d157600080fd5b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b808201808211156200020b576200020b620001df565b92915050565b6000602082840312156200022457600080fd5b815160ff811681146200023657600080fd5b9392505050565b600181815b808511156200027e578160001904821115620002625762000262620001df565b808516156200027057918102915b93841c939080029062000242565b509250929050565b60008262000297575060016200020b565b81620002a6575060006200020b565b8160018114620002bf5760028114620002ca57620002ea565b60019150506200020b565b60ff841115620002de57620002de620001df565b50506001821b6200020b565b5060208310610133831016604e8410600b84101617156200030f575081810a6200020b565b6200031b83836200023d565b8060001904821115620003325762000332620001df565b029392505050565b600062000236838362000286565b60805160a05160c05160e051610100516101205161014051615266620004216000396000818161083601528181610e3a0152818161115701526111c8015260008181610a18015261288a0152600081816106a40152612525015260008181610a6d0152818161286801526130da01526000818161062a01528181610ee30152818161125a01528181611411015281816117ba0152818161274701528181612e5c01526130b0015260008181610bea01526119910152600081816109f101528181613e7001528181613eac0152613ed901526152666000f3fe608060405234801561001057600080fd5b50600436106104965760003560e01c80638c9a281d11610262578063aff05aa911610151578063dbc0ed8a116100ce578063eab5231811610092578063eab5231814610c65578063f036bc6814610c78578063f11b818814610c8c578063f34d96da14610cee578063f713d8a814610cf6578063fde9eb6914610d0957600080fd5b8063dbc0ed8a14610c1f578063dc937e1c14610c27578063dd62ed3e14610c3a578063dde43cba14610c4d578063e6aa216c14610c5457600080fd5b8063c2ffbb9111610115578063c2ffbb9114610bac578063c3863ada14610bbf578063c3cda52014610bd2578063cbcbb50714610be5578063d505accf14610c0c57600080fd5b8063aff05aa914610b4b578063b2a5dbfa14610b53578063b2f4201d14610b66578063b9844d8d14610b79578063c18f539a14610b9957600080fd5b80639a99b4f0116101df578063a9059cbb116101a3578063a9059cbb14610ae3578063aa9fbe0214610af6578063aaf5eb6814610b1d578063ab406fe614610b25578063adc9772e14610b3857600080fd5b80639a99b4f014610a8f5780639c9b515414610aa25780639e3ffce014610ab5578063a457c2d714610abd578063a6b63eb814610ad057600080fd5b8063946776cd11610226578063946776cd14610a13578063955e18af14610a3a57806395d89b4114610a4d578063981b24d014610a5557806399248ea714610a6857600080fd5b80638c9a281d146109325780638dbefee21461093a5780638e9b2ca41461094d5780638ef98e0e1461095c578063919cd40f146109ec57600080fd5b806345755dd6116103895780636f50458d1161030657806374011f56116102ca57806374011f56146108a457806378160376146108b7578063787a08a6146108d75780637b5b1157146108df5780637bb73c97146108f25780637e90d7ef1461091257600080fd5b80636f50458d1461085857806370a082311461086b578063727a5d571461087e57806372b49d631461082957806373d6a8891461089157600080fd5b80635b3cc0cf1161034d5780635b3cc0cf146107925780635c19a95c146107f157806360ba192b14610804578063616e0bf9146108295780636198e1351461083157600080fd5b806345755dd6146107095780634575e69b1461071c5780634998fffd146107455780634cdad5061461075857806358146d171461076b57600080fd5b806323b872dd116104175780633373ee4c116103db5780633373ee4c14610661578063359c4a961461069f5780633644e515146106c657806339509351146106cf57806341cbf54a146106e257600080fd5b806323b872dd146105d8578063250201db146105eb57806330adf81f146105fe578063312f6b8314610625578063313ce5671461064c57600080fd5b8063112d037c1161045e578063112d037c14610582578063174ed5421461059757806318160ddd146105aa5780631e9a6950146105b257806320fb80b5146105c557600080fd5b806302fb4d851461049b57806306fdde03146104c1578063091030c3146104d6578063095ea7b314610534578063111fd88b14610557575b600080fd5b6104ae6104a9366004614928565b610d1c565b6040519081526020015b60405180910390f35b6104c9610f5a565b6040516104b891906149a4565b61050f6104e43660046149b7565b603e6020526000908152604090205464ffffffffff811690600160281b90046001600160d81b031682565b6040805164ffffffffff90931683526001600160d81b039091166020830152016104b8565b610547610542366004614928565b610fec565b60405190151581526020016104b8565b61056a6105653660046149d4565b611004565b6040516001600160a01b0390911681526020016104b8565b6105956105903660046149ed565b61101f565b005b60535461056a906001600160a01b031681565b6002546104ae565b6105956105c0366004614928565b611069565b6104ae6105d33660046149ed565b611078565b6105476105e63660046149ed565b6110c9565b6105956105f93660046149b7565b6110ed565b6104ae7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61056a7f000000000000000000000000000000000000000000000000000000000000000081565b60125b60405160ff90911681526020016104b8565b6104ae61066f366004614a2e565b6001600160a01b038082166000908152603c60209081526040808320938616835260029093019052205492915050565b6104ae7f000000000000000000000000000000000000000000000000000000000000000081565b6104ae60435481565b6105476106dd366004614928565b611133565b6104ae7f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d81565b6105956107173660046149d4565b611155565b61056a61072a3660046149d4565b6000908152604660205260409020546001600160a01b031690565b6105956107533660046149b7565b6112ba565b6104ae6107663660046149d4565b611324565b61077a670de0b6b3a764000081565b6040516001600160d81b0390911681526020016104b8565b6107d16107a0366004614928565b60066020908152600092835260408084209091529082529020546001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016104b8565b6105956107ff3660046149b7565b61134f565b605154600160e01b900463ffffffff1660405163ffffffff90911681526020016104b8565b604f546104ae565b6104ae7f000000000000000000000000000000000000000000000000000000000000000081565b61056a610866366004614a7b565b611367565b6104ae6108793660046149b7565b611389565b6104ae61088c3660046149d4565b6113a4565b61059561089f366004614ac1565b6113c7565b6105956108b23660046149d4565b611480565b6104c9604051806040016040528060018152602001603160f81b81525081565b6105956114c3565b6105956108ed3660046149d4565b6114ce565b6104ae6109003660046149b7565b60076020526000908152604090205481565b6104ae6109203660046149b7565b603d6020526000908152604090205481565b6104ae600081565b6104ae6109483660046149b7565b611541565b6104ae670de0b6b3a764000081565b6109c161096a366004614b1b565b60408051808201909152600080825260208201525063ffffffff1660009081526052602090815260409182902082518084019093525464ffffffffff81168352600160281b90046001600160d81b03169082015290565b60408051825164ffffffffff1681526020928301516001600160d81b031692810192909252016104b8565b6104ae7f000000000000000000000000000000000000000000000000000000000000000081565b61056a7f000000000000000000000000000000000000000000000000000000000000000081565b6104ae610a48366004614928565b61161c565b6104c9611629565b6104ae610a633660046149d4565b611638565b61056a7f000000000000000000000000000000000000000000000000000000000000000081565b610595610a9d366004614928565b611643565b610595610ab0366004614b41565b61164e565b6104ae600181565b610547610acb366004614928565b6116a5565b610595610ade366004614b87565b611720565b610547610af1366004614928565b611838565b6104ae7f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e581565b61064f601281565b610595610b33366004614be2565b611846565b610595610b46366004614928565b611909565b610595611914565b610595610b61366004614c77565b611986565b6104ae610b74366004614a7b565b611a41565b6104ae610b873660046149b7565b60446020526000908152604090205481565b6104ae610ba73660046149ed565b611a69565b6104ae610bba366004614d5e565b611ab0565b60085461056a906001600160a01b031681565b610595610be0366004614ac1565b611ad9565b61056a7f000000000000000000000000000000000000000000000000000000000000000081565b610595610c1a366004614d9c565b611c9e565b6104ae600281565b610595610c35366004614a7b565b611e66565b6104ae610c48366004614a2e565b611e71565b60056104ae565b6051546001600160d81b031661077a565b610595610c73366004614e0a565b611e9c565b60515461054790600160d81b900460ff1681565b610cc8610c9a3660046149b7565b603c60205260009081526040902080546001909101546001600160801b0380831692600160801b9004169083565b604080516001600160801b039485168152939092166020840152908201526060016104b8565b6050546104ae565b610595610d04366004614e3f565b611eb3565b610595610d173660046149d4565b612087565b6000610d286000611004565b6001600160a01b0316336001600160a01b031614610d615760405162461bcd60e51b8152600401610d5890614e73565b60405180910390fd5b605154600160d81b900460ff1615610dbb5760405162461bcd60e51b815260206004820152601d60248201527f50524556494f55535f534c415348494e475f4e4f545f534554544c45440000006044820152606401610d58565b60008211610df95760405162461bcd60e51b815260206004820152600b60248201526a16915493d7d05353d5539560aa1b6044820152606401610d58565b6000610e0460025490565b90506000610e1182611324565b90506000610e2a6050548361215890919063ffffffff16565b905080851115610e38578094505b7f0000000000000000000000000000000000000000000000000000000000000000610e638684614ec0565b1015610ea85760405162461bcd60e51b815260206004820152601460248201527352454d41494e494e475f4c545f4d494e494d554d60601b6044820152606401610d58565b6051805460ff60d81b1916600160d81b179055610ed6610ed1610ecb8785614ec0565b856121e4565b612222565b610f0a6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001687876122c7565b856001600160a01b03167f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd86604051610f4591815260200190565b60405180910390a28493505050505b92915050565b606060038054610f6990614ed3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9590614ed3565b8015610fe25780601f10610fb757610100808354040283529160200191610fe2565b820191906000526020600020905b815481529060010190602001808311610fc557829003601f168201915b5050505050905090565b600033610ffa81858561232a565b5060019392505050565b6000908152604560205260409020546001600160a01b031690565b6110296002611004565b6001600160a01b0316336001600160a01b0316146110595760405162461bcd60e51b8152600401610d5890614f0d565b61106483838361244e565b505050565b61107433838361244e565b5050565b60006110846002611004565b6001600160a01b0316336001600160a01b0316146110b45760405162461bcd60e51b8152600401610d5890614f0d565b6110bf8484846127ce565b90505b9392505050565b6000336110d7858285612906565b6110e285858561297a565b506001949350505050565b6110f76002611004565b6001600160a01b0316336001600160a01b0316146111275760405162461bcd60e51b8152600401610d5890614f0d565b61113081612aa9565b50565b600033610ffa8185856111468383611e71565b6111509190614f44565b61232a565b7f00000000000000000000000000000000000000000000000000000000000000008110156111b95760405162461bcd60e51b8152602060048201526011602482015270414d4f554e545f4c545f4d494e494d554d60781b6044820152606401610d58565b60006111c460025490565b90507f000000000000000000000000000000000000000000000000000000000000000081101561122a5760405162461bcd60e51b81526020600482015260116024820152705348415245535f4c545f4d494e494d554d60781b6044820152606401610d58565b600061123582611324565b905061124d610ed16112478584614f44565b846121e4565b6112826001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086612b8c565b6040518381527f278e51d3323fbf18b9fb8df3f8b97e31b145bc1146c52e764cf4aa1bfc4ba17d9060200160405180910390a1505050565b73ee56e2b3d491590b5b31738cc34d5232f378a8d533146112da57600080fd5b605380546001600160a01b0319166001600160a01b0383169081179091556040517f62bbced765bccc9ed93d0bae1b2a8c86e13b4663f8bf27d5936d9d619194c8a990600090a250565b6051546000906001600160d81b031661134583670de0b6b3a7640000614f57565b610f549190614f6e565b61135b33826000612bc4565b61113033826001612bc4565b60008061137383612cc5565b925050506113818482612d04565b949350505050565b6001600160a01b031660009081526020819052604090205490565b605154600090670de0b6b3a764000090611345906001600160d81b031684614f57565b60405163d505accf60e01b81526001600160a01b038781166004830152306024830152604482018790526064820186905260ff8516608483015260a4820184905260c482018390527f0000000000000000000000000000000000000000000000000000000000000000169063d505accf9060e401600060405180830381600087803b15801561145557600080fd5b505af1158015611469573d6000803e3d6000fd5b50505050611478868787612d2f565b505050505050565b61148a6000611004565b6001600160a01b0316336001600160a01b0316146114ba5760405162461bcd60e51b8152600401610d5890614e73565b61113081612edc565b6114cc33612aa9565b565b6114d86001611004565b6001600160a01b0316336001600160a01b0316146115385760405162461bcd60e51b815260206004820152601960248201527f43414c4c45525f4e4f545f434f4f4c444f574e5f41444d494e000000000000006044820152606401610d58565b61113081612f69565b604080516001808252818301909252600091829190816020015b611588604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b81526020019060019003908161155b5790505090506040518060600160405280306001600160a01b031681526020016115c085611389565b81526020016115ce60025490565b815250816000815181106115e4576115e4614f90565b60200260200101819052506115f98382612f9e565b6001600160a01b0384166000908152603d60205260409020546110c29190614f44565b60006110c23384846130ac565b606060048054610f6990614ed3565b6000610f5460025490565b6110643383836127ce565b6116586002611004565b6001600160a01b0316336001600160a01b0316146116885760405162461bcd60e51b8152600401610d5890614f0d565b6116938484846127ce565b5061169f84848361244e565b50505050565b600033816116b38286611e71565b9050838110156117135760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610d58565b6110e2828686840361232a565b600954600590811161178b5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610d58565b600981905561179d8686868686613197565b60405163095ea7b360e01b815230600482015260001960248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063095ea7b3906044016020604051808303816000875af115801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f9190614fa6565b50505050505050565b600033610ffa81858561297a565b60008281526045602052604090205482906001600160a01b031633146118a65760405162461bcd60e51b815260206004820152601560248201527421a0a62622a92fa727aa2fa927a622afa0a226a4a760591b6044820152606401610d58565b60008381526046602090815260409182902080546001600160a01b0319166001600160a01b03861690811790915591518581527fc3d1bf52795a20771ee6de3e59948fd83e10db956122d4709a3b86c512963855910160405180910390a2505050565b611074338383612d2f565b61191e6000611004565b6001600160a01b0316336001600160a01b03161461194e5760405162461bcd60e51b8152600401610d5890614e73565b6051805460ff60d81b191690556040517fcdee157e87ba915be681d4fa3f3d511afe7348eca06448a3accd6ac227fa40af90600090a1565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119f65760405162461bcd60e51b815260206004820152601560248201527427a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a960591b6044820152606401610d58565b60005b8151811015611a3757600254828281518110611a1757611a17614f90565b602090810291909101810151015280611a2f81614fc8565b9150506119f9565b50611130816132bb565b6000806000611a4f84612cc5565b5091509150611a6082828743613429565b95945050505050565b6000611a756002611004565b6001600160a01b0316336001600160a01b031614611aa55760405162461bcd60e51b8152600401610d5890614f0d565b6110bf8484846130ac565b6000806000611abe84612cc5565b5091509150611acf82828888613429565b9695505050505050565b604080517f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a001604051602081830303815290604052805190602001209050600060435482604051602001611b57929190614fe1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611bc2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bf55760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b0381166000908152604460205260408120805491611c1983614fc8565b919050558814611c5b5760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b6044820152606401610d58565b86421115611c7b5760405162461bcd60e51b8152600401610d5890615027565b611c87818a6000612bc4565b611c93818a6001612bc4565b505050505050505050565b6001600160a01b038716611ce45760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22fa7aba722a960991b6044820152606401610d58565b83421115611d045760405162461bcd60e51b8152600401610d5890615027565b6001600160a01b0387811660008181526044602090815260408083205460435482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958c166060860152608085018b905260a0850181905260c08086018b90528251808703909101815260e086019092528151919092012090939192611d9b92919061010001614fe1565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa158015611e03573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614611e3d5760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b0389166000908152604460205260409020600183019055611c9389898961232a565b611074338383612bc4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611ea73384846127ce565b5061106433848361244e565b60007f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e588886001811115611ee957611ee9615053565b6040805160208101949094526001600160a01b039092169183019190915260608201526080810187905260a0810186905260c001604051602081830303815290604052805190602001209050600060435482604051602001611f4c929190614fe1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611fb7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611fea5760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b038116600090815260446020526040812080549161200e83614fc8565b9190505588146120505760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b6044820152606401610d58565b864211156120705760405162461bcd60e51b8152600401610d5890615027565b61207b818b8b612bc4565b50505050505050505050565b60008181526046602052604090205481906001600160a01b031633146120ef5760405162461bcd60e51b815260206004820152601d60248201527f43414c4c45525f4e4f545f50454e44494e475f524f4c455f41444d494e0000006044820152606401610d58565b60008281526045602090815260408083208054336001600160a01b0319918216811790925560468452938290208054909416909355518481527f83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf91015b60405180910390a25050565b6000821580612165575081155b1561217257506000610f54565b61217e82600019614f6e565b8311156121cd5760405162461bcd60e51b815260206004820152601c60248201527f4d4154485f4d554c5449504c49434154494f4e5f4f564552464c4f57000000006044820152606401610d58565b6127106121da8385614f57565b6110c29190614f6e565b60006110c2836001816121ff670de0b6b3a764000087614f57565b6122099190614f44565b6122139190614ec0565b61221d9190614f6e565b613472565b6040518060400160405280612236436134df565b64ffffffffff90811682526001600160d81b038085166020938401526051805463ffffffff600160e01b9182900481166000908152605287526040902087519790960151909316600160281b0295909316949094179092558254601c926122a09290910416615069565b91906101000a81548163ffffffff021916908363ffffffff16021790555061113081613545565b6040516001600160a01b03831660248201526044810182905261106490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526135e1565b6001600160a01b03831661238c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610d58565b6001600160a01b0382166123ed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610d58565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b8060000361246e5760405162461bcd60e51b8152600401610d589061508c565b6001600160a01b0383166000908152603e602090815260409182902082518084019093525464ffffffffff81168352600160281b90046001600160d81b031690820152605154600160d81b900460ff166125ad57604f5481516124d8919064ffffffffff16614f44565b421161251e5760405162461bcd60e51b815260206004820152601560248201527424a729aaa32324a1a4a2a72a2fa1a7a7a62227aba760591b6044820152606401610d58565b604f5481517f0000000000000000000000000000000000000000000000000000000000000000916125559164ffffffffff16614f44565b61255f9042614ec0565b11156125ad5760405162461bcd60e51b815260206004820152601760248201527f554e5354414b455f57494e444f575f46494e49534845440000000000000000006044820152606401610d58565b60006125b885611389565b605154909150600090600160d81b900460ff166125e25782602001516001600160d81b03166125e4565b815b9050806000036126365760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f5a45524f5f4d41585f52454445454d41424c4500000000006044820152606401610d58565b60008185116126455784612647565b815b9050612655878460016136b3565b50600061266182611324565b905061266d8883613762565b845164ffffffffff161561273a578185602001516001600160d81b03166126949190614ec0565b6000036126b9576001600160a01b0388166000908152603e602052604081205561273a565b6126c2826138a0565b6001600160a01b0389166000908152603e60205260409020546126fe916001600160b81b031690600160281b90046001600160d81b03166150b9565b6001600160a01b0389166000908152603e6020526040902080546001600160d81b0392909216600160281b0264ffffffffff9092169190911790555b61276e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001688836122c7565b866001600160a01b0316886001600160a01b03167f3f693fff038bb8a046aa76d9516190ac7444f7d69cf952c4cbdc086fdef2d6fc83856040516127bc929190918252602082015260400190565b60405180910390a35050505050505050565b6000816000036127f05760405162461bcd60e51b8152600401610d589061508c565b6000612806856127ff87611389565b60006136b3565b905060008184116128175783612819565b815b90508060000361283b5760405162461bcd60e51b8152600401610d589061508c565b6128458183614ec0565b6001600160a01b038088166000908152603d60205260409020919091556128b0907f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008784612b8c565b846001600160a01b0316866001600160a01b03167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c7836040516128f591815260200190565b60405180910390a395945050505050565b60006129128484611e71565b9050600019811461169f578181101561296d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610d58565b61169f848484840361232a565b600061298584611389565b9050612993848260016136b3565b50826001600160a01b0316846001600160a01b031614612a9e5760006129b884611389565b90506129c6848260016136b3565b506001600160a01b0385166000908152603e602090815260409182902082518084019093525464ffffffffff8116808452600160281b9091046001600160d81b03169183019190915215612a9b57838303612a39576001600160a01b0386166000908152603e6020526040812055612a9b565b60208101516001600160d81b0316612a518585614ec0565b1015612a9b57612a618484614ec0565b6001600160a01b0387166000908152603e60205260409020805464ffffffffff166001600160b81b0392909216600160281b029190911790555b50505b61169f848484613909565b6000612ab482611389565b905080600003612b065760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e00000000006044820152606401610d58565b60408051808201825264ffffffffff42811682526001600160d81b0380851660208085019182526001600160a01b0388166000818152603e9092529086902094519151909216600160281b0292169190911790915590517f8a05f911d8ab7fc50fec37ef4ba7f9bfcb1a3c191c81dcd824ad0946c4e20d659061214c9084815260200190565b6040516001600160a01b038085166024830152831660448201526064810182905261169f9085906323b872dd60e01b906084016122f3565b6001600160a01b038216612c0e5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f44454c45474154454560781b6044820152606401610d58565b6000612c1982612cc5565b925050506000612c2885611389565b90506000612c368684612d04565b6001600160a01b03878116600090815260208690526040902080546001600160a01b0319169188169190911790559050612c7281868487613ab8565b846001600160a01b0316866001600160a01b03167fe8d51c8e11bd570db1734c8ec775785330e77007feed45c43b608ef33ff914bd86604051612cb59190615102565b60405180910390a3505050505050565b6000808080846001811115612cdc57612cdc615053565b03612cf157506006915060079050603f612cfd565b50604091506041905060425b9193909250565b6001600160a01b03808316600090815260208390526040812054909116806110c25783915050610f54565b605154600160d81b900460ff1615612d7c5760405162461bcd60e51b815260206004820152601060248201526f534c415348494e475f4f4e474f494e4760801b6044820152606401610d58565b80600003612d9c5760405162461bcd60e51b8152600401610d589061508c565b6000612da783611389565b90506000612dbf843084612dba60025490565b613cbc565b90508015612e42576001600160a01b0384166000908152603d6020526040902054612deb908290614f44565b6001600160a01b0385166000818152603d60209081526040918290209390935580519182529181018390527f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76910160405180910390a15b6000612e4d846113a4565b9050612e846001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016873087612b8c565b612e8e8582613d7d565b846001600160a01b0316866001600160a01b03167f6c86f3fd5118b3aa8bb4f389a617046de0a3d3d477de1a1673d227f802f616dc8684604051612cb5929190918252602082015260400190565b6127108110612f2d5760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f534c415348494e475f50455243454e5441474500000000006044820152606401610d58565b60508190556040518181527fb79c2d6c7f5c95eec9dc05affc0ed002620a4ec6d72b7b0744cc8638168c600a906020015b60405180910390a150565b604f8190556040518181527fbbf67247b5c97564e30ffc0a355e71c006836de7b9149e09e3d5d6054cb0335590602001612f5e565b600080805b83518110156130a4576000603c6000868481518110612fc457612fc4614f90565b602090810291909101810151516001600160a01b031682528101919091526040016000908120600181015481548851929450613032926001600160801b0380831692600160801b900416908a908890811061302157613021614f90565b602002602001015160400151613e48565b905061308386848151811061304957613049614f90565b602002602001015160200151828460020160008b6001600160a01b03166001600160a01b0316815260200190815260200160002054613f53565b61308d9085614f44565b93505050808061309c90614fc8565b915050612fa3565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461314f5760405162461bcd60e51b815260206004820181905260248201527f5245574152445f544f4b454e5f49535f4e4f545f5354414b45445f544f4b454e6044820152606401610d58565b60006131658561315e87611389565b60016136b3565b905060008184116131765783613178565b815b90508015611a605761318b8630836127ce565b50611a60308683612d2f565b60408051600380825260808201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816131af579050509050604051806040016040528060008152602001876001600160a01b03168152508160008151811061320a5761320a614f90565b6020026020010181905250604051806040016040528060018152602001866001600160a01b03168152508160018151811061324757613247614f90565b6020026020010181905250604051806040016040528060028152602001856001600160a01b03168152508160028151811061328457613284614f90565b602002602001018190525061329881613f7f565b6132a183612edc565b6132aa82612f69565b611478670de0b6b3a7640000612222565b60005b8151811015611074576000603c60008484815181106132df576132df614f90565b6020026020010151604001516001600160a01b03166001600160a01b03168152602001908152602001600020905061335283838151811061332257613322614f90565b6020026020010151604001518285858151811061334157613341614f90565b60200260200101516020015161415b565b5082828151811061336557613365614f90565b60209081029190910101515181546fffffffffffffffffffffffffffffffff19166001600160801b0390911617815582518390839081106133a8576133a8614f90565b6020026020010151604001516001600160a01b03167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8484815181106133f0576133f0614f90565b602090810291909101810151516040516001600160801b0390911681520160405180910390a2508061342181614fc8565b9150506132be565b60515460009061344990605290600160e01b900463ffffffff1684614213565b670de0b6b3a764000061345e87878787614320565b6134689190614f57565b611a609190614f6e565b60006001600160d81b038211156134db5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663136206269747360c81b6064820152608401610d58565b5090565b600064ffffffffff8211156134db5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526530206269747360d01b6064820152608401610d58565b806001600160d81b03166000036135935760405162461bcd60e51b81526020600482015260126024820152715a45524f5f45584348414e47455f5241544560701b6044820152606401610d58565b605180546001600160d81b0319166001600160d81b0383169081179091556040519081527fa9c433f9734baa3cf48b209454bb0ace054e191f677ba50e74b696c0d35ef26290602001612f5e565b6000613636826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143fa9092919063ffffffff16565b80519091501561106457808060200190518101906136549190614fa6565b6110645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d58565b6000806136c5853086612dba60025490565b6001600160a01b0386166000908152603d6020526040812054919250906136ed908390614f44565b90508115611a60578315613717576001600160a01b0386166000908152603d602052604090208190555b604080516001600160a01b0388168152602081018490527f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76910160405180910390a195945050505050565b6001600160a01b0382166137c25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610d58565b6137ce82600083614409565b6001600160a01b038216600090815260208190526040902054818110156138425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610d58565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60006001600160b81b038211156134db5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663834206269747360c81b6064820152608401610d58565b6001600160a01b03831661396d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610d58565b6001600160a01b0382166139cf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610d58565b6139da838383614409565b6001600160a01b03831660009081526020819052604090205481811015613a525760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610d58565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361169f565b826001600160a01b0316846001600160a01b0316031561169f57600080613ade83612cc5565b5090925090506001600160a01b03861615613bcf576001600160a01b0386166000908152602082905260408120548015613b5e576001600160a01b038816600090815260208590526040812090613b36600184614ec0565b8152602081019190915260400160002054600160801b90046001600160801b03169150613b6a565b613b6788611389565b91505b613b8084848a85613b7b8b82614ec0565b614588565b6001600160a01b0388167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f613bb58885614ec0565b87604051613bc4929190615110565b60405180910390a250505b6001600160a01b03851615611478576001600160a01b0385166000908152602082905260408120548015613c49576001600160a01b038716600090815260208590526040812090613c21600184614ec0565b8152602081019190915260400160002054600160801b90046001600160801b03169150613c55565b613c5287611389565b91505b613c6684848985613b7b8b82614f44565b6001600160a01b0387167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f613c9b8885614f44565b87604051613caa929190615110565b60405180910390a25050505050505050565b6001600160a01b038084166000908152603c602090815260408083209388168352600284019091528120549091908280613cf788858861415b565b9050808314613d71578615613d1457613d11878285613f53565b91505b6001600160a01b03808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90613d689085815260200190565b60405180910390a35b50979650505050505050565b6001600160a01b038216613dd35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610d58565b613ddf60008383614409565b8060026000828254613df19190614f44565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000831580613e55575081155b80613e68575042836001600160801b0316145b80613e9c57507f0000000000000000000000000000000000000000000000000000000000000000836001600160801b031610155b15613ea8575083611381565b60007f00000000000000000000000000000000000000000000000000000000000000004211613ed75742613ef9565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000613f106001600160801b03861683614ec0565b90508684613f206012600a615208565b613f2a848a614f57565b613f349190614f57565b613f3e9190614f6e565b613f489190614f44565b979650505050505050565b6000613f616012600a615208565b613f6b8385614ec0565b613f759086614f57565b6110bf9190614f6e565b60005b81518110156110745760006001600160a01b031660456000848481518110613fac57613fac614f90565b602090810291909101810151518252810191909152604001600020546001600160a01b031614801561400e575060006001600160a01b0316828281518110613ff657613ff6614f90565b6020026020010151602001516001600160a01b031614155b61405a5760405162461bcd60e51b815260206004820152601b60248201527f41444d494e5f43414e4e4f545f42455f494e495449414c495a454400000000006044820152606401610d58565b81818151811061406c5761406c614f90565b6020026020010151602001516045600084848151811061408e5761408e614f90565b602002602001015160000151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106140de576140de614f90565b6020026020010151602001516001600160a01b03167f83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf83838151811061412657614126614f90565b60200260200101516000015160405161414191815260200190565b60405180910390a28061415381614fc8565b915050613f82565b6001820154825460009190600160801b90046001600160801b031642819003614186575090506110c2565b84546000906141a19084906001600160801b03168488613e48565b90508281146141f057600186018190556040518181526001600160a01b038816907f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc9060200160405180910390a25b85546001600160801b03428116600160801b029116178655925050509392505050565b600019820160009081526020849052604081205464ffffffffff16821061425e57506000198201600090815260208490526040902054600160281b90046001600160d81b03166110c2565b600060001984015b818111156142f75760028282030481036000818152602088815260409182902082518084019093525464ffffffffff8116808452600160281b9091046001600160d81b0316918301919091528690036142d157602001516001600160d81b031693506110c292505050565b805164ffffffffff168611156142e9578193506142f0565b6001820392505b5050614266565b5060009081526020949094525050604090912054600160281b90046001600160d81b0316919050565b6000438211156143695760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa12627a1a5afa72aa6a122a960611b6044820152606401610d58565b6001600160a01b0383166000908152602085905260408120549081900361439b5761439384611389565b915050611381565b6001600160a01b0384166000908152602087815260408083208380529091529020546001600160801b03168310156143d7576000915050611381565b6001600160a01b0384166000908152602087905260409020611acf90828561469e565b60606110bf84846000856147aa565b6053546001600160a01b031680156144e057806001600160a01b0316635b9c4cf1858561443588611389565b61443e88611389565b6040516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152604483015260648201526084810185905260a401600060405180830381600087803b15801561449957600080fd5b505af19250505080156144aa575060015b6144e0573d8080156144d8576040519150601f19603f3d011682016040523d82523d6000602084013e6144dd565b606091505b50505b6001600160a01b038085166000908152603f6020526040808220548684168352912054908216911681614511578591505b6001600160a01b0381166145225750835b61452f8282866000613ab8565b6001600160a01b03808716600090815260426020526040808220548884168352912054908216911681614560578791505b6001600160a01b0381166145715750855b61457e8282886001613ab8565b5050505050505050565b6001600160a01b038316600090815260208581526040808320549188905290912043919081158015906145ea57506001600160801b0383168160006145ce600186614ec0565b81526020810191909152604001600020546001600160801b0316145b1561462e57838160006145fe600186614ec0565b8152602081019190915260400160002080546001600160801b03928316600160801b02921691909117905561457e565b6040805180820182526001600160801b038086168252868116602080840191825260008781529086905293909320915192518116600160801b02921691909117905561467b826001614f44565b6001600160a01b0387166000908152602089905260409020555050505050505050565b60001982016000908152602084905260408120546001600160801b031682106146eb57506000198201600090815260208490526040902054600160801b90046001600160801b03166110c2565b600060001984015b81811115614781576002828203048103600081815260208881526040918290208251808401909352546001600160801b03808216808552600160801b909204169183019190915286900361475957602001516001600160801b031693506110c292505050565b80516001600160801b03168611156147735781935061477a565b6001820392505b50506146f3565b5060009081526020949094525050604090912054600160801b90046001600160801b0316919050565b60608247101561480b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610d58565b600080866001600160a01b031685876040516148279190615214565b60006040518083038185875af1925050503d8060008114614864576040519150601f19603f3d011682016040523d82523d6000602084013e614869565b606091505b5091509150613f4887838387606083156148e45782516000036148dd576001600160a01b0385163b6148dd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d58565b5081611381565b61138183838151156148f95781518083602001fd5b8060405162461bcd60e51b8152600401610d5891906149a4565b6001600160a01b038116811461113057600080fd5b6000806040838503121561493b57600080fd5b823561494681614913565b946020939093013593505050565b60005b8381101561496f578181015183820152602001614957565b50506000910152565b60008151808452614990816020860160208601614954565b601f01601f19169290920160200192915050565b6020815260006110c26020830184614978565b6000602082840312156149c957600080fd5b81356110c281614913565b6000602082840312156149e657600080fd5b5035919050565b600080600060608486031215614a0257600080fd5b8335614a0d81614913565b92506020840135614a1d81614913565b929592945050506040919091013590565b60008060408385031215614a4157600080fd5b8235614a4c81614913565b91506020830135614a5c81614913565b809150509250929050565b803560028110614a7657600080fd5b919050565b60008060408385031215614a8e57600080fd5b8235614a9981614913565b9150614aa760208401614a67565b90509250929050565b803560ff81168114614a7657600080fd5b60008060008060008060c08789031215614ada57600080fd5b8635614ae581614913565b95506020870135945060408701359350614b0160608801614ab0565b92506080870135915060a087013590509295509295509295565b600060208284031215614b2d57600080fd5b813563ffffffff811681146110c257600080fd5b60008060008060808587031215614b5757600080fd5b8435614b6281614913565b93506020850135614b7281614913565b93969395505050506040820135916060013590565b600080600080600060a08688031215614b9f57600080fd5b8535614baa81614913565b94506020860135614bba81614913565b93506040860135614bca81614913565b94979396509394606081013594506080013592915050565b60008060408385031215614bf557600080fd5b823591506020830135614a5c81614913565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715614c4057614c40614c07565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715614c6f57614c6f614c07565b604052919050565b60006020808385031215614c8a57600080fd5b823567ffffffffffffffff80821115614ca257600080fd5b818501915085601f830112614cb657600080fd5b813581811115614cc857614cc8614c07565b614cd6848260051b01614c46565b81815284810192506060918202840185019188831115614cf557600080fd5b938501935b82851015613d715780858a031215614d125760008081fd5b614d1a614c1d565b85356001600160801b0381168114614d325760008081fd5b81528587013587820152604080870135614d4b81614913565b9082015284529384019392850192614cfa565b600080600060608486031215614d7357600080fd5b8335614d7e81614913565b925060208401359150614d9360408501614a67565b90509250925092565b600080600080600080600060e0888a031215614db757600080fd5b8735614dc281614913565b96506020880135614dd281614913565b95506040880135945060608801359350614dee60808901614ab0565b925060a0880135915060c0880135905092959891949750929550565b600080600060608486031215614e1f57600080fd5b8335614e2a81614913565b95602085013595506040909401359392505050565b600080600080600080600060e0888a031215614e5a57600080fd5b8735614e6581614913565b9650614dd260208901614a67565b60208082526019908201527f43414c4c45525f4e4f545f534c415348494e475f41444d494e00000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f5457610f54614eaa565b600181811c90821680614ee757607f821691505b602082108103614f0757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526017908201527f43414c4c45525f4e4f545f434c41494d5f48454c504552000000000000000000604082015260600190565b80820180821115610f5457610f54614eaa565b8082028115828204841417610f5457610f54614eaa565b600082614f8b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614fb857600080fd5b815180151581146110c257600080fd5b600060018201614fda57614fda614eaa565b5060010190565b61190160f01b81526002810192909252602282015260420190565b602080825260119082015270494e56414c49445f5349474e415455524560781b604082015260600190565b60208082526012908201527124a72b20a624a22fa2ac2824a920aa24a7a760711b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b600063ffffffff80831681810361508257615082614eaa565b6001019392505050565b6020808252601390820152721253959053125117d6915493d7d05353d55395606a1b604082015260600190565b6001600160d81b038281168282160390808211156150d9576150d9614eaa565b5092915050565b600281106150fe57634e487b7160e01b600052602160045260246000fd5b9052565b60208101610f5482846150e0565b828152604081016110c260208301846150e0565b600181815b8085111561515f57816000190482111561514557615145614eaa565b8085161561515257918102915b93841c9390800290615129565b509250929050565b60008261517657506001610f54565b8161518357506000610f54565b816001811461519957600281146151a3576151bf565b6001915050610f54565b60ff8411156151b4576151b4614eaa565b50506001821b610f54565b5060208310610133831016604e8410600b84101617156151e2575081810a610f54565b6151ec8383615124565b806000190482111561520057615200614eaa565b029392505050565b60006110c28383615167565b60008251615226818460208701614954565b919091019291505056fea2646970667358221220eca7538023765a4de548dace73c5919366f9605051f5141240ca82e0c4ea703c64736f6c634300081100330000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae90000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae9000000000000000000000000000000000000000000000000000000000002a30000000000000000000000000025f2226b597e8f9514b3f68f00f494cf4f286491000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d500000000000000000000000000000000000000000000000000000000bc180c38",
        "output": "0x608060405234801561001057600080fd5b50600436106104965760003560e01c80638c9a281d11610262578063aff05aa911610151578063dbc0ed8a116100ce578063eab5231811610092578063eab5231814610c65578063f036bc6814610c78578063f11b818814610c8c578063f34d96da14610cee578063f713d8a814610cf6578063fde9eb6914610d0957600080fd5b8063dbc0ed8a14610c1f578063dc937e1c14610c27578063dd62ed3e14610c3a578063dde43cba14610c4d578063e6aa216c14610c5457600080fd5b8063c2ffbb9111610115578063c2ffbb9114610bac578063c3863ada14610bbf578063c3cda52014610bd2578063cbcbb50714610be5578063d505accf14610c0c57600080fd5b8063aff05aa914610b4b578063b2a5dbfa14610b53578063b2f4201d14610b66578063b9844d8d14610b79578063c18f539a14610b9957600080fd5b80639a99b4f0116101df578063a9059cbb116101a3578063a9059cbb14610ae3578063aa9fbe0214610af6578063aaf5eb6814610b1d578063ab406fe614610b25578063adc9772e14610b3857600080fd5b80639a99b4f014610a8f5780639c9b515414610aa25780639e3ffce014610ab5578063a457c2d714610abd578063a6b63eb814610ad057600080fd5b8063946776cd11610226578063946776cd14610a13578063955e18af14610a3a57806395d89b4114610a4d578063981b24d014610a5557806399248ea714610a6857600080fd5b80638c9a281d146109325780638dbefee21461093a5780638e9b2ca41461094d5780638ef98e0e1461095c578063919cd40f146109ec57600080fd5b806345755dd6116103895780636f50458d1161030657806374011f56116102ca57806374011f56146108a457806378160376146108b7578063787a08a6146108d75780637b5b1157146108df5780637bb73c97146108f25780637e90d7ef1461091257600080fd5b80636f50458d1461085857806370a082311461086b578063727a5d571461087e57806372b49d631461082957806373d6a8891461089157600080fd5b80635b3cc0cf1161034d5780635b3cc0cf146107925780635c19a95c146107f157806360ba192b14610804578063616e0bf9146108295780636198e1351461083157600080fd5b806345755dd6146107095780634575e69b1461071c5780634998fffd146107455780634cdad5061461075857806358146d171461076b57600080fd5b806323b872dd116104175780633373ee4c116103db5780633373ee4c14610661578063359c4a961461069f5780633644e515146106c657806339509351146106cf57806341cbf54a146106e257600080fd5b806323b872dd146105d8578063250201db146105eb57806330adf81f146105fe578063312f6b8314610625578063313ce5671461064c57600080fd5b8063112d037c1161045e578063112d037c14610582578063174ed5421461059757806318160ddd146105aa5780631e9a6950146105b257806320fb80b5146105c557600080fd5b806302fb4d851461049b57806306fdde03146104c1578063091030c3146104d6578063095ea7b314610534578063111fd88b14610557575b600080fd5b6104ae6104a9366004614928565b610d1c565b6040519081526020015b60405180910390f35b6104c9610f5a565b6040516104b891906149a4565b61050f6104e43660046149b7565b603e6020526000908152604090205464ffffffffff811690600160281b90046001600160d81b031682565b6040805164ffffffffff90931683526001600160d81b039091166020830152016104b8565b610547610542366004614928565b610fec565b60405190151581526020016104b8565b61056a6105653660046149d4565b611004565b6040516001600160a01b0390911681526020016104b8565b6105956105903660046149ed565b61101f565b005b60535461056a906001600160a01b031681565b6002546104ae565b6105956105c0366004614928565b611069565b6104ae6105d33660046149ed565b611078565b6105476105e63660046149ed565b6110c9565b6105956105f93660046149b7565b6110ed565b6104ae7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61056a7f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae981565b60125b60405160ff90911681526020016104b8565b6104ae61066f366004614a2e565b6001600160a01b038082166000908152603c60209081526040808320938616835260029093019052205492915050565b6104ae7f000000000000000000000000000000000000000000000000000000000002a30081565b6104ae60435481565b6105476106dd366004614928565b611133565b6104ae7f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d81565b6105956107173660046149d4565b611155565b61056a61072a3660046149d4565b6000908152604660205260409020546001600160a01b031690565b6105956107533660046149b7565b6112ba565b6104ae6107663660046149d4565b611324565b61077a670de0b6b3a764000081565b6040516001600160d81b0390911681526020016104b8565b6107d16107a0366004614928565b60066020908152600092835260408084209091529082529020546001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016104b8565b6105956107ff3660046149b7565b61134f565b605154600160e01b900463ffffffff1660405163ffffffff90911681526020016104b8565b604f546104ae565b6104ae7f0000000000000000000000000000000000000000000000000de0b6b3a764000081565b61056a610866366004614a7b565b611367565b6104ae6108793660046149b7565b611389565b6104ae61088c3660046149d4565b6113a4565b61059561089f366004614ac1565b6113c7565b6105956108b23660046149d4565b611480565b6104c9604051806040016040528060018152602001603160f81b81525081565b6105956114c3565b6105956108ed3660046149d4565b6114ce565b6104ae6109003660046149b7565b60076020526000908152604090205481565b6104ae6109203660046149b7565b603d6020526000908152604090205481565b6104ae600081565b6104ae6109483660046149b7565b611541565b6104ae670de0b6b3a764000081565b6109c161096a366004614b1b565b60408051808201909152600080825260208201525063ffffffff1660009081526052602090815260409182902082518084019093525464ffffffffff81168352600160281b90046001600160d81b03169082015290565b60408051825164ffffffffff1681526020928301516001600160d81b031692810192909252016104b8565b6104ae7f00000000000000000000000000000000000000000000000000000001207eb54881565b61056a7f00000000000000000000000025f2226b597e8f9514b3f68f00f494cf4f28649181565b6104ae610a48366004614928565b61161c565b6104c9611629565b6104ae610a633660046149d4565b611638565b61056a7f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae981565b610595610a9d366004614928565b611643565b610595610ab0366004614b41565b61164e565b6104ae600181565b610547610acb366004614928565b6116a5565b610595610ade366004614b87565b611720565b610547610af1366004614928565b611838565b6104ae7f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e581565b61064f601281565b610595610b33366004614be2565b611846565b610595610b46366004614928565b611909565b610595611914565b610595610b61366004614c77565b611986565b6104ae610b74366004614a7b565b611a41565b6104ae610b873660046149b7565b60446020526000908152604090205481565b6104ae610ba73660046149ed565b611a69565b6104ae610bba366004614d5e565b611ab0565b60085461056a906001600160a01b031681565b610595610be0366004614ac1565b611ad9565b61056a7f000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d581565b610595610c1a366004614d9c565b611c9e565b6104ae600281565b610595610c35366004614a7b565b611e66565b6104ae610c48366004614a2e565b611e71565b60056104ae565b6051546001600160d81b031661077a565b610595610c73366004614e0a565b611e9c565b60515461054790600160d81b900460ff1681565b610cc8610c9a3660046149b7565b603c60205260009081526040902080546001909101546001600160801b0380831692600160801b9004169083565b604080516001600160801b039485168152939092166020840152908201526060016104b8565b6050546104ae565b610595610d04366004614e3f565b611eb3565b610595610d173660046149d4565b612087565b6000610d286000611004565b6001600160a01b0316336001600160a01b031614610d615760405162461bcd60e51b8152600401610d5890614e73565b60405180910390fd5b605154600160d81b900460ff1615610dbb5760405162461bcd60e51b815260206004820152601d60248201527f50524556494f55535f534c415348494e475f4e4f545f534554544c45440000006044820152606401610d58565b60008211610df95760405162461bcd60e51b815260206004820152600b60248201526a16915493d7d05353d5539560aa1b6044820152606401610d58565b6000610e0460025490565b90506000610e1182611324565b90506000610e2a6050548361215890919063ffffffff16565b905080851115610e38578094505b7f0000000000000000000000000000000000000000000000000de0b6b3a7640000610e638684614ec0565b1015610ea85760405162461bcd60e51b815260206004820152601460248201527352454d41494e494e475f4c545f4d494e494d554d60601b6044820152606401610d58565b6051805460ff60d81b1916600160d81b179055610ed6610ed1610ecb8785614ec0565b856121e4565b612222565b610f0a6001600160a01b037f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae91687876122c7565b856001600160a01b03167f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd86604051610f4591815260200190565b60405180910390a28493505050505b92915050565b606060038054610f6990614ed3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9590614ed3565b8015610fe25780601f10610fb757610100808354040283529160200191610fe2565b820191906000526020600020905b815481529060010190602001808311610fc557829003601f168201915b5050505050905090565b600033610ffa81858561232a565b5060019392505050565b6000908152604560205260409020546001600160a01b031690565b6110296002611004565b6001600160a01b0316336001600160a01b0316146110595760405162461bcd60e51b8152600401610d5890614f0d565b61106483838361244e565b505050565b61107433838361244e565b5050565b60006110846002611004565b6001600160a01b0316336001600160a01b0316146110b45760405162461bcd60e51b8152600401610d5890614f0d565b6110bf8484846127ce565b90505b9392505050565b6000336110d7858285612906565b6110e285858561297a565b506001949350505050565b6110f76002611004565b6001600160a01b0316336001600160a01b0316146111275760405162461bcd60e51b8152600401610d5890614f0d565b61113081612aa9565b50565b600033610ffa8185856111468383611e71565b6111509190614f44565b61232a565b7f0000000000000000000000000000000000000000000000000de0b6b3a76400008110156111b95760405162461bcd60e51b8152602060048201526011602482015270414d4f554e545f4c545f4d494e494d554d60781b6044820152606401610d58565b60006111c460025490565b90507f0000000000000000000000000000000000000000000000000de0b6b3a764000081101561122a5760405162461bcd60e51b81526020600482015260116024820152705348415245535f4c545f4d494e494d554d60781b6044820152606401610d58565b600061123582611324565b905061124d610ed16112478584614f44565b846121e4565b6112826001600160a01b037f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae916333086612b8c565b6040518381527f278e51d3323fbf18b9fb8df3f8b97e31b145bc1146c52e764cf4aa1bfc4ba17d9060200160405180910390a1505050565b73ee56e2b3d491590b5b31738cc34d5232f378a8d533146112da57600080fd5b605380546001600160a01b0319166001600160a01b0383169081179091556040517f62bbced765bccc9ed93d0bae1b2a8c86e13b4663f8bf27d5936d9d619194c8a990600090a250565b6051546000906001600160d81b031661134583670de0b6b3a7640000614f57565b610f549190614f6e565b61135b33826000612bc4565b61113033826001612bc4565b60008061137383612cc5565b925050506113818482612d04565b949350505050565b6001600160a01b031660009081526020819052604090205490565b605154600090670de0b6b3a764000090611345906001600160d81b031684614f57565b60405163d505accf60e01b81526001600160a01b038781166004830152306024830152604482018790526064820186905260ff8516608483015260a4820184905260c482018390527f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae9169063d505accf9060e401600060405180830381600087803b15801561145557600080fd5b505af1158015611469573d6000803e3d6000fd5b50505050611478868787612d2f565b505050505050565b61148a6000611004565b6001600160a01b0316336001600160a01b0316146114ba5760405162461bcd60e51b8152600401610d5890614e73565b61113081612edc565b6114cc33612aa9565b565b6114d86001611004565b6001600160a01b0316336001600160a01b0316146115385760405162461bcd60e51b815260206004820152601960248201527f43414c4c45525f4e4f545f434f4f4c444f574e5f41444d494e000000000000006044820152606401610d58565b61113081612f69565b604080516001808252818301909252600091829190816020015b611588604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b81526020019060019003908161155b5790505090506040518060600160405280306001600160a01b031681526020016115c085611389565b81526020016115ce60025490565b815250816000815181106115e4576115e4614f90565b60200260200101819052506115f98382612f9e565b6001600160a01b0384166000908152603d60205260409020546110c29190614f44565b60006110c23384846130ac565b606060048054610f6990614ed3565b6000610f5460025490565b6110643383836127ce565b6116586002611004565b6001600160a01b0316336001600160a01b0316146116885760405162461bcd60e51b8152600401610d5890614f0d565b6116938484846127ce565b5061169f84848361244e565b50505050565b600033816116b38286611e71565b9050838110156117135760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610d58565b6110e2828686840361232a565b600954600590811161178b5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610d58565b600981905561179d8686868686613197565b60405163095ea7b360e01b815230600482015260001960248201527f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae96001600160a01b03169063095ea7b3906044016020604051808303816000875af115801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f9190614fa6565b50505050505050565b600033610ffa81858561297a565b60008281526045602052604090205482906001600160a01b031633146118a65760405162461bcd60e51b815260206004820152601560248201527421a0a62622a92fa727aa2fa927a622afa0a226a4a760591b6044820152606401610d58565b60008381526046602090815260409182902080546001600160a01b0319166001600160a01b03861690811790915591518581527fc3d1bf52795a20771ee6de3e59948fd83e10db956122d4709a3b86c512963855910160405180910390a2505050565b611074338383612d2f565b61191e6000611004565b6001600160a01b0316336001600160a01b03161461194e5760405162461bcd60e51b8152600401610d5890614e73565b6051805460ff60d81b191690556040517fcdee157e87ba915be681d4fa3f3d511afe7348eca06448a3accd6ac227fa40af90600090a1565b336001600160a01b037f000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d516146119f65760405162461bcd60e51b815260206004820152601560248201527427a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a960591b6044820152606401610d58565b60005b8151811015611a3757600254828281518110611a1757611a17614f90565b602090810291909101810151015280611a2f81614fc8565b9150506119f9565b50611130816132bb565b6000806000611a4f84612cc5565b5091509150611a6082828743613429565b95945050505050565b6000611a756002611004565b6001600160a01b0316336001600160a01b031614611aa55760405162461bcd60e51b8152600401610d5890614f0d565b6110bf8484846130ac565b6000806000611abe84612cc5565b5091509150611acf82828888613429565b9695505050505050565b604080517f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a001604051602081830303815290604052805190602001209050600060435482604051602001611b57929190614fe1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611bc2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bf55760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b0381166000908152604460205260408120805491611c1983614fc8565b919050558814611c5b5760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b6044820152606401610d58565b86421115611c7b5760405162461bcd60e51b8152600401610d5890615027565b611c87818a6000612bc4565b611c93818a6001612bc4565b505050505050505050565b6001600160a01b038716611ce45760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22fa7aba722a960991b6044820152606401610d58565b83421115611d045760405162461bcd60e51b8152600401610d5890615027565b6001600160a01b0387811660008181526044602090815260408083205460435482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958c166060860152608085018b905260a0850181905260c08086018b90528251808703909101815260e086019092528151919092012090939192611d9b92919061010001614fe1565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa158015611e03573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614611e3d5760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b0389166000908152604460205260409020600183019055611c9389898961232a565b611074338383612bc4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611ea73384846127ce565b5061106433848361244e565b60007f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e588886001811115611ee957611ee9615053565b6040805160208101949094526001600160a01b039092169183019190915260608201526080810187905260a0810186905260c001604051602081830303815290604052805190602001209050600060435482604051602001611f4c929190614fe1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611fb7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611fea5760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b038116600090815260446020526040812080549161200e83614fc8565b9190505588146120505760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b6044820152606401610d58565b864211156120705760405162461bcd60e51b8152600401610d5890615027565b61207b818b8b612bc4565b50505050505050505050565b60008181526046602052604090205481906001600160a01b031633146120ef5760405162461bcd60e51b815260206004820152601d60248201527f43414c4c45525f4e4f545f50454e44494e475f524f4c455f41444d494e0000006044820152606401610d58565b60008281526045602090815260408083208054336001600160a01b0319918216811790925560468452938290208054909416909355518481527f83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf91015b60405180910390a25050565b6000821580612165575081155b1561217257506000610f54565b61217e82600019614f6e565b8311156121cd5760405162461bcd60e51b815260206004820152601c60248201527f4d4154485f4d554c5449504c49434154494f4e5f4f564552464c4f57000000006044820152606401610d58565b6127106121da8385614f57565b6110c29190614f6e565b60006110c2836001816121ff670de0b6b3a764000087614f57565b6122099190614f44565b6122139190614ec0565b61221d9190614f6e565b613472565b6040518060400160405280612236436134df565b64ffffffffff90811682526001600160d81b038085166020938401526051805463ffffffff600160e01b9182900481166000908152605287526040902087519790960151909316600160281b0295909316949094179092558254601c926122a09290910416615069565b91906101000a81548163ffffffff021916908363ffffffff16021790555061113081613545565b6040516001600160a01b03831660248201526044810182905261106490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526135e1565b6001600160a01b03831661238c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610d58565b6001600160a01b0382166123ed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610d58565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b8060000361246e5760405162461bcd60e51b8152600401610d589061508c565b6001600160a01b0383166000908152603e602090815260409182902082518084019093525464ffffffffff81168352600160281b90046001600160d81b031690820152605154600160d81b900460ff166125ad57604f5481516124d8919064ffffffffff16614f44565b421161251e5760405162461bcd60e51b815260206004820152601560248201527424a729aaa32324a1a4a2a72a2fa1a7a7a62227aba760591b6044820152606401610d58565b604f5481517f000000000000000000000000000000000000000000000000000000000002a300916125559164ffffffffff16614f44565b61255f9042614ec0565b11156125ad5760405162461bcd60e51b815260206004820152601760248201527f554e5354414b455f57494e444f575f46494e49534845440000000000000000006044820152606401610d58565b60006125b885611389565b605154909150600090600160d81b900460ff166125e25782602001516001600160d81b03166125e4565b815b9050806000036126365760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f5a45524f5f4d41585f52454445454d41424c4500000000006044820152606401610d58565b60008185116126455784612647565b815b9050612655878460016136b3565b50600061266182611324565b905061266d8883613762565b845164ffffffffff161561273a578185602001516001600160d81b03166126949190614ec0565b6000036126b9576001600160a01b0388166000908152603e602052604081205561273a565b6126c2826138a0565b6001600160a01b0389166000908152603e60205260409020546126fe916001600160b81b031690600160281b90046001600160d81b03166150b9565b6001600160a01b0389166000908152603e6020526040902080546001600160d81b0392909216600160281b0264ffffffffff9092169190911790555b61276e6001600160a01b037f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae91688836122c7565b866001600160a01b0316886001600160a01b03167f3f693fff038bb8a046aa76d9516190ac7444f7d69cf952c4cbdc086fdef2d6fc83856040516127bc929190918252602082015260400190565b60405180910390a35050505050505050565b6000816000036127f05760405162461bcd60e51b8152600401610d589061508c565b6000612806856127ff87611389565b60006136b3565b905060008184116128175783612819565b815b90508060000361283b5760405162461bcd60e51b8152600401610d589061508c565b6128458183614ec0565b6001600160a01b038088166000908152603d60205260409020919091556128b0907f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae9167f00000000000000000000000025f2226b597e8f9514b3f68f00f494cf4f2864918784612b8c565b846001600160a01b0316866001600160a01b03167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c7836040516128f591815260200190565b60405180910390a395945050505050565b60006129128484611e71565b9050600019811461169f578181101561296d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610d58565b61169f848484840361232a565b600061298584611389565b9050612993848260016136b3565b50826001600160a01b0316846001600160a01b031614612a9e5760006129b884611389565b90506129c6848260016136b3565b506001600160a01b0385166000908152603e602090815260409182902082518084019093525464ffffffffff8116808452600160281b9091046001600160d81b03169183019190915215612a9b57838303612a39576001600160a01b0386166000908152603e6020526040812055612a9b565b60208101516001600160d81b0316612a518585614ec0565b1015612a9b57612a618484614ec0565b6001600160a01b0387166000908152603e60205260409020805464ffffffffff166001600160b81b0392909216600160281b029190911790555b50505b61169f848484613909565b6000612ab482611389565b905080600003612b065760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e00000000006044820152606401610d58565b60408051808201825264ffffffffff42811682526001600160d81b0380851660208085019182526001600160a01b0388166000818152603e9092529086902094519151909216600160281b0292169190911790915590517f8a05f911d8ab7fc50fec37ef4ba7f9bfcb1a3c191c81dcd824ad0946c4e20d659061214c9084815260200190565b6040516001600160a01b038085166024830152831660448201526064810182905261169f9085906323b872dd60e01b906084016122f3565b6001600160a01b038216612c0e5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f44454c45474154454560781b6044820152606401610d58565b6000612c1982612cc5565b925050506000612c2885611389565b90506000612c368684612d04565b6001600160a01b03878116600090815260208690526040902080546001600160a01b0319169188169190911790559050612c7281868487613ab8565b846001600160a01b0316866001600160a01b03167fe8d51c8e11bd570db1734c8ec775785330e77007feed45c43b608ef33ff914bd86604051612cb59190615102565b60405180910390a3505050505050565b6000808080846001811115612cdc57612cdc615053565b03612cf157506006915060079050603f612cfd565b50604091506041905060425b9193909250565b6001600160a01b03808316600090815260208390526040812054909116806110c25783915050610f54565b605154600160d81b900460ff1615612d7c5760405162461bcd60e51b815260206004820152601060248201526f534c415348494e475f4f4e474f494e4760801b6044820152606401610d58565b80600003612d9c5760405162461bcd60e51b8152600401610d589061508c565b6000612da783611389565b90506000612dbf843084612dba60025490565b613cbc565b90508015612e42576001600160a01b0384166000908152603d6020526040902054612deb908290614f44565b6001600160a01b0385166000818152603d60209081526040918290209390935580519182529181018390527f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76910160405180910390a15b6000612e4d846113a4565b9050612e846001600160a01b037f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae916873087612b8c565b612e8e8582613d7d565b846001600160a01b0316866001600160a01b03167f6c86f3fd5118b3aa8bb4f389a617046de0a3d3d477de1a1673d227f802f616dc8684604051612cb5929190918252602082015260400190565b6127108110612f2d5760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f534c415348494e475f50455243454e5441474500000000006044820152606401610d58565b60508190556040518181527fb79c2d6c7f5c95eec9dc05affc0ed002620a4ec6d72b7b0744cc8638168c600a906020015b60405180910390a150565b604f8190556040518181527fbbf67247b5c97564e30ffc0a355e71c006836de7b9149e09e3d5d6054cb0335590602001612f5e565b600080805b83518110156130a4576000603c6000868481518110612fc457612fc4614f90565b602090810291909101810151516001600160a01b031682528101919091526040016000908120600181015481548851929450613032926001600160801b0380831692600160801b900416908a908890811061302157613021614f90565b602002602001015160400151613e48565b905061308386848151811061304957613049614f90565b602002602001015160200151828460020160008b6001600160a01b03166001600160a01b0316815260200190815260200160002054613f53565b61308d9085614f44565b93505050808061309c90614fc8565b915050612fa3565b509392505050565b60007f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae96001600160a01b03167f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae96001600160a01b03161461314f5760405162461bcd60e51b815260206004820181905260248201527f5245574152445f544f4b454e5f49535f4e4f545f5354414b45445f544f4b454e6044820152606401610d58565b60006131658561315e87611389565b60016136b3565b905060008184116131765783613178565b815b90508015611a605761318b8630836127ce565b50611a60308683612d2f565b60408051600380825260808201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816131af579050509050604051806040016040528060008152602001876001600160a01b03168152508160008151811061320a5761320a614f90565b6020026020010181905250604051806040016040528060018152602001866001600160a01b03168152508160018151811061324757613247614f90565b6020026020010181905250604051806040016040528060028152602001856001600160a01b03168152508160028151811061328457613284614f90565b602002602001018190525061329881613f7f565b6132a183612edc565b6132aa82612f69565b611478670de0b6b3a7640000612222565b60005b8151811015611074576000603c60008484815181106132df576132df614f90565b6020026020010151604001516001600160a01b03166001600160a01b03168152602001908152602001600020905061335283838151811061332257613322614f90565b6020026020010151604001518285858151811061334157613341614f90565b60200260200101516020015161415b565b5082828151811061336557613365614f90565b60209081029190910101515181546fffffffffffffffffffffffffffffffff19166001600160801b0390911617815582518390839081106133a8576133a8614f90565b6020026020010151604001516001600160a01b03167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8484815181106133f0576133f0614f90565b602090810291909101810151516040516001600160801b0390911681520160405180910390a2508061342181614fc8565b9150506132be565b60515460009061344990605290600160e01b900463ffffffff1684614213565b670de0b6b3a764000061345e87878787614320565b6134689190614f57565b611a609190614f6e565b60006001600160d81b038211156134db5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663136206269747360c81b6064820152608401610d58565b5090565b600064ffffffffff8211156134db5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526530206269747360d01b6064820152608401610d58565b806001600160d81b03166000036135935760405162461bcd60e51b81526020600482015260126024820152715a45524f5f45584348414e47455f5241544560701b6044820152606401610d58565b605180546001600160d81b0319166001600160d81b0383169081179091556040519081527fa9c433f9734baa3cf48b209454bb0ace054e191f677ba50e74b696c0d35ef26290602001612f5e565b6000613636826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143fa9092919063ffffffff16565b80519091501561106457808060200190518101906136549190614fa6565b6110645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d58565b6000806136c5853086612dba60025490565b6001600160a01b0386166000908152603d6020526040812054919250906136ed908390614f44565b90508115611a60578315613717576001600160a01b0386166000908152603d602052604090208190555b604080516001600160a01b0388168152602081018490527f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76910160405180910390a195945050505050565b6001600160a01b0382166137c25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610d58565b6137ce82600083614409565b6001600160a01b038216600090815260208190526040902054818110156138425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610d58565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60006001600160b81b038211156134db5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663834206269747360c81b6064820152608401610d58565b6001600160a01b03831661396d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610d58565b6001600160a01b0382166139cf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610d58565b6139da838383614409565b6001600160a01b03831660009081526020819052604090205481811015613a525760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610d58565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361169f565b826001600160a01b0316846001600160a01b0316031561169f57600080613ade83612cc5565b5090925090506001600160a01b03861615613bcf576001600160a01b0386166000908152602082905260408120548015613b5e576001600160a01b038816600090815260208590526040812090613b36600184614ec0565b8152602081019190915260400160002054600160801b90046001600160801b03169150613b6a565b613b6788611389565b91505b613b8084848a85613b7b8b82614ec0565b614588565b6001600160a01b0388167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f613bb58885614ec0565b87604051613bc4929190615110565b60405180910390a250505b6001600160a01b03851615611478576001600160a01b0385166000908152602082905260408120548015613c49576001600160a01b038716600090815260208590526040812090613c21600184614ec0565b8152602081019190915260400160002054600160801b90046001600160801b03169150613c55565b613c5287611389565b91505b613c6684848985613b7b8b82614f44565b6001600160a01b0387167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f613c9b8885614f44565b87604051613caa929190615110565b60405180910390a25050505050505050565b6001600160a01b038084166000908152603c602090815260408083209388168352600284019091528120549091908280613cf788858861415b565b9050808314613d71578615613d1457613d11878285613f53565b91505b6001600160a01b03808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90613d689085815260200190565b60405180910390a35b50979650505050505050565b6001600160a01b038216613dd35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610d58565b613ddf60008383614409565b8060026000828254613df19190614f44565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000831580613e55575081155b80613e68575042836001600160801b0316145b80613e9c57507f00000000000000000000000000000000000000000000000000000001207eb548836001600160801b031610155b15613ea8575083611381565b60007f00000000000000000000000000000000000000000000000000000001207eb5484211613ed75742613ef9565b7f00000000000000000000000000000000000000000000000000000001207eb5485b90506000613f106001600160801b03861683614ec0565b90508684613f206012600a615208565b613f2a848a614f57565b613f349190614f57565b613f3e9190614f6e565b613f489190614f44565b979650505050505050565b6000613f616012600a615208565b613f6b8385614ec0565b613f759086614f57565b6110bf9190614f6e565b60005b81518110156110745760006001600160a01b031660456000848481518110613fac57613fac614f90565b602090810291909101810151518252810191909152604001600020546001600160a01b031614801561400e575060006001600160a01b0316828281518110613ff657613ff6614f90565b6020026020010151602001516001600160a01b031614155b61405a5760405162461bcd60e51b815260206004820152601b60248201527f41444d494e5f43414e4e4f545f42455f494e495449414c495a454400000000006044820152606401610d58565b81818151811061406c5761406c614f90565b6020026020010151602001516045600084848151811061408e5761408e614f90565b602002602001015160000151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106140de576140de614f90565b6020026020010151602001516001600160a01b03167f83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf83838151811061412657614126614f90565b60200260200101516000015160405161414191815260200190565b60405180910390a28061415381614fc8565b915050613f82565b6001820154825460009190600160801b90046001600160801b031642819003614186575090506110c2565b84546000906141a19084906001600160801b03168488613e48565b90508281146141f057600186018190556040518181526001600160a01b038816907f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc9060200160405180910390a25b85546001600160801b03428116600160801b029116178655925050509392505050565b600019820160009081526020849052604081205464ffffffffff16821061425e57506000198201600090815260208490526040902054600160281b90046001600160d81b03166110c2565b600060001984015b818111156142f75760028282030481036000818152602088815260409182902082518084019093525464ffffffffff8116808452600160281b9091046001600160d81b0316918301919091528690036142d157602001516001600160d81b031693506110c292505050565b805164ffffffffff168611156142e9578193506142f0565b6001820392505b5050614266565b5060009081526020949094525050604090912054600160281b90046001600160d81b0316919050565b6000438211156143695760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa12627a1a5afa72aa6a122a960611b6044820152606401610d58565b6001600160a01b0383166000908152602085905260408120549081900361439b5761439384611389565b915050611381565b6001600160a01b0384166000908152602087815260408083208380529091529020546001600160801b03168310156143d7576000915050611381565b6001600160a01b0384166000908152602087905260409020611acf90828561469e565b60606110bf84846000856147aa565b6053546001600160a01b031680156144e057806001600160a01b0316635b9c4cf1858561443588611389565b61443e88611389565b6040516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152604483015260648201526084810185905260a401600060405180830381600087803b15801561449957600080fd5b505af19250505080156144aa575060015b6144e0573d8080156144d8576040519150601f19603f3d011682016040523d82523d6000602084013e6144dd565b606091505b50505b6001600160a01b038085166000908152603f6020526040808220548684168352912054908216911681614511578591505b6001600160a01b0381166145225750835b61452f8282866000613ab8565b6001600160a01b03808716600090815260426020526040808220548884168352912054908216911681614560578791505b6001600160a01b0381166145715750855b61457e8282886001613ab8565b5050505050505050565b6001600160a01b038316600090815260208581526040808320549188905290912043919081158015906145ea57506001600160801b0383168160006145ce600186614ec0565b81526020810191909152604001600020546001600160801b0316145b1561462e57838160006145fe600186614ec0565b8152602081019190915260400160002080546001600160801b03928316600160801b02921691909117905561457e565b6040805180820182526001600160801b038086168252868116602080840191825260008781529086905293909320915192518116600160801b02921691909117905561467b826001614f44565b6001600160a01b0387166000908152602089905260409020555050505050505050565b60001982016000908152602084905260408120546001600160801b031682106146eb57506000198201600090815260208490526040902054600160801b90046001600160801b03166110c2565b600060001984015b81811115614781576002828203048103600081815260208881526040918290208251808401909352546001600160801b03808216808552600160801b909204169183019190915286900361475957602001516001600160801b031693506110c292505050565b80516001600160801b03168611156147735781935061477a565b6001820392505b50506146f3565b5060009081526020949094525050604090912054600160801b90046001600160801b0316919050565b60608247101561480b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610d58565b600080866001600160a01b031685876040516148279190615214565b60006040518083038185875af1925050503d8060008114614864576040519150601f19603f3d011682016040523d82523d6000602084013e614869565b606091505b5091509150613f4887838387606083156148e45782516000036148dd576001600160a01b0385163b6148dd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d58565b5081611381565b61138183838151156148f95781518083602001fd5b8060405162461bcd60e51b8152600401610d5891906149a4565b6001600160a01b038116811461113057600080fd5b6000806040838503121561493b57600080fd5b823561494681614913565b946020939093013593505050565b60005b8381101561496f578181015183820152602001614957565b50506000910152565b60008151808452614990816020860160208601614954565b601f01601f19169290920160200192915050565b6020815260006110c26020830184614978565b6000602082840312156149c957600080fd5b81356110c281614913565b6000602082840312156149e657600080fd5b5035919050565b600080600060608486031215614a0257600080fd5b8335614a0d81614913565b92506020840135614a1d81614913565b929592945050506040919091013590565b60008060408385031215614a4157600080fd5b8235614a4c81614913565b91506020830135614a5c81614913565b809150509250929050565b803560028110614a7657600080fd5b919050565b60008060408385031215614a8e57600080fd5b8235614a9981614913565b9150614aa760208401614a67565b90509250929050565b803560ff81168114614a7657600080fd5b60008060008060008060c08789031215614ada57600080fd5b8635614ae581614913565b95506020870135945060408701359350614b0160608801614ab0565b92506080870135915060a087013590509295509295509295565b600060208284031215614b2d57600080fd5b813563ffffffff811681146110c257600080fd5b60008060008060808587031215614b5757600080fd5b8435614b6281614913565b93506020850135614b7281614913565b93969395505050506040820135916060013590565b600080600080600060a08688031215614b9f57600080fd5b8535614baa81614913565b94506020860135614bba81614913565b93506040860135614bca81614913565b94979396509394606081013594506080013592915050565b60008060408385031215614bf557600080fd5b823591506020830135614a5c81614913565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715614c4057614c40614c07565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715614c6f57614c6f614c07565b604052919050565b60006020808385031215614c8a57600080fd5b823567ffffffffffffffff80821115614ca257600080fd5b818501915085601f830112614cb657600080fd5b813581811115614cc857614cc8614c07565b614cd6848260051b01614c46565b81815284810192506060918202840185019188831115614cf557600080fd5b938501935b82851015613d715780858a031215614d125760008081fd5b614d1a614c1d565b85356001600160801b0381168114614d325760008081fd5b81528587013587820152604080870135614d4b81614913565b9082015284529384019392850192614cfa565b600080600060608486031215614d7357600080fd5b8335614d7e81614913565b925060208401359150614d9360408501614a67565b90509250925092565b600080600080600080600060e0888a031215614db757600080fd5b8735614dc281614913565b96506020880135614dd281614913565b95506040880135945060608801359350614dee60808901614ab0565b925060a0880135915060c0880135905092959891949750929550565b600080600060608486031215614e1f57600080fd5b8335614e2a81614913565b95602085013595506040909401359392505050565b600080600080600080600060e0888a031215614e5a57600080fd5b8735614e6581614913565b9650614dd260208901614a67565b60208082526019908201527f43414c4c45525f4e4f545f534c415348494e475f41444d494e00000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f5457610f54614eaa565b600181811c90821680614ee757607f821691505b602082108103614f0757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526017908201527f43414c4c45525f4e4f545f434c41494d5f48454c504552000000000000000000604082015260600190565b80820180821115610f5457610f54614eaa565b8082028115828204841417610f5457610f54614eaa565b600082614f8b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614fb857600080fd5b815180151581146110c257600080fd5b600060018201614fda57614fda614eaa565b5060010190565b61190160f01b81526002810192909252602282015260420190565b602080825260119082015270494e56414c49445f5349474e415455524560781b604082015260600190565b60208082526012908201527124a72b20a624a22fa2ac2824a920aa24a7a760711b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b600063ffffffff80831681810361508257615082614eaa565b6001019392505050565b6020808252601390820152721253959053125117d6915493d7d05353d55395606a1b604082015260600190565b6001600160d81b038281168282160390808211156150d9576150d9614eaa565b5092915050565b600281106150fe57634e487b7160e01b600052602160045260246000fd5b9052565b60208101610f5482846150e0565b828152604081016110c260208301846150e0565b600181815b8085111561515f57816000190482111561514557615145614eaa565b8085161561515257918102915b93841c9390800290615129565b509250929050565b60008261517657506001610f54565b8161518357506000610f54565b816001811461519957600281146151a3576151bf565b6001915050610f54565b60ff8411156151b4576151b4614eaa565b50506001821b610f54565b5060208310610133831016604e8410600b84101617156151e2575081810a610f54565b6151ec8383615124565b806000190482111561520057615200614eaa565b029392505050565b60006110c28383615167565b60008251615226818460208701614954565b919091019291505056fea2646970667358221220eca7538023765a4de548dace73c5919366f9605051f5141240ca82e0c4ea703c64736f6c63430008110033",
        "subtraces": 1,
        "trace_address": [
          2,
          0,
          1,
        ],
        "type": "CREATE",
      },
      {
        "call_type": "STATICCALL",
        "from": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
        "gas": 27953874,
        "gas_cost": 27953974,
        "gas_in": 28397686,
        "gas_used": 3168,
        "input": "0x313ce567",
        "outLen": 32,
        "outOff": 544,
        "output": "0x0000000000000000000000000000000000000000000000000000000000000012",
        "subtraces": 1,
        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        "trace_address": [
          2,
          0,
          1,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "DELEGATECALL",
        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        "gas": 27516415,
        "gas_cost": 27516515,
        "gas_in": 27953283,
        "gas_used": 2436,
        "input": "0x313ce567",
        "output": "0x0000000000000000000000000000000000000000000000000000000000000012",
        "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
        "trace_address": [
          2,
          0,
          1,
          0,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "CALL",
        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
        "gas": 24232450,
        "gas_cost": 24232550,
        "gas_in": 24617192,
        "gas_used": 210213,
        "input": "0x9623609d0000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5000000000000000000000000aa9faa887bce5182c39f68ac46c43f36723c395b000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a4a6b63eb8000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d50000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000001a5e0000000000000000000000000000000000000000000000000000000000",
        "outOff": 324,
        "subtraces": 1,
        "to": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
        "trace_address": [
          2,
          0,
          2,
        ],
        "type": "CALL",
      },
      {
        "call_type": "CALL",
        "from": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
        "gas": 23849934,
        "gas_cost": 23850034,
        "gas_in": 24228604,
        "gas_used": 206219,
        "input": "0x4f1ef286000000000000000000000000aa9faa887bce5182c39f68ac46c43f36723c395b000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a4a6b63eb8000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d50000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000001a5e0000000000000000000000000000000000000000000000000000000000",
        "outOff": 352,
        "subtraces": 1,
        "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
        "trace_address": [
          2,
          0,
          2,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "DELEGATECALL",
        "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
        "gas": 23470145,
        "gas_cost": 23470245,
        "gas_in": 23842786,
        "gas_used": 198872,
        "input": "0xa6b63eb8000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d50000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000001a5e00",
        "outOff": 128,
        "subtraces": 1,
        "to": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
        "trace_address": [
          2,
          0,
          2,
          0,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "CALL",
        "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
        "gas": 22932967,
        "gas_cost": 22933067,
        "gas_in": 23297082,
        "gas_used": 25491,
        "input": "0x095ea7b30000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "outLen": 32,
        "outOff": 704,
        "output": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "subtraces": 1,
        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        "trace_address": [
          2,
          0,
          2,
          0,
          0,
          0,
        ],
        "type": "CALL",
      },
      {
        "call_type": "DELEGATECALL",
        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
        "gas": 22573954,
        "gas_cost": 22574054,
        "gas_in": 22932370,
        "gas_used": 24753,
        "input": "0x095ea7b30000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "output": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
        "trace_address": [
          2,
          0,
          2,
          0,
          0,
          0,
          0,
        ],
        "type": "CALL",
      },
    ],
    "contract_ids": [
      "eth:1:0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
      "eth:1:0xec568fffba86c094cf06b22134b23074dfe2252c",
      "eth:1:0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
      "eth:1:0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
      "eth:1:0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
      "eth:1:0x96f68837877fd0414b55050c9e794aecdbcfca59",
      "eth:1:0xe427fcbd54169136391cfedf68e96abb13da87a0",
      "eth:1:0x4da27a545c0c5b758a6ba100e3a049001de870f5",
      "eth:1:0xaa9faa887bce5182c39f68ac46c43f36723c395b",
      "eth:1:0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
    ],
    "cumulative_gas_used": 0,
    "decoded_input": null,
    "deposit_tx": false,
    "effective_gas_price": 0,
    "from": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
    "function_selector": "",
    "gas": 30000000,
    "gas_fee_cap": 0,
    "gas_price": 0,
    "gas_tip_cap": 0,
    "gas_used": 4670319,
    "hash": "0xa8599ff6883b67a280f95003a575de6da10369fd0e99fa735d5497834cf084e3",
    "index": 0,
    "input": "0xfe0d94c100000000000000000000000000000000000000000000000000000000000000d6",
    "l1_block_number": 0,
    "l1_timestamp": 0,
    "method": "",
    "mint": null,
    "network_id": "1",
    "nonce": 0,
    "sig": {
      "r": "0x0",
      "s": "0x0",
      "v": "0x0",
    },
    "status": true,
    "system_tx": false,
    "timestamp": "2023-05-18T22:39:12Z",
    "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
    "transaction_info": {
      "balance_diff": null,
      "block_number": 17240897,
      "call_trace": {
        "absolute_position": 75,
        "block_timestamp": "0001-01-01T00:00:00Z",
        "call_type": "CALL",
        "caller": {
          "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
          "balance": "10000000000000000000",
        },
        "caller_op": "CALL",
        "caller_pc": 0,
        "calls": [
          {
            "absolute_position": 81,
            "block_timestamp": "0001-01-01T00:00:00Z",
            "call_type": "JUMPDEST",
            "caller": {
              "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
              "balance": "10000000000000000000",
            },
            "caller_code_length": 28,
            "caller_code_start": 36459,
            "caller_file_index": 0,
            "caller_line_number": 1092,
            "caller_op": "JUMP",
            "caller_pc": 6387,
            "calls": [
              {
                "absolute_position": 8272,
                "block_timestamp": "0001-01-01T00:00:00Z",
                "call_type": "STATICCALL",
                "caller": {
                  "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                  "balance": "10000000000000000",
                },
                "caller_code_length": 81,
                "caller_code_start": 43308,
                "caller_file_index": 0,
                "caller_line_number": 1296,
                "caller_op": "STATICCALL",
                "caller_pc": 3707,
                "calls": [
                  {
                    "absolute_position": 314,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "call_type": "JUMPDEST",
                    "caller": {
                      "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                      "balance": "10000000000000000",
                    },
                    "caller_code_length": 37,
                    "caller_code_start": 10447,
                    "caller_file_index": 0,
                    "caller_line_number": 346,
                    "caller_op": "JUMP",
                    "caller_pc": 1600,
                    "calls": [
                      {
                        "absolute_position": 2167,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "STATICCALL",
                        "caller": {
                          "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          "balance": "0",
                        },
                        "caller_code_length": 38,
                        "caller_code_start": 10967,
                        "caller_file_index": 0,
                        "caller_line_number": 365,
                        "caller_op": "STATICCALL",
                        "caller_pc": 4006,
                        "calls": null,
                        "contract_name": "Executor",
                        "decoded_input": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "proposalId",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            "value": "214",
                          },
                        ],
                        "decoded_output": [
                          {
                            "soltype": {
                              "components": [
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "id",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "creator",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "executor",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "targets",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "address",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "address[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "values",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "uint",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "signatures",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "string",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "string[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "calldatas",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "bytes",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "bytes[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "withDelegatecalls",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "bool",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "bool[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "startBlock",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "endBlock",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "executionTime",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "forVotes",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "againstVotes",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "executed",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "bool",
                                  },
                                  "storage_location": "default",
                                  "type": "bool",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "canceled",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "bool",
                                  },
                                  "storage_location": "default",
                                  "type": "bool",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "strategy",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "ipfsHash",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "bytes",
                                  },
                                  "storage_location": "default",
                                  "type": "bytes32",
                                },
                              ],
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "",
                              "offset": 0,
                              "storage_location": "default",
                              "type": "tuple",
                            },
                            "value": {
                              "againstVotes": "0",
                              "calldatas": [
                                "0x",
                              ],
                              "canceled": false,
                              "creator": "0x329c54289ff5d6b7b7dae13592c6b1eda1543ed4",
                              "endBlock": "17240895",
                              "executed": false,
                              "executionTime": "1684449552",
                              "executor": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                              "forVotes": "3000000000000000000000000",
                              "id": "214",
                              "ipfsHash": "0x2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb00",
                              "signatures": [
                                "execute()",
                              ],
                              "startBlock": "17176895",
                              "strategy": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                              "targets": [
                                "0xe427fcbd54169136391cfedf68e96abb13da87a0",
                              ],
                              "values": [
                                "0",
                              ],
                              "withDelegatecalls": [
                                true,
                              ],
                            },
                          },
                        ],
                        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                        "from_balance": "0",
                        "function_code_length": 925,
                        "function_code_start": 41309,
                        "function_file_index": 0,
                        "function_line_number": 1236,
                        "function_name": "getProposalById",
                        "function_op": "JUMPDEST",
                        "function_pc": 1343,
                        "gas": 29035155,
                        "gas_used": 40469,
                        "hash": "",
                        "input": "0x3656de2100000000000000000000000000000000000000000000000000000000000000d6",
                        "network_id": "",
                        "output": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000d6000000000000000000000000329c54289ff5d6b7b7dae13592c6b1eda1543ed400000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc42990000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000106193f000000000000000000000000000000000000000000000000000000000107133f000000000000000000000000000000000000000000000000000000006466a910000000000000000000000000000000000000000000027b46536c66c8e3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a
                        "refund_gas": 460875,
                        "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                        "to_balance": "10000000000000000",
                        "value": null,
                      },
                      {
                        "absolute_position": 4122,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "STATICCALL",
                        "caller": {
                          "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          "balance": "0",
                        },
                        "caller_code_length": 94,
                        "caller_code_start": 11034,
                        "caller_file_index": 0,
                        "caller_line_number": 366,
                        "caller_op": "STATICCALL",
                        "caller_pc": 4135,
                        "calls": [
                          {
                            "absolute_position": 3742,
                            "block_timestamp": "0001-01-01T00:00:00Z",
                            "call_type": "JUMPDEST",
                            "caller": {
                              "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                              "balance": "0",
                            },
                            "caller_code_length": 40,
                            "caller_code_start": 3874,
                            "caller_file_index": 0,
                            "caller_line_number": 102,
                            "caller_op": "JUMP",
                            "caller_pc": 276,
                            "calls": [
                              {
                                "absolute_position": 4036,
                                "block_timestamp": "0001-01-01T00:00:00Z",
                                "call_type": "STATICCALL",
                                "caller": {
                                  "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                  "balance": "0",
                                },
                                "caller_code_length": 39,
                                "caller_code_start": 3546,
                                "caller_file_index": 0,
                                "caller_line_number": 93,
                                "caller_op": "STATICCALL",
                                "caller_pc": 460,
                                "calls": [
                                  {
                                    "absolute_position": 3841,
                                    "block_timestamp": "0001-01-01T00:00:00Z",
                                    "call_type": "JUMPDEST",
                                    "caller": {
                                      "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                      "balance": "0",
                                    },
                                    "caller_code_length": 11,
                                    "caller_code_start": 462,
                                    "caller_file_index": 5,
                                    "caller_line_number": 16,
                                    "caller_op": "JUMP",
                                    "caller_pc": 119,
                                    "calls": [
                                      {
                                        "absolute_position": 3849,
                                        "block_timestamp": "0001-01-01T00:00:00Z",
                                        "call_type": "JUMPDEST",
                                        "caller": {
                                          "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                          "balance": "0",
                                        },
                                        "caller_code_length": 15,
                                        "caller_code_start": 2025,
                                        "caller_file_index": 5,
                                        "caller_line_number": 64,
                                        "caller_op": "JUMP",
                                        "caller_pc": 802,
                                        "calls": [
                                          {
                                            "absolute_position": 3853,
                                            "block_timestamp": "0001-01-01T00:00:00Z",
                                            "call_type": "JUMPDEST",
                                            "caller": {
                                              "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                              "balance": "0",
                                            },
                                            "caller_code_length": 8,
                                            "caller_code_start": 3635,
                                            "caller_file_index": 1,
                                            "caller_line_number": 117,
                                            "caller_op": "JUMP",
                                            "caller_pc": 2125,
                                            "calls": null,
                                            "contract_name": "InitializableAdminUpgradeabilityProxy",
                                            "decoded_output": [
                                              {
                                                "soltype": {
                                                  "components": null,
                                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                  "indexed": false,
                                                  "name": "adm",
                                                  "offset": 0,
                                                  "simple_type": {
                                                    "type": "address",
                                                  },
                                                  "storage_location": "default",
                                                  "type": "address",
                                                },
                                                "value": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                                              },
                                            ],
                                            "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                            "from_balance": null,
                                            "function_code_length": 136,
                                            "function_code_start": 3096,
                                            "function_file_index": 1,
                                            "function_line_number": 94,
                                            "function_name": "_admin",
                                            "function_op": "JUMPDEST",
                                            "function_pc": 1877,
                                            "gas": 28531344,
                                            "gas_used": 2115,
                                            "hash": "",
                                            "input": "0x",
                                            "network_id": "",
                                            "output": "0x",
                                            "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                            "to_balance": null,
                                            "value": null,
                                          },
                                        ],
                                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                                        "decoded_output": [],
                                        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "from_balance": null,
                                        "function_code_length": 174,
                                        "function_code_start": 3556,
                                        "function_file_index": 1,
                                        "function_line_number": 116,
                                        "function_name": "_willFallback",
                                        "function_op": "JUMPDEST",
                                        "function_pc": 2118,
                                        "gas": 28531374,
                                        "gas_used": 2218,
                                        "hash": "",
                                        "input": "0x",
                                        "network_id": "",
                                        "output": "0x",
                                        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "to_balance": null,
                                        "value": null,
                                      },
                                      {
                                        "absolute_position": 3891,
                                        "block_timestamp": "0001-01-01T00:00:00Z",
                                        "call_type": "JUMPDEST",
                                        "caller": {
                                          "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                          "balance": "0",
                                        },
                                        "caller_code_length": 17,
                                        "caller_code_start": 2056,
                                        "caller_file_index": 5,
                                        "caller_line_number": 65,
                                        "caller_op": "JUMP",
                                        "caller_pc": 813,
                                        "calls": null,
                                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                                        "decoded_output": [
                                          {
                                            "soltype": {
                                              "components": null,
                                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                              "indexed": false,
                                              "name": "impl",
                                              "offset": 0,
                                              "simple_type": {
                                                "type": "address",
                                              },
                                              "storage_location": "default",
                                              "type": "address",
                                            },
                                            "value": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                          },
                                        ],
                                        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "from_balance": null,
                                        "function_code_length": 165,
                                        "function_code_start": 956,
                                        "function_file_index": 2,
                                        "function_line_number": 30,
                                        "function_name": "_implementation",
                                        "function_op": "JUMPDEST",
                                        "function_pc": 1804,
                                        "gas": 28529111,
                                        "gas_used": 2115,
                                        "hash": "",
                                        "input": "0x",
                                        "network_id": "",
                                        "output": "0x",
                                        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "to_balance": null,
                                        "value": null,
                                      },
                                      {
                                        "absolute_position": 3899,
                                        "block_timestamp": "0001-01-01T00:00:00Z",
                                        "call_type": "JUMPDEST",
                                        "caller": {
                                          "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                          "balance": "0",
                                        },
                                        "caller_code_length": 28,
                                        "caller_code_start": 2046,
                                        "caller_file_index": 5,
                                        "caller_line_number": 65,
                                        "caller_op": "JUMP",
                                        "caller_pc": 818,
                                        "calls": [
                                          {
                                            "absolute_position": 4024,
                                            "block_timestamp": "0001-01-01T00:00:00Z",
                                            "call_type": "DELEGATECALL",
                                            "caller": {
                                              "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                              "balance": "0",
                                            },
                                            "caller_code_length": 5,
                                            "caller_code_start": 1348,
                                            "caller_file_index": 5,
                                            "caller_line_number": 39,
                                            "caller_op": "DELEGATECALL",
                                            "caller_pc": 1855,
                                            "calls": [
                                              {
                                                "absolute_position": 3989,
                                                "block_timestamp": "0001-01-01T00:00:00Z",
                                                "call_type": "JUMPDEST",
                                                "caller": {
                                                  "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                                  "balance": "0",
                                                },
                                                "caller_code_length": 19,
                                                "caller_code_start": 30971,
                                                "caller_file_index": 0,
                                                "caller_line_number": 914,
                                                "caller_op": "JUMP",
                                                "caller_pc": 1829,
                                                "calls": null,
                                                "contract_name": "AaveTokenV2",
                                                "decoded_output": [
                                                  {
                                                    "soltype": {
                                                      "components": null,
                                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                      "indexed": false,
                                                      "name": "",
                                                      "offset": 0,
                                                      "simple_type": {
                                                        "type": "uint",
                                                      },
                                                      "storage_location": "default",
                                                      "type": "uint256",
                                                    },
                                                    "value": "16000000000000000000000000",
                                                  },
                                                ],
                                                "from": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                                "from_balance": null,
                                                "function_code_length": 98,
                                                "function_code_start": 16515,
                                                "function_file_index": 0,
                                                "function_line_number": 494,
                                                "function_name": "totalSupply",
                                                "function_op": "JUMPDEST",
                                                "function_pc": 1228,
                                                "gas": 28078361,
                                                "gas_used": 2115,
                                                "hash": "",
                                                "input": "0x",
                                                "network_id": "",
                                                "output": "0x",
                                                "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                                "to_balance": null,
                                                "value": null,
                                              },
                                            ],
                                            "contract_name": "InitializableAdminUpgradeabilityProxy",
                                            "decoded_input": [
                                              {
                                                "soltype": {
                                                  "components": null,
                                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                  "indexed": false,
                                                  "name": "blockNumber",
                                                  "offset": 0,
                                                  "simple_type": {
                                                    "type": "uint",
                                                  },
                                                  "storage_location": "default",
                                                  "type": "uint256",
                                                },
                                                "value": "17176895",
                                              },
                                            ],
                                            "decoded_output": [
                                              {
                                                "soltype": {
                                                  "components": null,
                                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                  "indexed": false,
                                                  "name": "",
                                                  "offset": 0,
                                                  "simple_type": {
                                                    "type": "uint",
                                                  },
                                                  "storage_location": "default",
                                                  "type": "uint256",
                                                },
                                                "value": "16000000000000000000000000",
                                              },
                                            ],
                                            "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                            "from_balance": "0",
                                            "function_code_length": 122,
                                            "function_code_start": 30873,
                                            "function_file_index": 0,
                                            "function_line_number": 913,
                                            "function_name": "totalSupplyAt",
                                            "function_op": "JUMPDEST",
                                            "function_pc": 1820,
                                            "gas": 28078658,
                                            "gas_used": 2510,
                                            "hash": "",
                                            "input": "0x981b24d0000000000000000000000000000000000000000000000000000000000106193f",
                                            "network_id": "",
                                            "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
                                            "refund_gas": 445692,
                                            "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                            "to_balance": "0",
                                            "value": null,
                                          },
                                        ],
                                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                                        "decoded_input": [
                                          {
                                            "soltype": {
                                              "components": null,
                                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                              "indexed": false,
                                              "name": "implementation",
                                              "offset": 0,
                                              "simple_type": {
                                                "type": "address",
                                              },
                                              "storage_location": "default",
                                              "type": "address",
                                            },
                                            "value": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                          },
                                        ],
                                        "decoded_output": null,
                                        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "from_balance": null,
                                        "function_code_length": 743,
                                        "function_code_start": 895,
                                        "function_file_index": 5,
                                        "function_line_number": 30,
                                        "function_name": "_delegate",
                                        "function_op": "JUMPDEST",
                                        "function_pc": 1841,
                                        "gas": 28526984,
                                        "gas_used": 5185,
                                        "hash": "",
                                        "input": "0x",
                                        "network_id": "",
                                        "output": "0x",
                                        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "to_balance": null,
                                        "value": null,
                                      },
                                    ],
                                    "contract_name": "InitializableAdminUpgradeabilityProxy",
                                    "decoded_output": null,
                                    "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "from_balance": null,
                                    "function_code_length": 90,
                                    "function_code_start": 1989,
                                    "function_file_index": 5,
                                    "function_line_number": 63,
                                    "function_name": "_fallback",
                                    "function_op": "JUMPDEST",
                                    "function_pc": 795,
                                    "gas": 28531389,
                                    "gas_used": 9590,
                                    "hash": "",
                                    "input": "0x",
                                    "network_id": "",
                                    "output": "0x",
                                    "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "to_balance": null,
                                    "value": null,
                                  },
                                ],
                                "contract_name": "GovernanceStrategy",
                                "decoded_input": [
                                  {
                                    "soltype": {
                                      "components": null,
                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                      "indexed": false,
                                      "name": "blockNumber",
                                      "offset": 0,
                                      "simple_type": {
                                        "type": "uint",
                                      },
                                      "storage_location": "default",
                                      "type": "uint256",
                                    },
                                    "value": "17176895",
                                  },
                                ],
                                "decoded_output": null,
                                "from": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                "from_balance": "0",
                                "function_code_length": 1243,
                                "function_code_start": 347,
                                "function_file_index": 3,
                                "function_line_number": 12,
                                "function_name": "totalSupplyAt",
                                "function_op": "JUMPDEST",
                                "function_pc": 112,
                                "gas": 28531576,
                                "gas_used": 9777,
                                "hash": "",
                                "input": "0x981b24d0000000000000000000000000000000000000000000000000000000000106193f",
                                "network_id": "",
                                "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
                                "refund_gas": 452882,
                                "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                "to_balance": "0",
                                "value": null,
                              },
                            ],
                            "contract_name": "GovernanceStrategy",
                            "decoded_input": [
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "blockNumber",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                "value": "17176895",
                              },
                            ],
                            "decoded_output": [
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                "value": "16000000000000000000000000",
                              },
                            ],
                            "from": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                            "from_balance": null,
                            "function_code_length": 154,
                            "function_code_start": 3436,
                            "function_file_index": 0,
                            "function_line_number": 92,
                            "function_name": "getTotalPropositionSupplyAt",
                            "function_op": "JUMPDEST",
                            "function_pc": 354,
                            "gas": 28987336,
                            "gas_used": 12815,
                            "hash": "",
                            "input": "0x",
                            "network_id": "",
                            "output": "0x",
                            "to": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                            "to_balance": null,
                            "value": null,
                          },
                        ],
                        "contract_name": "Executor",
                        "decoded_input": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "blockNumber",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            "value": "17176895",
                          },
                        ],
                        "decoded_output": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            "value": "16000000000000000000000000",
                          },
                        ],
                        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                        "from_balance": "0",
                        "function_code_length": 150,
                        "function_code_start": 3769,
                        "function_file_index": 0,
                        "function_line_number": 101,
                        "function_name": "getTotalVotingSupplyAt",
                        "function_op": "JUMPDEST",
                        "function_pc": 266,
                        "gas": 28987568,
                        "gas_used": 13158,
                        "hash": "",
                        "input": "0x7a71f9d7000000000000000000000000000000000000000000000000000000000106193f",
                        "network_id": "",
                        "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
                        "refund_gas": 460120,
                        "to": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                        "to_balance": "0",
                        "value": null,
                      },
                      {
                        "absolute_position": 4179,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "JUMPDEST",
                        "caller": {
                          "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                          "balance": "10000000000000000",
                        },
                        "caller_code_length": 41,
                        "caller_code_start": 11163,
                        "caller_file_index": 0,
                        "caller_line_number": 370,
                        "caller_op": "JUMP",
                        "caller_pc": 4198,
                        "calls": null,
                        "contract_name": "Executor",
                        "decoded_input": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "votingSupply",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            "value": "16000000000000000000000000",
                          },
                        ],
                        "decoded_output": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            "value": "1040000000000000000000000",
                          },
                        ],
                        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                        "from_balance": null,
                        "function_code_length": 179,
                        "function_code_start": 10579,
                        "function_file_index": 0,
                        "function_line_number": 351,
                        "function_name": "getMinimumVotingPowerNeeded",
                        "function_op": "JUMPDEST",
                        "function_pc": 4371,
                        "gas": 29434347,
                        "gas_used": 2283,
                        "hash": "",
                        "input": "0x",
                        "network_id": "",
                        "output": "0x",
                        "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                        "to_balance": null,
                        "value": null,
                      },
                    ],
                    "contract_name": "Executor",
                    "decoded_input": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "governance",
                          "offset": 0,
                          "simple_type": {
                            "type": "address",
                          },
                          "storage_location": "default",
                          "type": "address",
                        },
                        "value": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                      },
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "proposalId",
                          "offset": 0,
                          "simple_type": {
                            "type": "uint",
                          },
                          "storage_location": "default",
                          "type": "uint256",
                        },
                        "value": "214",
                      },
                    ],
                    "decoded_output": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "",
                          "offset": 0,
                          "simple_type": {
                            "type": "bool",
                          },
                          "storage_location": "default",
                          "type": "bool",
                        },
                        "value": true,
                      },
                    ],
                    "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                    "from_balance": null,
                    "function_code_length": 419,
                    "function_code_start": 10790,
                    "function_file_index": 0,
                    "function_line_number": 360,
                    "function_name": "isQuorumValid",
                    "function_op": "JUMPDEST",
                    "function_pc": 3949,
                    "function_variables": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "votingSupply",
                          "offset": 0,
                          "simple_type": {
                            "type": "uint",
                          },
                          "storage_location": "default",
                          "type": "uint256",
                        },
                        "value": "16000000000000000000000000",
                      },
                    ],
                    "gas": 29496253,
                    "gas_used": 64235,
                    "hash": "",
                    "input": "0x",
                    "network_id": "",
                    "output": "0x",
                    "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                    "to_balance": null,
                    "value": null,
                  },
                  {
                    "absolute_position": 4259,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "call_type": "JUMPDEST",
                    "caller": {
                      "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                      "balance": "10000000000000000",
                    },
                    "caller_code_length": 47,
                    "caller_code_start": 10494,
                    "caller_file_index": 0,
                    "caller_line_number": 347,
                    "caller_op": "JUMP",
                    "caller_pc": 1617,
                    "calls": [
                      {
                        "absolute_position": 6112,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "STATICCALL",
                        "caller": {
                          "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          "balance": "0",
                        },
                        "caller_code_length": 38,
                        "caller_code_start": 11428,
                        "caller_file_index": 0,
                        "caller_line_number": 379,
                        "caller_op": "STATICCALL",
                        "caller_pc": 2427,
                        "calls": null,
                        "contract_name": "Executor",
                        "decoded_input": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "proposalId",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            "value": "214",
                          },
                        ],
                        "decoded_output": [
                          {
                            "soltype": {
                              "components": [
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "id",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "creator",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "executor",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "targets",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "address",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "address[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "values",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "uint",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "signatures",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "string",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "string[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "calldatas",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "bytes",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "bytes[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "withDelegatecalls",
                                  "offset": 0,
                                  "simple_type": {
                                    "nested_type": {
                                      "type": "bool",
                                    },
                                    "type": "slice",
                                  },
                                  "storage_location": "default",
                                  "type": "bool[]",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "startBlock",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "endBlock",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "executionTime",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "forVotes",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "againstVotes",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "executed",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "bool",
                                  },
                                  "storage_location": "default",
                                  "type": "bool",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "canceled",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "bool",
                                  },
                                  "storage_location": "default",
                                  "type": "bool",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "strategy",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "ipfsHash",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "bytes",
                                  },
                                  "storage_location": "default",
                                  "type": "bytes32",
                                },
                              ],
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "",
                              "offset": 0,
                              "storage_location": "default",
                              "type": "tuple",
                            },
                            "value": {
                              "againstVotes": "0",
                              "calldatas": [
                                "0x",
                              ],
                              "canceled": false,
                              "creator": "0x329c54289ff5d6b7b7dae13592c6b1eda1543ed4",
                              "endBlock": "17240895",
                              "executed": false,
                              "executionTime": "1684449552",
                              "executor": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                              "forVotes": "3000000000000000000000000",
                              "id": "214",
                              "ipfsHash": "0x2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb00",
                              "signatures": [
                                "execute()",
                              ],
                              "startBlock": "17176895",
                              "strategy": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                              "targets": [
                                "0xe427fcbd54169136391cfedf68e96abb13da87a0",
                              ],
                              "values": [
                                "0",
                              ],
                              "withDelegatecalls": [
                                true,
                              ],
                            },
                          },
                        ],
                        "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                        "from_balance": "0",
                        "function_code_length": 925,
                        "function_code_start": 41309,
                        "function_file_index": 0,
                        "function_line_number": 1236,
                        "function_name": "getProposalById",
                        "function_op": "JUMPDEST",
                        "function_pc": 1343,
                        "gas": 28971887,
                        "gas_used": 8469,
                        "hash": "",
                        "input": "0x3656de2100000000000000000000000000000000000000000000000000000000000000d6",
                        "network_id": "",
                        "output": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000d6000000000000000000000000329c54289ff5d6b7b7dae13592c6b1eda1543ed400000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc42990000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000106193f000000000000000000000000000000000000000000000000000000000107133f000000000000000000000000000000000000000000000000000000006466a910000000000000000000000000000000000000000000027b46536c66c8e3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a
                        "refund_gas": 459871,
                        "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                        "to_balance": "10000000000000000",
                        "value": null,
                      },
                    ],
                    "contract_name": "Executor",
                    "decoded_input": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "governance",
                          "offset": 0,
                          "simple_type": {
                            "type": "address",
                          },
                          "storage_location": "default",
                          "type": "address",
                        },
                        "value": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                      },
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "proposalId",
                          "offset": 0,
                          "simple_type": {
                            "type": "uint",
                          },
                          "storage_location": "default",
                          "type": "uint256",
                        },
                        "value": "214",
                      },
                    ],
                    "decoded_output": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "",
                          "offset": 0,
                          "simple_type": {
                            "type": "bool",
                          },
                          "storage_location": "default",
                          "type": "bool",
                        },
                        "value": null,
                      },
                    ],
                    "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                    "from_balance": null,
                    "function_code_length": 536,
                    "function_code_start": 11241,
                    "function_file_index": 0,
                    "function_line_number": 374,
                    "function_name": "isVoteDifferentialValid",
                    "function_op": "JUMPDEST",
                    "function_pc": 2370,
                    "gas": 29431976,
                    "gas_used": 11558,
                    "hash": "",
                    "input": "0x",
                    "network_id": "",
                    "output": "0x",
                    "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                    "to_balance": null,
                    "value": null,
                  },
                  {
                    "absolute_position": 8067,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "call_type": "STATICCALL",
                    "caller": {
                      "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                      "balance": "0",
                    },
                    "caller_code_length": 94,
                    "caller_code_start": 11495,
                    "caller_file_index": 0,
                    "caller_line_number": 380,
                    "caller_op": "STATICCALL",
                    "caller_pc": 2556,
                    "calls": [
                      {
                        "absolute_position": 7687,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "JUMPDEST",
                        "caller": {
                          "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          "balance": "0",
                        },
                        "caller_code_length": 40,
                        "caller_code_start": 3874,
                        "caller_file_index": 0,
                        "caller_line_number": 102,
                        "caller_op": "JUMP",
                        "caller_pc": 276,
                        "calls": [
                          {
                            "absolute_position": 7981,
                            "block_timestamp": "0001-01-01T00:00:00Z",
                            "call_type": "STATICCALL",
                            "caller": {
                              "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                              "balance": "0",
                            },
                            "caller_code_length": 39,
                            "caller_code_start": 3546,
                            "caller_file_index": 0,
                            "caller_line_number": 93,
                            "caller_op": "STATICCALL",
                            "caller_pc": 460,
                            "calls": [
                              {
                                "absolute_position": 7786,
                                "block_timestamp": "0001-01-01T00:00:00Z",
                                "call_type": "JUMPDEST",
                                "caller": {
                                  "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                  "balance": "0",
                                },
                                "caller_code_length": 11,
                                "caller_code_start": 462,
                                "caller_file_index": 5,
                                "caller_line_number": 16,
                                "caller_op": "JUMP",
                                "caller_pc": 119,
                                "calls": [
                                  {
                                    "absolute_position": 7794,
                                    "block_timestamp": "0001-01-01T00:00:00Z",
                                    "call_type": "JUMPDEST",
                                    "caller": {
                                      "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                      "balance": "0",
                                    },
                                    "caller_code_length": 15,
                                    "caller_code_start": 2025,
                                    "caller_file_index": 5,
                                    "caller_line_number": 64,
                                    "caller_op": "JUMP",
                                    "caller_pc": 802,
                                    "calls": [
                                      {
                                        "absolute_position": 7798,
                                        "block_timestamp": "0001-01-01T00:00:00Z",
                                        "call_type": "JUMPDEST",
                                        "caller": {
                                          "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                          "balance": "0",
                                        },
                                        "caller_code_length": 8,
                                        "caller_code_start": 3635,
                                        "caller_file_index": 1,
                                        "caller_line_number": 117,
                                        "caller_op": "JUMP",
                                        "caller_pc": 2125,
                                        "calls": null,
                                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                                        "decoded_output": [
                                          {
                                            "soltype": {
                                              "components": null,
                                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                              "indexed": false,
                                              "name": "adm",
                                              "offset": 0,
                                              "simple_type": {
                                                "type": "address",
                                              },
                                              "storage_location": "default",
                                              "type": "address",
                                            },
                                            "value": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                                          },
                                        ],
                                        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "from_balance": null,
                                        "function_code_length": 136,
                                        "function_code_start": 3096,
                                        "function_file_index": 1,
                                        "function_line_number": 94,
                                        "function_name": "_admin",
                                        "function_op": "JUMPDEST",
                                        "function_pc": 1877,
                                        "gas": 28504942,
                                        "gas_used": 115,
                                        "hash": "",
                                        "input": "0x",
                                        "network_id": "",
                                        "output": "0x",
                                        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "to_balance": null,
                                        "value": null,
                                      },
                                    ],
                                    "contract_name": "InitializableAdminUpgradeabilityProxy",
                                    "decoded_output": [],
                                    "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "from_balance": null,
                                    "function_code_length": 174,
                                    "function_code_start": 3556,
                                    "function_file_index": 1,
                                    "function_line_number": 116,
                                    "function_name": "_willFallback",
                                    "function_op": "JUMPDEST",
                                    "function_pc": 2118,
                                    "gas": 28504972,
                                    "gas_used": 218,
                                    "hash": "",
                                    "input": "0x",
                                    "network_id": "",
                                    "output": "0x",
                                    "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "to_balance": null,
                                    "value": null,
                                  },
                                  {
                                    "absolute_position": 7836,
                                    "block_timestamp": "0001-01-01T00:00:00Z",
                                    "call_type": "JUMPDEST",
                                    "caller": {
                                      "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                      "balance": "0",
                                    },
                                    "caller_code_length": 17,
                                    "caller_code_start": 2056,
                                    "caller_file_index": 5,
                                    "caller_line_number": 65,
                                    "caller_op": "JUMP",
                                    "caller_pc": 813,
                                    "calls": null,
                                    "contract_name": "InitializableAdminUpgradeabilityProxy",
                                    "decoded_output": [
                                      {
                                        "soltype": {
                                          "components": null,
                                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                          "indexed": false,
                                          "name": "impl",
                                          "offset": 0,
                                          "simple_type": {
                                            "type": "address",
                                          },
                                          "storage_location": "default",
                                          "type": "address",
                                        },
                                        "value": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                      },
                                    ],
                                    "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "from_balance": null,
                                    "function_code_length": 165,
                                    "function_code_start": 956,
                                    "function_file_index": 2,
                                    "function_line_number": 30,
                                    "function_name": "_implementation",
                                    "function_op": "JUMPDEST",
                                    "function_pc": 1804,
                                    "gas": 28504709,
                                    "gas_used": 115,
                                    "hash": "",
                                    "input": "0x",
                                    "network_id": "",
                                    "output": "0x",
                                    "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "to_balance": null,
                                    "value": null,
                                  },
                                  {
                                    "absolute_position": 7844,
                                    "block_timestamp": "0001-01-01T00:00:00Z",
                                    "call_type": "JUMPDEST",
                                    "caller": {
                                      "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                      "balance": "0",
                                    },
                                    "caller_code_length": 28,
                                    "caller_code_start": 2046,
                                    "caller_file_index": 5,
                                    "caller_line_number": 65,
                                    "caller_op": "JUMP",
                                    "caller_pc": 818,
                                    "calls": [
                                      {
                                        "absolute_position": 7969,
                                        "block_timestamp": "0001-01-01T00:00:00Z",
                                        "call_type": "DELEGATECALL",
                                        "caller": {
                                          "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                          "balance": "0",
                                        },
                                        "caller_code_length": 5,
                                        "caller_code_start": 1348,
                                        "caller_file_index": 5,
                                        "caller_line_number": 39,
                                        "caller_op": "DELEGATECALL",
                                        "caller_pc": 1855,
                                        "calls": [
                                          {
                                            "absolute_position": 7934,
                                            "block_timestamp": "0001-01-01T00:00:00Z",
                                            "call_type": "JUMPDEST",
                                            "caller": {
                                              "address": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                                              "balance": "0",
                                            },
                                            "caller_code_length": 19,
                                            "caller_code_start": 30971,
                                            "caller_file_index": 0,
                                            "caller_line_number": 914,
                                            "caller_op": "JUMP",
                                            "caller_pc": 1829,
                                            "calls": null,
                                            "contract_name": "AaveTokenV2",
                                            "decoded_output": [
                                              {
                                                "soltype": {
                                                  "components": null,
                                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                  "indexed": false,
                                                  "name": "",
                                                  "offset": 0,
                                                  "simple_type": {
                                                    "type": "uint",
                                                  },
                                                  "storage_location": "default",
                                                  "type": "uint256",
                                                },
                                                "value": "16000000000000000000000000",
                                              },
                                            ],
                                            "from": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                            "from_balance": null,
                                            "function_code_length": 98,
                                            "function_code_start": 16515,
                                            "function_file_index": 0,
                                            "function_line_number": 494,
                                            "function_name": "totalSupply",
                                            "function_op": "JUMPDEST",
                                            "function_pc": 1228,
                                            "gas": 28058769,
                                            "gas_used": 115,
                                            "hash": "",
                                            "input": "0x",
                                            "network_id": "",
                                            "output": "0x",
                                            "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                            "to_balance": null,
                                            "value": null,
                                          },
                                        ],
                                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                                        "decoded_input": [
                                          {
                                            "soltype": {
                                              "components": null,
                                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                              "indexed": false,
                                              "name": "blockNumber",
                                              "offset": 0,
                                              "simple_type": {
                                                "type": "uint",
                                              },
                                              "storage_location": "default",
                                              "type": "uint256",
                                            },
                                            "value": "17176895",
                                          },
                                        ],
                                        "decoded_output": [
                                          {
                                            "soltype": {
                                              "components": null,
                                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                              "indexed": false,
                                              "name": "",
                                              "offset": 0,
                                              "simple_type": {
                                                "type": "uint",
                                              },
                                              "storage_location": "default",
                                              "type": "uint256",
                                            },
                                            "value": "16000000000000000000000000",
                                          },
                                        ],
                                        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "from_balance": "0",
                                        "function_code_length": 122,
                                        "function_code_start": 30873,
                                        "function_file_index": 0,
                                        "function_line_number": 913,
                                        "function_name": "totalSupplyAt",
                                        "function_op": "JUMPDEST",
                                        "function_pc": 1820,
                                        "gas": 28059066,
                                        "gas_used": 510,
                                        "hash": "",
                                        "input": "0x981b24d0000000000000000000000000000000000000000000000000000000000106193f",
                                        "network_id": "",
                                        "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
                                        "refund_gas": 445382,
                                        "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                        "to_balance": "0",
                                        "value": null,
                                      },
                                    ],
                                    "contract_name": "InitializableAdminUpgradeabilityProxy",
                                    "decoded_input": [
                                      {
                                        "soltype": {
                                          "components": null,
                                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                          "indexed": false,
                                          "name": "implementation",
                                          "offset": 0,
                                          "simple_type": {
                                            "type": "address",
                                          },
                                          "storage_location": "default",
                                          "type": "address",
                                        },
                                        "value": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                      },
                                    ],
                                    "decoded_output": null,
                                    "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "from_balance": null,
                                    "function_code_length": 743,
                                    "function_code_start": 895,
                                    "function_file_index": 5,
                                    "function_line_number": 30,
                                    "function_name": "_delegate",
                                    "function_op": "JUMPDEST",
                                    "function_pc": 1841,
                                    "gas": 28504582,
                                    "gas_used": 685,
                                    "hash": "",
                                    "input": "0x",
                                    "network_id": "",
                                    "output": "0x",
                                    "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "to_balance": null,
                                    "value": null,
                                  },
                                ],
                                "contract_name": "InitializableAdminUpgradeabilityProxy",
                                "decoded_output": null,
                                "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                "from_balance": null,
                                "function_code_length": 90,
                                "function_code_start": 1989,
                                "function_file_index": 5,
                                "function_line_number": 63,
                                "function_name": "_fallback",
                                "function_op": "JUMPDEST",
                                "function_pc": 795,
                                "gas": 28504987,
                                "gas_used": 1090,
                                "hash": "",
                                "input": "0x",
                                "network_id": "",
                                "output": "0x",
                                "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                "to_balance": null,
                                "value": null,
                              },
                            ],
                            "contract_name": "GovernanceStrategy",
                            "decoded_input": [
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "blockNumber",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                "value": "17176895",
                              },
                            ],
                            "decoded_output": null,
                            "from": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                            "from_balance": "0",
                            "function_code_length": 1243,
                            "function_code_start": 347,
                            "function_file_index": 3,
                            "function_line_number": 12,
                            "function_name": "totalSupplyAt",
                            "function_op": "JUMPDEST",
                            "function_pc": 112,
                            "gas": 28505174,
                            "gas_used": 1277,
                            "hash": "",
                            "input": "0x981b24d0000000000000000000000000000000000000000000000000000000000106193f",
                            "network_id": "",
                            "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
                            "refund_gas": 452463,
                            "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                            "to_balance": "0",
                            "value": null,
                          },
                        ],
                        "contract_name": "GovernanceStrategy",
                        "decoded_input": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "blockNumber",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            "value": "17176895",
                          },
                        ],
                        "decoded_output": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            "value": "16000000000000000000000000",
                          },
                        ],
                        "from": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                        "from_balance": null,
                        "function_code_length": 154,
                        "function_code_start": 3436,
                        "function_file_index": 0,
                        "function_line_number": 92,
                        "function_name": "getTotalPropositionSupplyAt",
                        "function_op": "JUMPDEST",
                        "function_pc": 354,
                        "gas": 28958015,
                        "gas_used": 1815,
                        "hash": "",
                        "input": "0x",
                        "network_id": "",
                        "output": "0x",
                        "to": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                        "to_balance": null,
                        "value": null,
                      },
                    ],
                    "contract_name": "Executor",
                    "decoded_input": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "blockNumber",
                          "offset": 0,
                          "simple_type": {
                            "type": "uint",
                          },
                          "storage_location": "default",
                          "type": "uint256",
                        },
                        "value": "17176895",
                      },
                    ],
                    "decoded_output": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "",
                          "offset": 0,
                          "simple_type": {
                            "type": "uint",
                          },
                          "storage_location": "default",
                          "type": "uint256",
                        },
                        "value": "16000000000000000000000000",
                      },
                    ],
                    "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                    "from_balance": "0",
                    "function_code_length": 150,
                    "function_code_start": 3769,
                    "function_file_index": 0,
                    "function_line_number": 101,
                    "function_name": "getTotalVotingSupplyAt",
                    "function_op": "JUMPDEST",
                    "function_pc": 266,
                    "gas": 28958247,
                    "gas_used": 2158,
                    "hash": "",
                    "input": "0x7a71f9d7000000000000000000000000000000000000000000000000000000000106193f",
                    "network_id": "",
                    "output": "0x0000000000000000000000000000000000000000000d3c21bcecceda10000000",
                    "refund_gas": 459654,
                    "to": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                    "to_balance": "0",
                    "value": null,
                  },
                ],
                "contract_name": "AaveGovernanceV2",
                "decoded_input": [
                  {
                    "soltype": {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "governance",
                      "offset": 0,
                      "simple_type": {
                        "type": "address",
                      },
                      "storage_location": "default",
                      "type": "address",
                    },
                    "value": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                  },
                  {
                    "soltype": {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "proposalId",
                      "offset": 0,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "default",
                      "type": "uint256",
                    },
                    "value": "214",
                  },
                ],
                "decoded_output": [
                  {
                    "soltype": {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "",
                      "offset": 0,
                      "simple_type": {
                        "type": "bool",
                      },
                      "storage_location": "default",
                      "type": "bool",
                    },
                    "value": true,
                  },
                ],
                "from": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "from_balance": "10000000000000000",
                "function_code_length": 233,
                "function_code_start": 10314,
                "function_file_index": 0,
                "function_line_number": 341,
                "function_name": "isProposalPassed",
                "function_op": "JUMPDEST",
                "function_pc": 1589,
                "gas": 29496653,
                "gas_used": 83684,
                "hash": "",
                "input": "0x06fbb3ab000000000000000000000000ec568fffba86c094cf06b22134b23074dfe2252c00000000000000000000000000000000000000000000000000000000000000d6",
                "network_id": "",
                "output": "0x0000000000000000000000000000000000000000000000000000000000000001",
                "refund_gas": 468200,
                "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                "to_balance": "0",
                "value": null,
              },
              {
                "absolute_position": 11910,
                "block_timestamp": "0001-01-01T00:00:00Z",
                "call_type": "STATICCALL",
                "caller": {
                  "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                  "balance": "10000000000000000",
                },
                "caller_code_length": 61,
                "caller_code_start": 43600,
                "caller_file_index": 0,
                "caller_line_number": 1302,
                "caller_op": "STATICCALL",
                "caller_pc": 3895,
                "calls": [
                  {
                    "absolute_position": 10391,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "call_type": "STATICCALL",
                    "caller": {
                      "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                      "balance": "0",
                    },
                    "caller_code_length": 38,
                    "caller_code_start": 7663,
                    "caller_file_index": 0,
                    "caller_line_number": 256,
                    "caller_op": "STATICCALL",
                    "caller_pc": 4699,
                    "calls": null,
                    "contract_name": "Executor",
                    "decoded_input": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "proposalId",
                          "offset": 0,
                          "simple_type": {
                            "type": "uint",
                          },
                          "storage_location": "default",
                          "type": "uint256",
                        },
                        "value": "214",
                      },
                    ],
                    "decoded_output": [
                      {
                        "soltype": {
                          "components": [
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "id",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "creator",
                              "offset": 0,
                              "simple_type": {
                                "type": "address",
                              },
                              "storage_location": "default",
                              "type": "address",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "executor",
                              "offset": 0,
                              "simple_type": {
                                "type": "address",
                              },
                              "storage_location": "default",
                              "type": "address",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "targets",
                              "offset": 0,
                              "simple_type": {
                                "nested_type": {
                                  "type": "address",
                                },
                                "type": "slice",
                              },
                              "storage_location": "default",
                              "type": "address[]",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "values",
                              "offset": 0,
                              "simple_type": {
                                "nested_type": {
                                  "type": "uint",
                                },
                                "type": "slice",
                              },
                              "storage_location": "default",
                              "type": "uint256[]",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "signatures",
                              "offset": 0,
                              "simple_type": {
                                "nested_type": {
                                  "type": "string",
                                },
                                "type": "slice",
                              },
                              "storage_location": "default",
                              "type": "string[]",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "calldatas",
                              "offset": 0,
                              "simple_type": {
                                "nested_type": {
                                  "type": "bytes",
                                },
                                "type": "slice",
                              },
                              "storage_location": "default",
                              "type": "bytes[]",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "withDelegatecalls",
                              "offset": 0,
                              "simple_type": {
                                "nested_type": {
                                  "type": "bool",
                                },
                                "type": "slice",
                              },
                              "storage_location": "default",
                              "type": "bool[]",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "startBlock",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "endBlock",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "executionTime",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "forVotes",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "againstVotes",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint256",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "executed",
                              "offset": 0,
                              "simple_type": {
                                "type": "bool",
                              },
                              "storage_location": "default",
                              "type": "bool",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "canceled",
                              "offset": 0,
                              "simple_type": {
                                "type": "bool",
                              },
                              "storage_location": "default",
                              "type": "bool",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "strategy",
                              "offset": 0,
                              "simple_type": {
                                "type": "address",
                              },
                              "storage_location": "default",
                              "type": "address",
                            },
                            {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "ipfsHash",
                              "offset": 0,
                              "simple_type": {
                                "type": "bytes",
                              },
                              "storage_location": "default",
                              "type": "bytes32",
                            },
                          ],
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "",
                          "offset": 0,
                          "storage_location": "default",
                          "type": "tuple",
                        },
                        "value": {
                          "againstVotes": "0",
                          "calldatas": [
                            "0x",
                          ],
                          "canceled": false,
                          "creator": "0x329c54289ff5d6b7b7dae13592c6b1eda1543ed4",
                          "endBlock": "17240895",
                          "executed": false,
                          "executionTime": "1684449552",
                          "executor": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          "forVotes": "3000000000000000000000000",
                          "id": "214",
                          "ipfsHash": "0x2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb00",
                          "signatures": [
                            "execute()",
                          ],
                          "startBlock": "17176895",
                          "strategy": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                          "targets": [
                            "0xe427fcbd54169136391cfedf68e96abb13da87a0",
                          ],
                          "values": [
                            "0",
                          ],
                          "withDelegatecalls": [
                            true,
                          ],
                        },
                      },
                    ],
                    "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                    "from_balance": "0",
                    "function_code_length": 925,
                    "function_code_start": 41309,
                    "function_file_index": 0,
                    "function_line_number": 1236,
                    "function_name": "getProposalById",
                    "function_op": "JUMPDEST",
                    "function_pc": 1343,
                    "gas": 28953091,
                    "gas_used": 8469,
                    "hash": "",
                    "input": "0x3656de2100000000000000000000000000000000000000000000000000000000000000d6",
                    "network_id": "",
                    "output": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000d6000000000000000000000000329c54289ff5d6b7b7dae13592c6b1eda1543ed400000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc42990000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000106193f000000000000000000000000000000000000000000000000000000000107133f000000000000000000000000000000000000000000000000000000006466a910000000000000000000000000000000000000000000027b46536c66c8e3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e2cd70a0e597bd593fa99a99f03a19d58fd834ef6c946ce14f0c330a85588eb000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a
                    "refund_gas": 459572,
                    "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                    "to_balance": "10000000000000000",
                    "value": null,
                  },
                ],
                "contract_name": "AaveGovernanceV2",
                "decoded_input": [
                  {
                    "soltype": {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "governance",
                      "offset": 0,
                      "simple_type": {
                        "type": "address",
                      },
                      "storage_location": "default",
                      "type": "address",
                    },
                    "value": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                  },
                  {
                    "soltype": {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "proposalId",
                      "offset": 0,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "default",
                      "type": "uint256",
                    },
                    "value": "214",
                  },
                ],
                "decoded_output": [
                  {
                    "soltype": {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "",
                      "offset": 0,
                      "simple_type": {
                        "type": "bool",
                      },
                      "storage_location": "default",
                      "type": "bool",
                    },
                    "value": false,
                  },
                ],
                "from": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "from_balance": "10000000000000000",
                "function_code_length": 305,
                "function_code_start": 7472,
                "function_file_index": 0,
                "function_line_number": 251,
                "function_name": "isProposalOverGracePeriod",
                "function_op": "JUMPDEST",
                "function_pc": 4642,
                "gas": 29413281,
                "gas_used": 14379,
                "hash": "",
                "input": "0xf670a5f9000000000000000000000000ec568fffba86c094cf06b22134b23074dfe2252c00000000000000000000000000000000000000000000000000000000000000d6",
                "network_id": "",
                "output": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "refund_gas": 466877,
                "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                "to_balance": "0",
                "value": null,
              },
            ],
            "contract_name": "AaveGovernanceV2",
            "decoded_input": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "proposalId",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "214",
              },
            ],
            "decoded_output": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "5",
              },
            ],
            "from": "0xec568fffba86c094cf06b22134b23074dfe2252c",
            "from_balance": null,
            "function_code_length": 925,
            "function_code_start": 42833,
            "function_file_index": 0,
            "function_line_number": 1287,
            "function_name": "getProposalState",
            "function_op": "JUMPDEST",
            "function_pc": 3508,
            "function_variables": [
              {
                "soltype": {
                  "components": [
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "id",
                      "offset": 0,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "memory",
                      "type": "uint256",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "creator",
                      "offset": 0,
                      "simple_type": {
                        "type": "address",
                      },
                      "storage_location": "memory",
                      "type": "address",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "executor",
                      "offset": 0,
                      "simple_type": {
                        "type": "address",
                      },
                      "storage_location": "memory",
                      "type": "address",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "targets",
                      "offset": 0,
                      "simple_type": {
                        "nested_type": {
                          "type": "address",
                        },
                        "type": "slice",
                      },
                      "storage_location": "memory",
                      "type": "address[]",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "values",
                      "offset": 0,
                      "simple_type": {
                        "nested_type": {
                          "type": "uint",
                        },
                        "type": "slice",
                      },
                      "storage_location": "memory",
                      "type": "uint256[]",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "signatures",
                      "offset": 0,
                      "simple_type": {
                        "nested_type": {
                          "type": "string",
                        },
                        "type": "slice",
                      },
                      "storage_location": "memory",
                      "type": "string[]",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "calldatas",
                      "offset": 0,
                      "simple_type": {
                        "nested_type": {
                          "type": "bytes",
                        },
                        "type": "slice",
                      },
                      "storage_location": "memory",
                      "type": "bytes[]",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "withDelegatecalls",
                      "offset": 0,
                      "simple_type": {
                        "nested_type": {
                          "type": "bool",
                        },
                        "type": "slice",
                      },
                      "storage_location": "memory",
                      "type": "bool[]",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "startBlock",
                      "offset": 0,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "memory",
                      "type": "uint256",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "endBlock",
                      "offset": 0,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "memory",
                      "type": "uint256",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "executionTime",
                      "offset": 0,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "memory",
                      "type": "uint256",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "forVotes",
                      "offset": 0,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "memory",
                      "type": "uint256",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "againstVotes",
                      "offset": 0,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "memory",
                      "type": "uint256",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "executed",
                      "offset": 0,
                      "simple_type": {
                        "type": "bool",
                      },
                      "storage_location": "memory",
                      "type": "bool",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "canceled",
                      "offset": 0,
                      "simple_type": {
                        "type": "bool",
                      },
                      "storage_location": "memory",
                      "type": "bool",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "strategy",
                      "offset": 0,
                      "simple_type": {
                        "type": "address",
                      },
                      "storage_location": "memory",
                      "type": "address",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "ipfsHash",
                      "offset": 0,
                      "simple_type": {
                        "type": "bytes",
                      },
                      "storage_location": "memory",
                      "type": "bytes32",
                    },
                    {
                      "components": [
                        {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "support",
                          "offset": 0,
                          "simple_type": {
                            "type": "bool",
                          },
                          "storage_location": "memory",
                          "type": "bool",
                        },
                        {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "votingPower",
                          "offset": 0,
                          "simple_type": {
                            "type": "uint",
                          },
                          "storage_location": "memory",
                          "type": "uint248",
                        },
                      ],
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "votes",
                      "offset": 0,
                      "storage_location": "memory",
                      "type": "mapping (address => tuple)",
                    },
                  ],
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "proposal",
                  "offset": 0,
                  "storage_location": "memory",
                  "type": "tuple",
                },
                "value": null,
              },
            ],
            "gas": 29978478,
            "gas_used": 112978,
            "hash": "",
            "input": "0x",
            "network_id": "",
            "output": "0x",
            "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
            "to_balance": null,
            "value": null,
          },
          {
            "absolute_position": 18007,
            "block_timestamp": "0001-01-01T00:00:00Z",
            "call_type": "CALL",
            "caller": {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "balance": "10000000000000000",
            },
            "caller_code_length": 262,
            "caller_code_start": 36691,
            "caller_file_index": 0,
            "caller_line_number": 1096,
            "caller_op": "CALL",
            "caller_pc": 6751,
            "calls": [
              {
                "absolute_position": 17571,
                "block_timestamp": "0001-01-01T00:00:00Z",
                "call_type": "DELEGATECALL",
                "caller": {
                  "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                  "balance": "10000000000000000",
                },
                "caller_code_length": 29,
                "caller_code_start": 6528,
                "caller_file_index": 0,
                "caller_line_number": 208,
                "caller_op": "DELEGATECALL",
                "caller_pc": 3260,
                "calls": [
                  {
                    "absolute_position": 13541,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "call_type": "CALL",
                    "caller": {
                      "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                      "balance": "0",
                    },
                    "caller_code_length": 117,
                    "caller_code_start": 1732,
                    "caller_file_index": 16,
                    "caller_line_number": 44,
                    "caller_op": "CALL",
                    "caller_pc": 223,
                    "calls": [
                      {
                        "absolute_position": 13453,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "JUMPDEST",
                        "caller": {
                          "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          "balance": "0",
                        },
                        "caller_code_length": 8,
                        "caller_code_start": 1451,
                        "caller_file_index": 1,
                        "caller_line_number": 38,
                        "caller_op": "JUMP",
                        "caller_pc": 1120,
                        "calls": null,
                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                        "decoded_output": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "adm",
                              "offset": 0,
                              "simple_type": {
                                "type": "address",
                              },
                              "storage_location": "default",
                              "type": "address",
                            },
                            "value": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          },
                        ],
                        "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                        "from_balance": null,
                        "function_code_length": 156,
                        "function_code_start": 3451,
                        "function_file_index": 1,
                        "function_line_number": 101,
                        "function_name": "_admin",
                        "function_op": "JUMPDEST",
                        "function_pc": 1695,
                        "gas": 28465635,
                        "gas_used": 2115,
                        "hash": "",
                        "input": "0x",
                        "network_id": "",
                        "output": "0x",
                        "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                        "to_balance": null,
                        "value": null,
                      },
                      {
                        "absolute_position": 13490,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "JUMPDEST",
                        "caller": {
                          "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          "balance": "0",
                        },
                        "caller_code_length": 8,
                        "caller_code_start": 2233,
                        "caller_file_index": 1,
                        "caller_line_number": 66,
                        "caller_op": "JUMP",
                        "caller_pc": 1255,
                        "calls": null,
                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                        "decoded_output": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "adm",
                              "offset": 0,
                              "simple_type": {
                                "type": "address",
                              },
                              "storage_location": "default",
                              "type": "address",
                            },
                            "value": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          },
                        ],
                        "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                        "from_balance": null,
                        "function_code_length": 156,
                        "function_code_start": 3451,
                        "function_file_index": 1,
                        "function_line_number": 101,
                        "function_name": "_admin",
                        "function_op": "JUMPDEST",
                        "function_pc": 1695,
                        "gas": 28463410,
                        "gas_used": 115,
                        "hash": "",
                        "input": "0x",
                        "network_id": "",
                        "output": "0x",
                        "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                        "to_balance": null,
                        "value": null,
                      },
                      {
                        "absolute_position": 13529,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "JUMPDEST",
                        "caller": {
                          "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                          "balance": "0",
                        },
                        "caller_code_length": 19,
                        "caller_code_start": 2262,
                        "caller_file_index": 1,
                        "caller_line_number": 67,
                        "caller_op": "JUMP",
                        "caller_pc": 1298,
                        "calls": null,
                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                        "decoded_input": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "newAdmin",
                              "offset": 0,
                              "simple_type": {
                                "type": "address",
                              },
                              "storage_location": "default",
                              "type": "address",
                            },
                            "value": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                          },
                        ],
                        "decoded_output": [],
                        "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                        "from_balance": null,
                        "function_code_length": 153,
                        "function_code_start": 3733,
                        "function_file_index": 1,
                        "function_line_number": 112,
                        "function_name": "_setAdmin",
                        "function_op": "JUMPDEST",
                        "function_pc": 1796,
                        "gas": 28461922,
                        "gas_used": 2912,
                        "hash": "",
                        "input": "0x",
                        "network_id": "",
                        "output": "0x",
                        "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                        "to_balance": null,
                        "value": null,
                      },
                    ],
                    "contract_name": "ProposalPayloadStkAave",
                    "decoded_input": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "newAdmin",
                          "offset": 0,
                          "simple_type": {
                            "type": "address",
                          },
                          "storage_location": "default",
                          "type": "address",
                        },
                        "value": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                      },
                    ],
                    "decoded_output": null,
                    "from": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
                    "from_balance": "0",
                    "function_code_length": 238,
                    "function_code_start": 2050,
                    "function_file_index": 1,
                    "function_line_number": 64,
                    "function_name": "changeAdmin",
                    "function_op": "JUMPDEST",
                    "function_pc": 1113,
                    "gas": 28465844,
                    "gas_used": 6858,
                    "hash": "",
                    "input": "0x8f28397000000000000000000000000086c3ffee349a7cff7ca88c449717b1b133bfb517",
                    "network_id": "",
                    "output": "0x",
                    "refund_gas": 451838,
                    "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                    "to_balance": "0",
                    "value": "0",
                  },
                  {
                    "absolute_position": 14447,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "call_type": "CREATE",
                    "caller_code_length": 286,
                    "caller_code_start": 1913,
                    "caller_file_index": 16,
                    "caller_line_number": 48,
                    "caller_op": "CREATE",
                    "caller_pc": 412,
                    "caller_variables": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "newImpl",
                          "offset": 0,
                          "simple_type": {
                            "type": "address",
                          },
                          "storage_location": "default",
                          "type": "address",
                        },
                        "value": "0x0000000000000000000000000000000000000000",
                      },
                    ],
                    "calls": [
                      {
                        "absolute_position": 14137,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "STATICCALL",
                        "caller_op": "STATICCALL",
                        "caller_pc": 189,
                        "calls": [
                          {
                            "absolute_position": 14125,
                            "block_timestamp": "0001-01-01T00:00:00Z",
                            "call_type": "DELEGATECALL",
                            "caller": {
                              "address": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                              "balance": "0",
                            },
                            "caller_code_length": 5,
                            "caller_code_start": 1348,
                            "caller_file_index": 5,
                            "caller_line_number": 39,
                            "caller_op": "DELEGATECALL",
                            "caller_pc": 1855,
                            "calls": null,
                            "contract_name": "InitializableAdminUpgradeabilityProxy",
                            "decoded_output": [
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint8",
                                },
                                "value": 18,
                              },
                            ],
                            "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                            "from_balance": "0",
                            "function_code_length": 81,
                            "function_code_start": 16374,
                            "function_file_index": 0,
                            "function_line_number": 487,
                            "function_name": "decimals",
                            "function_op": "JUMPDEST",
                            "function_pc": 1406,
                            "gas": 27516415,
                            "gas_used": 2436,
                            "hash": "",
                            "input": "0x313ce567",
                            "network_id": "",
                            "output": "0x0000000000000000000000000000000000000000000000000000000000000012",
                            "refund_gas": 436768,
                            "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                            "to_balance": "0",
                            "value": null,
                          },
                        ],
                        "decoded_output": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "",
                              "offset": 0,
                              "simple_type": {
                                "type": "uint",
                              },
                              "storage_location": "default",
                              "type": "uint8",
                            },
                            "value": 18,
                          },
                        ],
                        "from": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                        "from_balance": "0",
                        "function_op": "STOP",
                        "function_pc": 0,
                        "gas": 27953874,
                        "gas_used": 3168,
                        "hash": "",
                        "input": "0x313ce567",
                        "network_id": "",
                        "output": "0x0000000000000000000000000000000000000000000000000000000000000012",
                        "refund_gas": 443712,
                        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                        "to_balance": "0",
                        "value": null,
                      },
                    ],
                    "contract_name": "ProposalPayloadStkAave",
                    "decoded_output": null,
                    "from": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
                    "from_balance": "0",
                    "function_op": "STOP",
                    "function_pc": 0,
                    "gas": 28420895,
                    "gas_used": 4251163,
                    "hash": "",
                    "input": "0x61016060405260006009553480156200001757600080fd5b5060405162005687380380620056878339810160408190526200003a916200014c565b858585858585858585858585816001600160801b0382166200005d8142620001f5565b608052506001600160a01b0390811660a05295861660c052505091831660e05261010052166101205260056009819055506000866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f5919062000211565b60ff1690506200010781600a6200033a565b61014052506200011e9550506200012e9350505050565b6009555062000348945050505050565b600590565b6001600160a01b03811681146200014957600080fd5b50565b60008060008060008060c087890312156200016657600080fd5b8651620001738162000133565b6020880151909650620001868162000133565b604088015160608901519196509450620001a08162000133565b6080880151909350620001b38162000133565b60a08801519092506001600160801b0381168114620001d157600080fd5b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b808201808211156200020b576200020b620001df565b92915050565b6000602082840312156200022457600080fd5b815160ff811681146200023657600080fd5b9392505050565b600181815b808511156200027e578160001904821115620002625762000262620001df565b808516156200027057918102915b93841c939080029062000242565b509250929050565b60008262000297575060016200020b565b81620002a6575060006200020b565b8160018114620002bf5760028114620002ca57620002ea565b60019150506200020b565b60ff841115620002de57620002de620001df565b50506001821b6200020b565b5060208310610133831016604e8410600b84101617156200030f575081810a6200020b565b6200031b83836200023d565b8060001904821115620003325762000332620001df565b029392505050565b600062000236838362000286565b60805160a05160c05160e051610100516101205161014051615266620004216000396000818161083601528181610e3a0152818161115701526111c8015260008181610a18015261288a0152600081816106a40152612525015260008181610a6d0152818161286801526130da01526000818161062a01528181610ee30152818161125a01528181611411015281816117ba0152818161274701528181612e5c01526130b0015260008181610bea01526119910152600081816109f101528181613e7001528181613eac0152613ed901526152666000f3fe608060405234801561001057600080fd5b50600436106104965760003560e01c80638c9a281d11610262578063aff05aa911610151578063dbc0ed8a116100ce578063eab5231811610092578063eab5231814610c65578063f036bc6814610c78578063f11b818814610c8c578063f34d96da14610cee578063f713d8a814610cf6578063fde9eb6914610d0957600080fd5b8063dbc0ed8a14610c1f578063dc937e1c14610c27578063dd62ed3e14610c3a578063dde43cba14610c4d578063e6aa216c14610c5457600080fd5b8063c2ffbb9111610115578063c2ffbb9114610bac578063c3863ada14610bbf578063c3cda52014610bd2578063cbcbb50714610be5578063d505accf14610c0c57600080fd5b8063aff05aa914610b4b578063b2a5dbfa14610b53578063b2f4201d14610b66578063b9844d8d14610b79578063c18f539a14610b9957600080fd5b80639a99b4f0116101df578063a9059cbb116101a3578063a9059cbb14610ae3578063aa9fbe0214610af6578063aaf5eb6814610b1d578063ab406fe614610b25578063adc9772e14610b3857600080fd5b80639a99b4f014610a8f5780639c9b515414610aa25780639e3ffce014610ab5578063a457c2d714610abd578063a6b63eb814610ad057600080fd5b8063946776cd11610226578063946776cd14610a13578063955e18af14610a3a57806395d89b4114610a4d578063981b24d014610a5557806399248ea714610a6857600080fd5b80638c9a281d146109325780638dbefee21461093a5780638e9b2ca41461094d5780638ef98e0e1461095c578063919cd40f146109ec57600080fd5b806345755dd6116103895780636f50458d1161030657806374011f56116102ca57806374011f56146108a457806378160376146108b7578063787a08a6146108d75780637b5b1157146108df5780637bb73c97146108f25780637e90d7ef1461091257600080fd5b80636f50458d1461085857806370a082311461086b578063727a5d571461087e57806372b49d631461082957806373d6a8891461089157600080fd5b80635b3cc0cf1161034d5780635b3cc0cf146107925780635c19a95c146107f157806360ba192b14610804578063616e0bf9146108295780636198e1351461083157600080fd5b806345755dd6146107095780634575e69b1461071c5780634998fffd146107455780634cdad5061461075857806358146d171461076b57600080fd5b806323b872dd116104175780633373ee4c116103db5780633373ee4c14610661578063359c4a961461069f5780633644e515146106c657806339509351146106cf57806341cbf54a146106e257600080fd5b806323b872dd146105d8578063250201db146105eb57806330adf81f146105fe578063312f6b8314610625578063313ce5671461064c57600080fd5b8063112d037c1161045e578063112d037c14610582578063174ed5421461059757806318160ddd146105aa5780631e9a6950146105b257806320fb80b5146105c557600080fd5b806302fb4d851461049b57806306fdde03146104c1578063091030c3146104d6578063095ea7b314610534578063111fd88b14610557575b600080fd5b6104ae6104a9366004614928565b610d1c565b6040519081526020015b60405180910390f35b6104c9610f5a565b6040516104b891906149a4565b61050f6104e43660046149b7565b603e6020526000908152604090205464ffffffffff811690600160281b90046001600160d81b031682565b6040805164ffffffffff90931683526001600160d81b039091166020830152016104b8565b610547610542366004614928565b610fec565b60405190151581526020016104b8565b61056a6105653660046149d4565b611004565b6040516001600160a01b0390911681526020016104b8565b6105956105903660046149ed565b61101f565b005b60535461056a906001600160a01b031681565b6002546104ae565b6105956105c0366004614928565b611069565b6104ae6105d33660046149ed565b611078565b6105476105e63660046149ed565b6110c9565b6105956105f93660046149b7565b6110ed565b6104ae7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61056a7f000000000000000000000000000000000000000000000000000000000000000081565b60125b60405160ff90911681526020016104b8565b6104ae61066f366004614a2e565b6001600160a01b038082166000908152603c60209081526040808320938616835260029093019052205492915050565b6104ae7f000000000000000000000000000000000000000000000000000000000000000081565b6104ae60435481565b6105476106dd366004614928565b611133565b6104ae7f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d81565b6105956107173660046149d4565b611155565b61056a61072a3660046149d4565b6000908152604660205260409020546001600160a01b031690565b6105956107533660046149b7565b6112ba565b6104ae6107663660046149d4565b611324565b61077a670de0b6b3a764000081565b6040516001600160d81b0390911681526020016104b8565b6107d16107a0366004614928565b60066020908152600092835260408084209091529082529020546001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016104b8565b6105956107ff3660046149b7565b61134f565b605154600160e01b900463ffffffff1660405163ffffffff90911681526020016104b8565b604f546104ae565b6104ae7f000000000000000000000000000000000000000000000000000000000000000081565b61056a610866366004614a7b565b611367565b6104ae6108793660046149b7565b611389565b6104ae61088c3660046149d4565b6113a4565b61059561089f366004614ac1565b6113c7565b6105956108b23660046149d4565b611480565b6104c9604051806040016040528060018152602001603160f81b81525081565b6105956114c3565b6105956108ed3660046149d4565b6114ce565b6104ae6109003660046149b7565b60076020526000908152604090205481565b6104ae6109203660046149b7565b603d6020526000908152604090205481565b6104ae600081565b6104ae6109483660046149b7565b611541565b6104ae670de0b6b3a764000081565b6109c161096a366004614b1b565b60408051808201909152600080825260208201525063ffffffff1660009081526052602090815260409182902082518084019093525464ffffffffff81168352600160281b90046001600160d81b03169082015290565b60408051825164ffffffffff1681526020928301516001600160d81b031692810192909252016104b8565b6104ae7f000000000000000000000000000000000000000000000000000000000000000081565b61056a7f000000000000000000000000000000000000000000000000000000000000000081565b6104ae610a48366004614928565b61161c565b6104c9611629565b6104ae610a633660046149d4565b611638565b61056a7f000000000000000000000000000000000000000000000000000000000000000081565b610595610a9d366004614928565b611643565b610595610ab0366004614b41565b61164e565b6104ae600181565b610547610acb366004614928565b6116a5565b610595610ade366004614b87565b611720565b610547610af1366004614928565b611838565b6104ae7f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e581565b61064f601281565b610595610b33366004614be2565b611846565b610595610b46366004614928565b611909565b610595611914565b610595610b61366004614c77565b611986565b6104ae610b74366004614a7b565b611a41565b6104ae610b873660046149b7565b60446020526000908152604090205481565b6104ae610ba73660046149ed565b611a69565b6104ae610bba366004614d5e565b611ab0565b60085461056a906001600160a01b031681565b610595610be0366004614ac1565b611ad9565b61056a7f000000000000000000000000000000000000000000000000000000000000000081565b610595610c1a366004614d9c565b611c9e565b6104ae600281565b610595610c35366004614a7b565b611e66565b6104ae610c48366004614a2e565b611e71565b60056104ae565b6051546001600160d81b031661077a565b610595610c73366004614e0a565b611e9c565b60515461054790600160d81b900460ff1681565b610cc8610c9a3660046149b7565b603c60205260009081526040902080546001909101546001600160801b0380831692600160801b9004169083565b604080516001600160801b039485168152939092166020840152908201526060016104b8565b6050546104ae565b610595610d04366004614e3f565b611eb3565b610595610d173660046149d4565b612087565b6000610d286000611004565b6001600160a01b0316336001600160a01b031614610d615760405162461bcd60e51b8152600401610d5890614e73565b60405180910390fd5b605154600160d81b900460ff1615610dbb5760405162461bcd60e51b815260206004820152601d60248201527f50524556494f55535f534c415348494e475f4e4f545f534554544c45440000006044820152606401610d58565b60008211610df95760405162461bcd60e51b815260206004820152600b60248201526a16915493d7d05353d5539560aa1b6044820152606401610d58565b6000610e0460025490565b90506000610e1182611324565b90506000610e2a6050548361215890919063ffffffff16565b905080851115610e38578094505b7f0000000000000000000000000000000000000000000000000000000000000000610e638684614ec0565b1015610ea85760405162461bcd60e51b815260206004820152601460248201527352454d41494e494e475f4c545f4d494e494d554d60601b6044820152606401610d58565b6051805460ff60d81b1916600160d81b179055610ed6610ed1610ecb8785614ec0565b856121e4565b612222565b610f0a6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001687876122c7565b856001600160a01b03167f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd86604051610f4591815260200190565b60405180910390a28493505050505b92915050565b606060038054610f6990614ed3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9590614ed3565b8015610fe25780601f10610fb757610100808354040283529160200191610fe2565b820191906000526020600020905b815481529060010190602001808311610fc557829003601f168201915b5050505050905090565b600033610ffa81858561232a565b5060019392505050565b6000908152604560205260409020546001600160a01b031690565b6110296002611004565b6001600160a01b0316336001600160a01b0316146110595760405162461bcd60e51b8152600401610d5890614f0d565b61106483838361244e565b505050565b61107433838361244e565b5050565b60006110846002611004565b6001600160a01b0316336001600160a01b0316146110b45760405162461bcd60e51b8152600401610d5890614f0d565b6110bf8484846127ce565b90505b9392505050565b6000336110d7858285612906565b6110e285858561297a565b506001949350505050565b6110f76002611004565b6001600160a01b0316336001600160a01b0316146111275760405162461bcd60e51b8152600401610d5890614f0d565b61113081612aa9565b50565b600033610ffa8185856111468383611e71565b6111509190614f44565b61232a565b7f00000000000000000000000000000000000000000000000000000000000000008110156111b95760405162461bcd60e51b8152602060048201526011602482015270414d4f554e545f4c545f4d494e494d554d60781b6044820152606401610d58565b60006111c460025490565b90507f000000000000000000000000000000000000000000000000000000000000000081101561122a5760405162461bcd60e51b81526020600482015260116024820152705348415245535f4c545f4d494e494d554d60781b6044820152606401610d58565b600061123582611324565b905061124d610ed16112478584614f44565b846121e4565b6112826001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086612b8c565b6040518381527f278e51d3323fbf18b9fb8df3f8b97e31b145bc1146c52e764cf4aa1bfc4ba17d9060200160405180910390a1505050565b73ee56e2b3d491590b5b31738cc34d5232f378a8d533146112da57600080fd5b605380546001600160a01b0319166001600160a01b0383169081179091556040517f62bbced765bccc9ed93d0bae1b2a8c86e13b4663f8bf27d5936d9d619194c8a990600090a250565b6051546000906001600160d81b031661134583670de0b6b3a7640000614f57565b610f549190614f6e565b61135b33826000612bc4565b61113033826001612bc4565b60008061137383612cc5565b925050506113818482612d04565b949350505050565b6001600160a01b031660009081526020819052604090205490565b605154600090670de0b6b3a764000090611345906001600160d81b031684614f57565b60405163d505accf60e01b81526001600160a01b038781166004830152306024830152604482018790526064820186905260ff8516608483015260a4820184905260c482018390527f0000000000000000000000000000000000000000000000000000000000000000169063d505accf9060e401600060405180830381600087803b15801561145557600080fd5b505af1158015611469573d6000803e3d6000fd5b50505050611478868787612d2f565b505050505050565b61148a6000611004565b6001600160a01b0316336001600160a01b0316146114ba5760405162461bcd60e51b8152600401610d5890614e73565b61113081612edc565b6114cc33612aa9565b565b6114d86001611004565b6001600160a01b0316336001600160a01b0316146115385760405162461bcd60e51b815260206004820152601960248201527f43414c4c45525f4e4f545f434f4f4c444f574e5f41444d494e000000000000006044820152606401610d58565b61113081612f69565b604080516001808252818301909252600091829190816020015b611588604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b81526020019060019003908161155b5790505090506040518060600160405280306001600160a01b031681526020016115c085611389565b81526020016115ce60025490565b815250816000815181106115e4576115e4614f90565b60200260200101819052506115f98382612f9e565b6001600160a01b0384166000908152603d60205260409020546110c29190614f44565b60006110c23384846130ac565b606060048054610f6990614ed3565b6000610f5460025490565b6110643383836127ce565b6116586002611004565b6001600160a01b0316336001600160a01b0316146116885760405162461bcd60e51b8152600401610d5890614f0d565b6116938484846127ce565b5061169f84848361244e565b50505050565b600033816116b38286611e71565b9050838110156117135760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610d58565b6110e2828686840361232a565b600954600590811161178b5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610d58565b600981905561179d8686868686613197565b60405163095ea7b360e01b815230600482015260001960248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063095ea7b3906044016020604051808303816000875af115801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f9190614fa6565b50505050505050565b600033610ffa81858561297a565b60008281526045602052604090205482906001600160a01b031633146118a65760405162461bcd60e51b815260206004820152601560248201527421a0a62622a92fa727aa2fa927a622afa0a226a4a760591b6044820152606401610d58565b60008381526046602090815260409182902080546001600160a01b0319166001600160a01b03861690811790915591518581527fc3d1bf52795a20771ee6de3e59948fd83e10db956122d4709a3b86c512963855910160405180910390a2505050565b611074338383612d2f565b61191e6000611004565b6001600160a01b0316336001600160a01b03161461194e5760405162461bcd60e51b8152600401610d5890614e73565b6051805460ff60d81b191690556040517fcdee157e87ba915be681d4fa3f3d511afe7348eca06448a3accd6ac227fa40af90600090a1565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119f65760405162461bcd60e51b815260206004820152601560248201527427a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a960591b6044820152606401610d58565b60005b8151811015611a3757600254828281518110611a1757611a17614f90565b602090810291909101810151015280611a2f81614fc8565b9150506119f9565b50611130816132bb565b6000806000611a4f84612cc5565b5091509150611a6082828743613429565b95945050505050565b6000611a756002611004565b6001600160a01b0316336001600160a01b031614611aa55760405162461bcd60e51b8152600401610d5890614f0d565b6110bf8484846130ac565b6000806000611abe84612cc5565b5091509150611acf82828888613429565b9695505050505050565b604080517f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a001604051602081830303815290604052805190602001209050600060435482604051602001611b57929190614fe1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611bc2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bf55760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b0381166000908152604460205260408120805491611c1983614fc8565b919050558814611c5b5760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b6044820152606401610d58565b86421115611c7b5760405162461bcd60e51b8152600401610d5890615027565b611c87818a6000612bc4565b611c93818a6001612bc4565b505050505050505050565b6001600160a01b038716611ce45760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22fa7aba722a960991b6044820152606401610d58565b83421115611d045760405162461bcd60e51b8152600401610d5890615027565b6001600160a01b0387811660008181526044602090815260408083205460435482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958c166060860152608085018b905260a0850181905260c08086018b90528251808703909101815260e086019092528151919092012090939192611d9b92919061010001614fe1565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa158015611e03573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614611e3d5760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b0389166000908152604460205260409020600183019055611c9389898961232a565b611074338383612bc4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611ea73384846127ce565b5061106433848361244e565b60007f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e588886001811115611ee957611ee9615053565b6040805160208101949094526001600160a01b039092169183019190915260608201526080810187905260a0810186905260c001604051602081830303815290604052805190602001209050600060435482604051602001611f4c929190614fe1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611fb7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611fea5760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b038116600090815260446020526040812080549161200e83614fc8565b9190505588146120505760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b6044820152606401610d58565b864211156120705760405162461bcd60e51b8152600401610d5890615027565b61207b818b8b612bc4565b50505050505050505050565b60008181526046602052604090205481906001600160a01b031633146120ef5760405162461bcd60e51b815260206004820152601d60248201527f43414c4c45525f4e4f545f50454e44494e475f524f4c455f41444d494e0000006044820152606401610d58565b60008281526045602090815260408083208054336001600160a01b0319918216811790925560468452938290208054909416909355518481527f83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf91015b60405180910390a25050565b6000821580612165575081155b1561217257506000610f54565b61217e82600019614f6e565b8311156121cd5760405162461bcd60e51b815260206004820152601c60248201527f4d4154485f4d554c5449504c49434154494f4e5f4f564552464c4f57000000006044820152606401610d58565b6127106121da8385614f57565b6110c29190614f6e565b60006110c2836001816121ff670de0b6b3a764000087614f57565b6122099190614f44565b6122139190614ec0565b61221d9190614f6e565b613472565b6040518060400160405280612236436134df565b64ffffffffff90811682526001600160d81b038085166020938401526051805463ffffffff600160e01b9182900481166000908152605287526040902087519790960151909316600160281b0295909316949094179092558254601c926122a09290910416615069565b91906101000a81548163ffffffff021916908363ffffffff16021790555061113081613545565b6040516001600160a01b03831660248201526044810182905261106490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526135e1565b6001600160a01b03831661238c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610d58565b6001600160a01b0382166123ed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610d58565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b8060000361246e5760405162461bcd60e51b8152600401610d589061508c565b6001600160a01b0383166000908152603e602090815260409182902082518084019093525464ffffffffff81168352600160281b90046001600160d81b031690820152605154600160d81b900460ff166125ad57604f5481516124d8919064ffffffffff16614f44565b421161251e5760405162461bcd60e51b815260206004820152601560248201527424a729aaa32324a1a4a2a72a2fa1a7a7a62227aba760591b6044820152606401610d58565b604f5481517f0000000000000000000000000000000000000000000000000000000000000000916125559164ffffffffff16614f44565b61255f9042614ec0565b11156125ad5760405162461bcd60e51b815260206004820152601760248201527f554e5354414b455f57494e444f575f46494e49534845440000000000000000006044820152606401610d58565b60006125b885611389565b605154909150600090600160d81b900460ff166125e25782602001516001600160d81b03166125e4565b815b9050806000036126365760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f5a45524f5f4d41585f52454445454d41424c4500000000006044820152606401610d58565b60008185116126455784612647565b815b9050612655878460016136b3565b50600061266182611324565b905061266d8883613762565b845164ffffffffff161561273a578185602001516001600160d81b03166126949190614ec0565b6000036126b9576001600160a01b0388166000908152603e602052604081205561273a565b6126c2826138a0565b6001600160a01b0389166000908152603e60205260409020546126fe916001600160b81b031690600160281b90046001600160d81b03166150b9565b6001600160a01b0389166000908152603e6020526040902080546001600160d81b0392909216600160281b0264ffffffffff9092169190911790555b61276e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001688836122c7565b866001600160a01b0316886001600160a01b03167f3f693fff038bb8a046aa76d9516190ac7444f7d69cf952c4cbdc086fdef2d6fc83856040516127bc929190918252602082015260400190565b60405180910390a35050505050505050565b6000816000036127f05760405162461bcd60e51b8152600401610d589061508c565b6000612806856127ff87611389565b60006136b3565b905060008184116128175783612819565b815b90508060000361283b5760405162461bcd60e51b8152600401610d589061508c565b6128458183614ec0565b6001600160a01b038088166000908152603d60205260409020919091556128b0907f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008784612b8c565b846001600160a01b0316866001600160a01b03167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c7836040516128f591815260200190565b60405180910390a395945050505050565b60006129128484611e71565b9050600019811461169f578181101561296d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610d58565b61169f848484840361232a565b600061298584611389565b9050612993848260016136b3565b50826001600160a01b0316846001600160a01b031614612a9e5760006129b884611389565b90506129c6848260016136b3565b506001600160a01b0385166000908152603e602090815260409182902082518084019093525464ffffffffff8116808452600160281b9091046001600160d81b03169183019190915215612a9b57838303612a39576001600160a01b0386166000908152603e6020526040812055612a9b565b60208101516001600160d81b0316612a518585614ec0565b1015612a9b57612a618484614ec0565b6001600160a01b0387166000908152603e60205260409020805464ffffffffff166001600160b81b0392909216600160281b029190911790555b50505b61169f848484613909565b6000612ab482611389565b905080600003612b065760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e00000000006044820152606401610d58565b60408051808201825264ffffffffff42811682526001600160d81b0380851660208085019182526001600160a01b0388166000818152603e9092529086902094519151909216600160281b0292169190911790915590517f8a05f911d8ab7fc50fec37ef4ba7f9bfcb1a3c191c81dcd824ad0946c4e20d659061214c9084815260200190565b6040516001600160a01b038085166024830152831660448201526064810182905261169f9085906323b872dd60e01b906084016122f3565b6001600160a01b038216612c0e5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f44454c45474154454560781b6044820152606401610d58565b6000612c1982612cc5565b925050506000612c2885611389565b90506000612c368684612d04565b6001600160a01b03878116600090815260208690526040902080546001600160a01b0319169188169190911790559050612c7281868487613ab8565b846001600160a01b0316866001600160a01b03167fe8d51c8e11bd570db1734c8ec775785330e77007feed45c43b608ef33ff914bd86604051612cb59190615102565b60405180910390a3505050505050565b6000808080846001811115612cdc57612cdc615053565b03612cf157506006915060079050603f612cfd565b50604091506041905060425b9193909250565b6001600160a01b03808316600090815260208390526040812054909116806110c25783915050610f54565b605154600160d81b900460ff1615612d7c5760405162461bcd60e51b815260206004820152601060248201526f534c415348494e475f4f4e474f494e4760801b6044820152606401610d58565b80600003612d9c5760405162461bcd60e51b8152600401610d589061508c565b6000612da783611389565b90506000612dbf843084612dba60025490565b613cbc565b90508015612e42576001600160a01b0384166000908152603d6020526040902054612deb908290614f44565b6001600160a01b0385166000818152603d60209081526040918290209390935580519182529181018390527f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76910160405180910390a15b6000612e4d846113a4565b9050612e846001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016873087612b8c565b612e8e8582613d7d565b846001600160a01b0316866001600160a01b03167f6c86f3fd5118b3aa8bb4f389a617046de0a3d3d477de1a1673d227f802f616dc8684604051612cb5929190918252602082015260400190565b6127108110612f2d5760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f534c415348494e475f50455243454e5441474500000000006044820152606401610d58565b60508190556040518181527fb79c2d6c7f5c95eec9dc05affc0ed002620a4ec6d72b7b0744cc8638168c600a906020015b60405180910390a150565b604f8190556040518181527fbbf67247b5c97564e30ffc0a355e71c006836de7b9149e09e3d5d6054cb0335590602001612f5e565b600080805b83518110156130a4576000603c6000868481518110612fc457612fc4614f90565b602090810291909101810151516001600160a01b031682528101919091526040016000908120600181015481548851929450613032926001600160801b0380831692600160801b900416908a908890811061302157613021614f90565b602002602001015160400151613e48565b905061308386848151811061304957613049614f90565b602002602001015160200151828460020160008b6001600160a01b03166001600160a01b0316815260200190815260200160002054613f53565b61308d9085614f44565b93505050808061309c90614fc8565b915050612fa3565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461314f5760405162461bcd60e51b815260206004820181905260248201527f5245574152445f544f4b454e5f49535f4e4f545f5354414b45445f544f4b454e6044820152606401610d58565b60006131658561315e87611389565b60016136b3565b905060008184116131765783613178565b815b90508015611a605761318b8630836127ce565b50611a60308683612d2f565b60408051600380825260808201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816131af579050509050604051806040016040528060008152602001876001600160a01b03168152508160008151811061320a5761320a614f90565b6020026020010181905250604051806040016040528060018152602001866001600160a01b03168152508160018151811061324757613247614f90565b6020026020010181905250604051806040016040528060028152602001856001600160a01b03168152508160028151811061328457613284614f90565b602002602001018190525061329881613f7f565b6132a183612edc565b6132aa82612f69565b611478670de0b6b3a7640000612222565b60005b8151811015611074576000603c60008484815181106132df576132df614f90565b6020026020010151604001516001600160a01b03166001600160a01b03168152602001908152602001600020905061335283838151811061332257613322614f90565b6020026020010151604001518285858151811061334157613341614f90565b60200260200101516020015161415b565b5082828151811061336557613365614f90565b60209081029190910101515181546fffffffffffffffffffffffffffffffff19166001600160801b0390911617815582518390839081106133a8576133a8614f90565b6020026020010151604001516001600160a01b03167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8484815181106133f0576133f0614f90565b602090810291909101810151516040516001600160801b0390911681520160405180910390a2508061342181614fc8565b9150506132be565b60515460009061344990605290600160e01b900463ffffffff1684614213565b670de0b6b3a764000061345e87878787614320565b6134689190614f57565b611a609190614f6e565b60006001600160d81b038211156134db5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663136206269747360c81b6064820152608401610d58565b5090565b600064ffffffffff8211156134db5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526530206269747360d01b6064820152608401610d58565b806001600160d81b03166000036135935760405162461bcd60e51b81526020600482015260126024820152715a45524f5f45584348414e47455f5241544560701b6044820152606401610d58565b605180546001600160d81b0319166001600160d81b0383169081179091556040519081527fa9c433f9734baa3cf48b209454bb0ace054e191f677ba50e74b696c0d35ef26290602001612f5e565b6000613636826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143fa9092919063ffffffff16565b80519091501561106457808060200190518101906136549190614fa6565b6110645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d58565b6000806136c5853086612dba60025490565b6001600160a01b0386166000908152603d6020526040812054919250906136ed908390614f44565b90508115611a60578315613717576001600160a01b0386166000908152603d602052604090208190555b604080516001600160a01b0388168152602081018490527f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76910160405180910390a195945050505050565b6001600160a01b0382166137c25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610d58565b6137ce82600083614409565b6001600160a01b038216600090815260208190526040902054818110156138425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610d58565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60006001600160b81b038211156134db5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663834206269747360c81b6064820152608401610d58565b6001600160a01b03831661396d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610d58565b6001600160a01b0382166139cf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610d58565b6139da838383614409565b6001600160a01b03831660009081526020819052604090205481811015613a525760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610d58565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361169f565b826001600160a01b0316846001600160a01b0316031561169f57600080613ade83612cc5565b5090925090506001600160a01b03861615613bcf576001600160a01b0386166000908152602082905260408120548015613b5e576001600160a01b038816600090815260208590526040812090613b36600184614ec0565b8152602081019190915260400160002054600160801b90046001600160801b03169150613b6a565b613b6788611389565b91505b613b8084848a85613b7b8b82614ec0565b614588565b6001600160a01b0388167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f613bb58885614ec0565b87604051613bc4929190615110565b60405180910390a250505b6001600160a01b03851615611478576001600160a01b0385166000908152602082905260408120548015613c49576001600160a01b038716600090815260208590526040812090613c21600184614ec0565b8152602081019190915260400160002054600160801b90046001600160801b03169150613c55565b613c5287611389565b91505b613c6684848985613b7b8b82614f44565b6001600160a01b0387167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f613c9b8885614f44565b87604051613caa929190615110565b60405180910390a25050505050505050565b6001600160a01b038084166000908152603c602090815260408083209388168352600284019091528120549091908280613cf788858861415b565b9050808314613d71578615613d1457613d11878285613f53565b91505b6001600160a01b03808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90613d689085815260200190565b60405180910390a35b50979650505050505050565b6001600160a01b038216613dd35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610d58565b613ddf60008383614409565b8060026000828254613df19190614f44565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000831580613e55575081155b80613e68575042836001600160801b0316145b80613e9c57507f0000000000000000000000000000000000000000000000000000000000000000836001600160801b031610155b15613ea8575083611381565b60007f00000000000000000000000000000000000000000000000000000000000000004211613ed75742613ef9565b7f00000000000000000000000000000000000000000000000000000000000000005b90506000613f106001600160801b03861683614ec0565b90508684613f206012600a615208565b613f2a848a614f57565b613f349190614f57565b613f3e9190614f6e565b613f489190614f44565b979650505050505050565b6000613f616012600a615208565b613f6b8385614ec0565b613f759086614f57565b6110bf9190614f6e565b60005b81518110156110745760006001600160a01b031660456000848481518110613fac57613fac614f90565b602090810291909101810151518252810191909152604001600020546001600160a01b031614801561400e575060006001600160a01b0316828281518110613ff657613ff6614f90565b6020026020010151602001516001600160a01b031614155b61405a5760405162461bcd60e51b815260206004820152601b60248201527f41444d494e5f43414e4e4f545f42455f494e495449414c495a454400000000006044820152606401610d58565b81818151811061406c5761406c614f90565b6020026020010151602001516045600084848151811061408e5761408e614f90565b602002602001015160000151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106140de576140de614f90565b6020026020010151602001516001600160a01b03167f83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf83838151811061412657614126614f90565b60200260200101516000015160405161414191815260200190565b60405180910390a28061415381614fc8565b915050613f82565b6001820154825460009190600160801b90046001600160801b031642819003614186575090506110c2565b84546000906141a19084906001600160801b03168488613e48565b90508281146141f057600186018190556040518181526001600160a01b038816907f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc9060200160405180910390a25b85546001600160801b03428116600160801b029116178655925050509392505050565b600019820160009081526020849052604081205464ffffffffff16821061425e57506000198201600090815260208490526040902054600160281b90046001600160d81b03166110c2565b600060001984015b818111156142f75760028282030481036000818152602088815260409182902082518084019093525464ffffffffff8116808452600160281b9091046001600160d81b0316918301919091528690036142d157602001516001600160d81b031693506110c292505050565b805164ffffffffff168611156142e9578193506142f0565b6001820392505b5050614266565b5060009081526020949094525050604090912054600160281b90046001600160d81b0316919050565b6000438211156143695760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa12627a1a5afa72aa6a122a960611b6044820152606401610d58565b6001600160a01b0383166000908152602085905260408120549081900361439b5761439384611389565b915050611381565b6001600160a01b0384166000908152602087815260408083208380529091529020546001600160801b03168310156143d7576000915050611381565b6001600160a01b0384166000908152602087905260409020611acf90828561469e565b60606110bf84846000856147aa565b6053546001600160a01b031680156144e057806001600160a01b0316635b9c4cf1858561443588611389565b61443e88611389565b6040516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152604483015260648201526084810185905260a401600060405180830381600087803b15801561449957600080fd5b505af19250505080156144aa575060015b6144e0573d8080156144d8576040519150601f19603f3d011682016040523d82523d6000602084013e6144dd565b606091505b50505b6001600160a01b038085166000908152603f6020526040808220548684168352912054908216911681614511578591505b6001600160a01b0381166145225750835b61452f8282866000613ab8565b6001600160a01b03808716600090815260426020526040808220548884168352912054908216911681614560578791505b6001600160a01b0381166145715750855b61457e8282886001613ab8565b5050505050505050565b6001600160a01b038316600090815260208581526040808320549188905290912043919081158015906145ea57506001600160801b0383168160006145ce600186614ec0565b81526020810191909152604001600020546001600160801b0316145b1561462e57838160006145fe600186614ec0565b8152602081019190915260400160002080546001600160801b03928316600160801b02921691909117905561457e565b6040805180820182526001600160801b038086168252868116602080840191825260008781529086905293909320915192518116600160801b02921691909117905561467b826001614f44565b6001600160a01b0387166000908152602089905260409020555050505050505050565b60001982016000908152602084905260408120546001600160801b031682106146eb57506000198201600090815260208490526040902054600160801b90046001600160801b03166110c2565b600060001984015b81811115614781576002828203048103600081815260208881526040918290208251808401909352546001600160801b03808216808552600160801b909204169183019190915286900361475957602001516001600160801b031693506110c292505050565b80516001600160801b03168611156147735781935061477a565b6001820392505b50506146f3565b5060009081526020949094525050604090912054600160801b90046001600160801b0316919050565b60608247101561480b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610d58565b600080866001600160a01b031685876040516148279190615214565b60006040518083038185875af1925050503d8060008114614864576040519150601f19603f3d011682016040523d82523d6000602084013e614869565b606091505b5091509150613f4887838387606083156148e45782516000036148dd576001600160a01b0385163b6148dd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d58565b5081611381565b61138183838151156148f95781518083602001fd5b8060405162461bcd60e51b8152600401610d5891906149a4565b6001600160a01b038116811461113057600080fd5b6000806040838503121561493b57600080fd5b823561494681614913565b946020939093013593505050565b60005b8381101561496f578181015183820152602001614957565b50506000910152565b60008151808452614990816020860160208601614954565b601f01601f19169290920160200192915050565b6020815260006110c26020830184614978565b6000602082840312156149c957600080fd5b81356110c281614913565b6000602082840312156149e657600080fd5b5035919050565b600080600060608486031215614a0257600080fd5b8335614a0d81614913565b92506020840135614a1d81614913565b929592945050506040919091013590565b60008060408385031215614a4157600080fd5b8235614a4c81614913565b91506020830135614a5c81614913565b809150509250929050565b803560028110614a7657600080fd5b919050565b60008060408385031215614a8e57600080fd5b8235614a9981614913565b9150614aa760208401614a67565b90509250929050565b803560ff81168114614a7657600080fd5b60008060008060008060c08789031215614ada57600080fd5b8635614ae581614913565b95506020870135945060408701359350614b0160608801614ab0565b92506080870135915060a087013590509295509295509295565b600060208284031215614b2d57600080fd5b813563ffffffff811681146110c257600080fd5b60008060008060808587031215614b5757600080fd5b8435614b6281614913565b93506020850135614b7281614913565b93969395505050506040820135916060013590565b600080600080600060a08688031215614b9f57600080fd5b8535614baa81614913565b94506020860135614bba81614913565b93506040860135614bca81614913565b94979396509394606081013594506080013592915050565b60008060408385031215614bf557600080fd5b823591506020830135614a5c81614913565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715614c4057614c40614c07565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715614c6f57614c6f614c07565b604052919050565b60006020808385031215614c8a57600080fd5b823567ffffffffffffffff80821115614ca257600080fd5b818501915085601f830112614cb657600080fd5b813581811115614cc857614cc8614c07565b614cd6848260051b01614c46565b81815284810192506060918202840185019188831115614cf557600080fd5b938501935b82851015613d715780858a031215614d125760008081fd5b614d1a614c1d565b85356001600160801b0381168114614d325760008081fd5b81528587013587820152604080870135614d4b81614913565b9082015284529384019392850192614cfa565b600080600060608486031215614d7357600080fd5b8335614d7e81614913565b925060208401359150614d9360408501614a67565b90509250925092565b600080600080600080600060e0888a031215614db757600080fd5b8735614dc281614913565b96506020880135614dd281614913565b95506040880135945060608801359350614dee60808901614ab0565b925060a0880135915060c0880135905092959891949750929550565b600080600060608486031215614e1f57600080fd5b8335614e2a81614913565b95602085013595506040909401359392505050565b600080600080600080600060e0888a031215614e5a57600080fd5b8735614e6581614913565b9650614dd260208901614a67565b60208082526019908201527f43414c4c45525f4e4f545f534c415348494e475f41444d494e00000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f5457610f54614eaa565b600181811c90821680614ee757607f821691505b602082108103614f0757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526017908201527f43414c4c45525f4e4f545f434c41494d5f48454c504552000000000000000000604082015260600190565b80820180821115610f5457610f54614eaa565b8082028115828204841417610f5457610f54614eaa565b600082614f8b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614fb857600080fd5b815180151581146110c257600080fd5b600060018201614fda57614fda614eaa565b5060010190565b61190160f01b81526002810192909252602282015260420190565b602080825260119082015270494e56414c49445f5349474e415455524560781b604082015260600190565b60208082526012908201527124a72b20a624a22fa2ac2824a920aa24a7a760711b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b600063ffffffff80831681810361508257615082614eaa565b6001019392505050565b6020808252601390820152721253959053125117d6915493d7d05353d55395606a1b604082015260600190565b6001600160d81b038281168282160390808211156150d9576150d9614eaa565b5092915050565b600281106150fe57634e487b7160e01b600052602160045260246000fd5b9052565b60208101610f5482846150e0565b828152604081016110c260208301846150e0565b600181815b8085111561515f57816000190482111561514557615145614eaa565b8085161561515257918102915b93841c9390800290615129565b509250929050565b60008261517657506001610f54565b8161518357506000610f54565b816001811461519957600281146151a3576151bf565b6001915050610f54565b60ff8411156151b4576151b4614eaa565b50506001821b610f54565b5060208310610133831016604e8410600b84101617156151e2575081810a610f54565b6151ec8383615124565b806000190482111561520057615200614eaa565b029392505050565b60006110c28383615167565b60008251615226818460208701614954565b919091019291505056fea2646970667358221220eca7538023765a4de548dace73c5919366f9605051f5141240ca82e0c4ea703c64736f6c634300081100330000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae90000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae9000000000000000000000000000000000000000000000000000000000002a30000000000000000000000000025f2226b597e8f9514b3f68f00f494cf4f286491000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d500000000000000000000000000000000000000000000000000000000bc180c38",
                    "network_id": "",
                    "output": "0x608060405234801561001057600080fd5b50600436106104965760003560e01c80638c9a281d11610262578063aff05aa911610151578063dbc0ed8a116100ce578063eab5231811610092578063eab5231814610c65578063f036bc6814610c78578063f11b818814610c8c578063f34d96da14610cee578063f713d8a814610cf6578063fde9eb6914610d0957600080fd5b8063dbc0ed8a14610c1f578063dc937e1c14610c27578063dd62ed3e14610c3a578063dde43cba14610c4d578063e6aa216c14610c5457600080fd5b8063c2ffbb9111610115578063c2ffbb9114610bac578063c3863ada14610bbf578063c3cda52014610bd2578063cbcbb50714610be5578063d505accf14610c0c57600080fd5b8063aff05aa914610b4b578063b2a5dbfa14610b53578063b2f4201d14610b66578063b9844d8d14610b79578063c18f539a14610b9957600080fd5b80639a99b4f0116101df578063a9059cbb116101a3578063a9059cbb14610ae3578063aa9fbe0214610af6578063aaf5eb6814610b1d578063ab406fe614610b25578063adc9772e14610b3857600080fd5b80639a99b4f014610a8f5780639c9b515414610aa25780639e3ffce014610ab5578063a457c2d714610abd578063a6b63eb814610ad057600080fd5b8063946776cd11610226578063946776cd14610a13578063955e18af14610a3a57806395d89b4114610a4d578063981b24d014610a5557806399248ea714610a6857600080fd5b80638c9a281d146109325780638dbefee21461093a5780638e9b2ca41461094d5780638ef98e0e1461095c578063919cd40f146109ec57600080fd5b806345755dd6116103895780636f50458d1161030657806374011f56116102ca57806374011f56146108a457806378160376146108b7578063787a08a6146108d75780637b5b1157146108df5780637bb73c97146108f25780637e90d7ef1461091257600080fd5b80636f50458d1461085857806370a082311461086b578063727a5d571461087e57806372b49d631461082957806373d6a8891461089157600080fd5b80635b3cc0cf1161034d5780635b3cc0cf146107925780635c19a95c146107f157806360ba192b14610804578063616e0bf9146108295780636198e1351461083157600080fd5b806345755dd6146107095780634575e69b1461071c5780634998fffd146107455780634cdad5061461075857806358146d171461076b57600080fd5b806323b872dd116104175780633373ee4c116103db5780633373ee4c14610661578063359c4a961461069f5780633644e515146106c657806339509351146106cf57806341cbf54a146106e257600080fd5b806323b872dd146105d8578063250201db146105eb57806330adf81f146105fe578063312f6b8314610625578063313ce5671461064c57600080fd5b8063112d037c1161045e578063112d037c14610582578063174ed5421461059757806318160ddd146105aa5780631e9a6950146105b257806320fb80b5146105c557600080fd5b806302fb4d851461049b57806306fdde03146104c1578063091030c3146104d6578063095ea7b314610534578063111fd88b14610557575b600080fd5b6104ae6104a9366004614928565b610d1c565b6040519081526020015b60405180910390f35b6104c9610f5a565b6040516104b891906149a4565b61050f6104e43660046149b7565b603e6020526000908152604090205464ffffffffff811690600160281b90046001600160d81b031682565b6040805164ffffffffff90931683526001600160d81b039091166020830152016104b8565b610547610542366004614928565b610fec565b60405190151581526020016104b8565b61056a6105653660046149d4565b611004565b6040516001600160a01b0390911681526020016104b8565b6105956105903660046149ed565b61101f565b005b60535461056a906001600160a01b031681565b6002546104ae565b6105956105c0366004614928565b611069565b6104ae6105d33660046149ed565b611078565b6105476105e63660046149ed565b6110c9565b6105956105f93660046149b7565b6110ed565b6104ae7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61056a7f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae981565b60125b60405160ff90911681526020016104b8565b6104ae61066f366004614a2e565b6001600160a01b038082166000908152603c60209081526040808320938616835260029093019052205492915050565b6104ae7f000000000000000000000000000000000000000000000000000000000002a30081565b6104ae60435481565b6105476106dd366004614928565b611133565b6104ae7f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d81565b6105956107173660046149d4565b611155565b61056a61072a3660046149d4565b6000908152604660205260409020546001600160a01b031690565b6105956107533660046149b7565b6112ba565b6104ae6107663660046149d4565b611324565b61077a670de0b6b3a764000081565b6040516001600160d81b0390911681526020016104b8565b6107d16107a0366004614928565b60066020908152600092835260408084209091529082529020546001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016104b8565b6105956107ff3660046149b7565b61134f565b605154600160e01b900463ffffffff1660405163ffffffff90911681526020016104b8565b604f546104ae565b6104ae7f0000000000000000000000000000000000000000000000000de0b6b3a764000081565b61056a610866366004614a7b565b611367565b6104ae6108793660046149b7565b611389565b6104ae61088c3660046149d4565b6113a4565b61059561089f366004614ac1565b6113c7565b6105956108b23660046149d4565b611480565b6104c9604051806040016040528060018152602001603160f81b81525081565b6105956114c3565b6105956108ed3660046149d4565b6114ce565b6104ae6109003660046149b7565b60076020526000908152604090205481565b6104ae6109203660046149b7565b603d6020526000908152604090205481565b6104ae600081565b6104ae6109483660046149b7565b611541565b6104ae670de0b6b3a764000081565b6109c161096a366004614b1b565b60408051808201909152600080825260208201525063ffffffff1660009081526052602090815260409182902082518084019093525464ffffffffff81168352600160281b90046001600160d81b03169082015290565b60408051825164ffffffffff1681526020928301516001600160d81b031692810192909252016104b8565b6104ae7f00000000000000000000000000000000000000000000000000000001207eb54881565b61056a7f00000000000000000000000025f2226b597e8f9514b3f68f00f494cf4f28649181565b6104ae610a48366004614928565b61161c565b6104c9611629565b6104ae610a633660046149d4565b611638565b61056a7f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae981565b610595610a9d366004614928565b611643565b610595610ab0366004614b41565b61164e565b6104ae600181565b610547610acb366004614928565b6116a5565b610595610ade366004614b87565b611720565b610547610af1366004614928565b611838565b6104ae7f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e581565b61064f601281565b610595610b33366004614be2565b611846565b610595610b46366004614928565b611909565b610595611914565b610595610b61366004614c77565b611986565b6104ae610b74366004614a7b565b611a41565b6104ae610b873660046149b7565b60446020526000908152604090205481565b6104ae610ba73660046149ed565b611a69565b6104ae610bba366004614d5e565b611ab0565b60085461056a906001600160a01b031681565b610595610be0366004614ac1565b611ad9565b61056a7f000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d581565b610595610c1a366004614d9c565b611c9e565b6104ae600281565b610595610c35366004614a7b565b611e66565b6104ae610c48366004614a2e565b611e71565b60056104ae565b6051546001600160d81b031661077a565b610595610c73366004614e0a565b611e9c565b60515461054790600160d81b900460ff1681565b610cc8610c9a3660046149b7565b603c60205260009081526040902080546001909101546001600160801b0380831692600160801b9004169083565b604080516001600160801b039485168152939092166020840152908201526060016104b8565b6050546104ae565b610595610d04366004614e3f565b611eb3565b610595610d173660046149d4565b612087565b6000610d286000611004565b6001600160a01b0316336001600160a01b031614610d615760405162461bcd60e51b8152600401610d5890614e73565b60405180910390fd5b605154600160d81b900460ff1615610dbb5760405162461bcd60e51b815260206004820152601d60248201527f50524556494f55535f534c415348494e475f4e4f545f534554544c45440000006044820152606401610d58565b60008211610df95760405162461bcd60e51b815260206004820152600b60248201526a16915493d7d05353d5539560aa1b6044820152606401610d58565b6000610e0460025490565b90506000610e1182611324565b90506000610e2a6050548361215890919063ffffffff16565b905080851115610e38578094505b7f0000000000000000000000000000000000000000000000000de0b6b3a7640000610e638684614ec0565b1015610ea85760405162461bcd60e51b815260206004820152601460248201527352454d41494e494e475f4c545f4d494e494d554d60601b6044820152606401610d58565b6051805460ff60d81b1916600160d81b179055610ed6610ed1610ecb8785614ec0565b856121e4565b612222565b610f0a6001600160a01b037f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae91687876122c7565b856001600160a01b03167f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd86604051610f4591815260200190565b60405180910390a28493505050505b92915050565b606060038054610f6990614ed3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9590614ed3565b8015610fe25780601f10610fb757610100808354040283529160200191610fe2565b820191906000526020600020905b815481529060010190602001808311610fc557829003601f168201915b5050505050905090565b600033610ffa81858561232a565b5060019392505050565b6000908152604560205260409020546001600160a01b031690565b6110296002611004565b6001600160a01b0316336001600160a01b0316146110595760405162461bcd60e51b8152600401610d5890614f0d565b61106483838361244e565b505050565b61107433838361244e565b5050565b60006110846002611004565b6001600160a01b0316336001600160a01b0316146110b45760405162461bcd60e51b8152600401610d5890614f0d565b6110bf8484846127ce565b90505b9392505050565b6000336110d7858285612906565b6110e285858561297a565b506001949350505050565b6110f76002611004565b6001600160a01b0316336001600160a01b0316146111275760405162461bcd60e51b8152600401610d5890614f0d565b61113081612aa9565b50565b600033610ffa8185856111468383611e71565b6111509190614f44565b61232a565b7f0000000000000000000000000000000000000000000000000de0b6b3a76400008110156111b95760405162461bcd60e51b8152602060048201526011602482015270414d4f554e545f4c545f4d494e494d554d60781b6044820152606401610d58565b60006111c460025490565b90507f0000000000000000000000000000000000000000000000000de0b6b3a764000081101561122a5760405162461bcd60e51b81526020600482015260116024820152705348415245535f4c545f4d494e494d554d60781b6044820152606401610d58565b600061123582611324565b905061124d610ed16112478584614f44565b846121e4565b6112826001600160a01b037f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae916333086612b8c565b6040518381527f278e51d3323fbf18b9fb8df3f8b97e31b145bc1146c52e764cf4aa1bfc4ba17d9060200160405180910390a1505050565b73ee56e2b3d491590b5b31738cc34d5232f378a8d533146112da57600080fd5b605380546001600160a01b0319166001600160a01b0383169081179091556040517f62bbced765bccc9ed93d0bae1b2a8c86e13b4663f8bf27d5936d9d619194c8a990600090a250565b6051546000906001600160d81b031661134583670de0b6b3a7640000614f57565b610f549190614f6e565b61135b33826000612bc4565b61113033826001612bc4565b60008061137383612cc5565b925050506113818482612d04565b949350505050565b6001600160a01b031660009081526020819052604090205490565b605154600090670de0b6b3a764000090611345906001600160d81b031684614f57565b60405163d505accf60e01b81526001600160a01b038781166004830152306024830152604482018790526064820186905260ff8516608483015260a4820184905260c482018390527f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae9169063d505accf9060e401600060405180830381600087803b15801561145557600080fd5b505af1158015611469573d6000803e3d6000fd5b50505050611478868787612d2f565b505050505050565b61148a6000611004565b6001600160a01b0316336001600160a01b0316146114ba5760405162461bcd60e51b8152600401610d5890614e73565b61113081612edc565b6114cc33612aa9565b565b6114d86001611004565b6001600160a01b0316336001600160a01b0316146115385760405162461bcd60e51b815260206004820152601960248201527f43414c4c45525f4e4f545f434f4f4c444f574e5f41444d494e000000000000006044820152606401610d58565b61113081612f69565b604080516001808252818301909252600091829190816020015b611588604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b81526020019060019003908161155b5790505090506040518060600160405280306001600160a01b031681526020016115c085611389565b81526020016115ce60025490565b815250816000815181106115e4576115e4614f90565b60200260200101819052506115f98382612f9e565b6001600160a01b0384166000908152603d60205260409020546110c29190614f44565b60006110c23384846130ac565b606060048054610f6990614ed3565b6000610f5460025490565b6110643383836127ce565b6116586002611004565b6001600160a01b0316336001600160a01b0316146116885760405162461bcd60e51b8152600401610d5890614f0d565b6116938484846127ce565b5061169f84848361244e565b50505050565b600033816116b38286611e71565b9050838110156117135760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610d58565b6110e2828686840361232a565b600954600590811161178b5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610d58565b600981905561179d8686868686613197565b60405163095ea7b360e01b815230600482015260001960248201527f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae96001600160a01b03169063095ea7b3906044016020604051808303816000875af115801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f9190614fa6565b50505050505050565b600033610ffa81858561297a565b60008281526045602052604090205482906001600160a01b031633146118a65760405162461bcd60e51b815260206004820152601560248201527421a0a62622a92fa727aa2fa927a622afa0a226a4a760591b6044820152606401610d58565b60008381526046602090815260409182902080546001600160a01b0319166001600160a01b03861690811790915591518581527fc3d1bf52795a20771ee6de3e59948fd83e10db956122d4709a3b86c512963855910160405180910390a2505050565b611074338383612d2f565b61191e6000611004565b6001600160a01b0316336001600160a01b03161461194e5760405162461bcd60e51b8152600401610d5890614e73565b6051805460ff60d81b191690556040517fcdee157e87ba915be681d4fa3f3d511afe7348eca06448a3accd6ac227fa40af90600090a1565b336001600160a01b037f000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d516146119f65760405162461bcd60e51b815260206004820152601560248201527427a7262cafa2a6a4a9a9a4a7a72fa6a0a720a3a2a960591b6044820152606401610d58565b60005b8151811015611a3757600254828281518110611a1757611a17614f90565b602090810291909101810151015280611a2f81614fc8565b9150506119f9565b50611130816132bb565b6000806000611a4f84612cc5565b5091509150611a6082828743613429565b95945050505050565b6000611a756002611004565b6001600160a01b0316336001600160a01b031614611aa55760405162461bcd60e51b8152600401610d5890614f0d565b6110bf8484846130ac565b6000806000611abe84612cc5565b5091509150611acf82828888613429565b9695505050505050565b604080517f9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a001604051602081830303815290604052805190602001209050600060435482604051602001611b57929190614fe1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611bc2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611bf55760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b0381166000908152604460205260408120805491611c1983614fc8565b919050558814611c5b5760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b6044820152606401610d58565b86421115611c7b5760405162461bcd60e51b8152600401610d5890615027565b611c87818a6000612bc4565b611c93818a6001612bc4565b505050505050505050565b6001600160a01b038716611ce45760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22fa7aba722a960991b6044820152606401610d58565b83421115611d045760405162461bcd60e51b8152600401610d5890615027565b6001600160a01b0387811660008181526044602090815260408083205460435482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958c166060860152608085018b905260a0850181905260c08086018b90528251808703909101815260e086019092528151919092012090939192611d9b92919061010001614fe1565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa158015611e03573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614611e3d5760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b0389166000908152604460205260409020600183019055611c9389898961232a565b611074338383612bc4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611ea73384846127ce565b5061106433848361244e565b60007f10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e588886001811115611ee957611ee9615053565b6040805160208101949094526001600160a01b039092169183019190915260608201526080810187905260a0810186905260c001604051602081830303815290604052805190602001209050600060435482604051602001611f4c929190614fe1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611fb7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611fea5760405162461bcd60e51b8152600401610d5890614ffc565b6001600160a01b038116600090815260446020526040812080549161200e83614fc8565b9190505588146120505760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f4e4f4e434560981b6044820152606401610d58565b864211156120705760405162461bcd60e51b8152600401610d5890615027565b61207b818b8b612bc4565b50505050505050505050565b60008181526046602052604090205481906001600160a01b031633146120ef5760405162461bcd60e51b815260206004820152601d60248201527f43414c4c45525f4e4f545f50454e44494e475f524f4c455f41444d494e0000006044820152606401610d58565b60008281526045602090815260408083208054336001600160a01b0319918216811790925560468452938290208054909416909355518481527f83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf91015b60405180910390a25050565b6000821580612165575081155b1561217257506000610f54565b61217e82600019614f6e565b8311156121cd5760405162461bcd60e51b815260206004820152601c60248201527f4d4154485f4d554c5449504c49434154494f4e5f4f564552464c4f57000000006044820152606401610d58565b6127106121da8385614f57565b6110c29190614f6e565b60006110c2836001816121ff670de0b6b3a764000087614f57565b6122099190614f44565b6122139190614ec0565b61221d9190614f6e565b613472565b6040518060400160405280612236436134df565b64ffffffffff90811682526001600160d81b038085166020938401526051805463ffffffff600160e01b9182900481166000908152605287526040902087519790960151909316600160281b0295909316949094179092558254601c926122a09290910416615069565b91906101000a81548163ffffffff021916908363ffffffff16021790555061113081613545565b6040516001600160a01b03831660248201526044810182905261106490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526135e1565b6001600160a01b03831661238c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610d58565b6001600160a01b0382166123ed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610d58565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b8060000361246e5760405162461bcd60e51b8152600401610d589061508c565b6001600160a01b0383166000908152603e602090815260409182902082518084019093525464ffffffffff81168352600160281b90046001600160d81b031690820152605154600160d81b900460ff166125ad57604f5481516124d8919064ffffffffff16614f44565b421161251e5760405162461bcd60e51b815260206004820152601560248201527424a729aaa32324a1a4a2a72a2fa1a7a7a62227aba760591b6044820152606401610d58565b604f5481517f000000000000000000000000000000000000000000000000000000000002a300916125559164ffffffffff16614f44565b61255f9042614ec0565b11156125ad5760405162461bcd60e51b815260206004820152601760248201527f554e5354414b455f57494e444f575f46494e49534845440000000000000000006044820152606401610d58565b60006125b885611389565b605154909150600090600160d81b900460ff166125e25782602001516001600160d81b03166125e4565b815b9050806000036126365760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f5a45524f5f4d41585f52454445454d41424c4500000000006044820152606401610d58565b60008185116126455784612647565b815b9050612655878460016136b3565b50600061266182611324565b905061266d8883613762565b845164ffffffffff161561273a578185602001516001600160d81b03166126949190614ec0565b6000036126b9576001600160a01b0388166000908152603e602052604081205561273a565b6126c2826138a0565b6001600160a01b0389166000908152603e60205260409020546126fe916001600160b81b031690600160281b90046001600160d81b03166150b9565b6001600160a01b0389166000908152603e6020526040902080546001600160d81b0392909216600160281b0264ffffffffff9092169190911790555b61276e6001600160a01b037f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae91688836122c7565b866001600160a01b0316886001600160a01b03167f3f693fff038bb8a046aa76d9516190ac7444f7d69cf952c4cbdc086fdef2d6fc83856040516127bc929190918252602082015260400190565b60405180910390a35050505050505050565b6000816000036127f05760405162461bcd60e51b8152600401610d589061508c565b6000612806856127ff87611389565b60006136b3565b905060008184116128175783612819565b815b90508060000361283b5760405162461bcd60e51b8152600401610d589061508c565b6128458183614ec0565b6001600160a01b038088166000908152603d60205260409020919091556128b0907f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae9167f00000000000000000000000025f2226b597e8f9514b3f68f00f494cf4f2864918784612b8c565b846001600160a01b0316866001600160a01b03167f9310ccfcb8de723f578a9e4282ea9f521f05ae40dc08f3068dfad528a65ee3c7836040516128f591815260200190565b60405180910390a395945050505050565b60006129128484611e71565b9050600019811461169f578181101561296d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610d58565b61169f848484840361232a565b600061298584611389565b9050612993848260016136b3565b50826001600160a01b0316846001600160a01b031614612a9e5760006129b884611389565b90506129c6848260016136b3565b506001600160a01b0385166000908152603e602090815260409182902082518084019093525464ffffffffff8116808452600160281b9091046001600160d81b03169183019190915215612a9b57838303612a39576001600160a01b0386166000908152603e6020526040812055612a9b565b60208101516001600160d81b0316612a518585614ec0565b1015612a9b57612a618484614ec0565b6001600160a01b0387166000908152603e60205260409020805464ffffffffff166001600160b81b0392909216600160281b029190911790555b50505b61169f848484613909565b6000612ab482611389565b905080600003612b065760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f42414c414e43455f4f4e5f434f4f4c444f574e00000000006044820152606401610d58565b60408051808201825264ffffffffff42811682526001600160d81b0380851660208085019182526001600160a01b0388166000818152603e9092529086902094519151909216600160281b0292169190911790915590517f8a05f911d8ab7fc50fec37ef4ba7f9bfcb1a3c191c81dcd824ad0946c4e20d659061214c9084815260200190565b6040516001600160a01b038085166024830152831660448201526064810182905261169f9085906323b872dd60e01b906084016122f3565b6001600160a01b038216612c0e5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f44454c45474154454560781b6044820152606401610d58565b6000612c1982612cc5565b925050506000612c2885611389565b90506000612c368684612d04565b6001600160a01b03878116600090815260208690526040902080546001600160a01b0319169188169190911790559050612c7281868487613ab8565b846001600160a01b0316866001600160a01b03167fe8d51c8e11bd570db1734c8ec775785330e77007feed45c43b608ef33ff914bd86604051612cb59190615102565b60405180910390a3505050505050565b6000808080846001811115612cdc57612cdc615053565b03612cf157506006915060079050603f612cfd565b50604091506041905060425b9193909250565b6001600160a01b03808316600090815260208390526040812054909116806110c25783915050610f54565b605154600160d81b900460ff1615612d7c5760405162461bcd60e51b815260206004820152601060248201526f534c415348494e475f4f4e474f494e4760801b6044820152606401610d58565b80600003612d9c5760405162461bcd60e51b8152600401610d589061508c565b6000612da783611389565b90506000612dbf843084612dba60025490565b613cbc565b90508015612e42576001600160a01b0384166000908152603d6020526040902054612deb908290614f44565b6001600160a01b0385166000818152603d60209081526040918290209390935580519182529181018390527f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76910160405180910390a15b6000612e4d846113a4565b9050612e846001600160a01b037f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae916873087612b8c565b612e8e8582613d7d565b846001600160a01b0316866001600160a01b03167f6c86f3fd5118b3aa8bb4f389a617046de0a3d3d477de1a1673d227f802f616dc8684604051612cb5929190918252602082015260400190565b6127108110612f2d5760405162461bcd60e51b815260206004820152601b60248201527f494e56414c49445f534c415348494e475f50455243454e5441474500000000006044820152606401610d58565b60508190556040518181527fb79c2d6c7f5c95eec9dc05affc0ed002620a4ec6d72b7b0744cc8638168c600a906020015b60405180910390a150565b604f8190556040518181527fbbf67247b5c97564e30ffc0a355e71c006836de7b9149e09e3d5d6054cb0335590602001612f5e565b600080805b83518110156130a4576000603c6000868481518110612fc457612fc4614f90565b602090810291909101810151516001600160a01b031682528101919091526040016000908120600181015481548851929450613032926001600160801b0380831692600160801b900416908a908890811061302157613021614f90565b602002602001015160400151613e48565b905061308386848151811061304957613049614f90565b602002602001015160200151828460020160008b6001600160a01b03166001600160a01b0316815260200190815260200160002054613f53565b61308d9085614f44565b93505050808061309c90614fc8565b915050612fa3565b509392505050565b60007f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae96001600160a01b03167f0000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae96001600160a01b03161461314f5760405162461bcd60e51b815260206004820181905260248201527f5245574152445f544f4b454e5f49535f4e4f545f5354414b45445f544f4b454e6044820152606401610d58565b60006131658561315e87611389565b60016136b3565b905060008184116131765783613178565b815b90508015611a605761318b8630836127ce565b50611a60308683612d2f565b60408051600380825260808201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816131af579050509050604051806040016040528060008152602001876001600160a01b03168152508160008151811061320a5761320a614f90565b6020026020010181905250604051806040016040528060018152602001866001600160a01b03168152508160018151811061324757613247614f90565b6020026020010181905250604051806040016040528060028152602001856001600160a01b03168152508160028151811061328457613284614f90565b602002602001018190525061329881613f7f565b6132a183612edc565b6132aa82612f69565b611478670de0b6b3a7640000612222565b60005b8151811015611074576000603c60008484815181106132df576132df614f90565b6020026020010151604001516001600160a01b03166001600160a01b03168152602001908152602001600020905061335283838151811061332257613322614f90565b6020026020010151604001518285858151811061334157613341614f90565b60200260200101516020015161415b565b5082828151811061336557613365614f90565b60209081029190910101515181546fffffffffffffffffffffffffffffffff19166001600160801b0390911617815582518390839081106133a8576133a8614f90565b6020026020010151604001516001600160a01b03167f87fa03892a0556cb6b8f97e6d533a150d4d55fcbf275fff5fa003fa636bcc7fa8484815181106133f0576133f0614f90565b602090810291909101810151516040516001600160801b0390911681520160405180910390a2508061342181614fc8565b9150506132be565b60515460009061344990605290600160e01b900463ffffffff1684614213565b670de0b6b3a764000061345e87878787614320565b6134689190614f57565b611a609190614f6e565b60006001600160d81b038211156134db5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663136206269747360c81b6064820152608401610d58565b5090565b600064ffffffffff8211156134db5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526530206269747360d01b6064820152608401610d58565b806001600160d81b03166000036135935760405162461bcd60e51b81526020600482015260126024820152715a45524f5f45584348414e47455f5241544560701b6044820152606401610d58565b605180546001600160d81b0319166001600160d81b0383169081179091556040519081527fa9c433f9734baa3cf48b209454bb0ace054e191f677ba50e74b696c0d35ef26290602001612f5e565b6000613636826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143fa9092919063ffffffff16565b80519091501561106457808060200190518101906136549190614fa6565b6110645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d58565b6000806136c5853086612dba60025490565b6001600160a01b0386166000908152603d6020526040812054919250906136ed908390614f44565b90508115611a60578315613717576001600160a01b0386166000908152603d602052604090208190555b604080516001600160a01b0388168152602081018490527f2468f9268c60ad90e2d49edb0032c8a001e733ae888b3ab8e982edf535be1a76910160405180910390a195945050505050565b6001600160a01b0382166137c25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610d58565b6137ce82600083614409565b6001600160a01b038216600090815260208190526040902054818110156138425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610d58565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60006001600160b81b038211156134db5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663834206269747360c81b6064820152608401610d58565b6001600160a01b03831661396d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610d58565b6001600160a01b0382166139cf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610d58565b6139da838383614409565b6001600160a01b03831660009081526020819052604090205481811015613a525760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610d58565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361169f565b826001600160a01b0316846001600160a01b0316031561169f57600080613ade83612cc5565b5090925090506001600160a01b03861615613bcf576001600160a01b0386166000908152602082905260408120548015613b5e576001600160a01b038816600090815260208590526040812090613b36600184614ec0565b8152602081019190915260400160002054600160801b90046001600160801b03169150613b6a565b613b6788611389565b91505b613b8084848a85613b7b8b82614ec0565b614588565b6001600160a01b0388167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f613bb58885614ec0565b87604051613bc4929190615110565b60405180910390a250505b6001600160a01b03851615611478576001600160a01b0385166000908152602082905260408120548015613c49576001600160a01b038716600090815260208590526040812090613c21600184614ec0565b8152602081019190915260400160002054600160801b90046001600160801b03169150613c55565b613c5287611389565b91505b613c6684848985613b7b8b82614f44565b6001600160a01b0387167fa0a19463ee116110c9b282012d9b65cc5522dc38a9520340cbaf3142e550127f613c9b8885614f44565b87604051613caa929190615110565b60405180910390a25050505050505050565b6001600160a01b038084166000908152603c602090815260408083209388168352600284019091528120549091908280613cf788858861415b565b9050808314613d71578615613d1457613d11878285613f53565b91505b6001600160a01b03808a1660008181526002870160205260409081902084905551918a16917fbb123b5c06d5408bbea3c4fef481578175cfb432e3b482c6186f02ed9086585b90613d689085815260200190565b60405180910390a35b50979650505050505050565b6001600160a01b038216613dd35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610d58565b613ddf60008383614409565b8060026000828254613df19190614f44565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000831580613e55575081155b80613e68575042836001600160801b0316145b80613e9c57507f00000000000000000000000000000000000000000000000000000001207eb548836001600160801b031610155b15613ea8575083611381565b60007f00000000000000000000000000000000000000000000000000000001207eb5484211613ed75742613ef9565b7f00000000000000000000000000000000000000000000000000000001207eb5485b90506000613f106001600160801b03861683614ec0565b90508684613f206012600a615208565b613f2a848a614f57565b613f349190614f57565b613f3e9190614f6e565b613f489190614f44565b979650505050505050565b6000613f616012600a615208565b613f6b8385614ec0565b613f759086614f57565b6110bf9190614f6e565b60005b81518110156110745760006001600160a01b031660456000848481518110613fac57613fac614f90565b602090810291909101810151518252810191909152604001600020546001600160a01b031614801561400e575060006001600160a01b0316828281518110613ff657613ff6614f90565b6020026020010151602001516001600160a01b031614155b61405a5760405162461bcd60e51b815260206004820152601b60248201527f41444d494e5f43414e4e4f545f42455f494e495449414c495a454400000000006044820152606401610d58565b81818151811061406c5761406c614f90565b6020026020010151602001516045600084848151811061408e5761408e614f90565b602002602001015160000151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106140de576140de614f90565b6020026020010151602001516001600160a01b03167f83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf83838151811061412657614126614f90565b60200260200101516000015160405161414191815260200190565b60405180910390a28061415381614fc8565b915050613f82565b6001820154825460009190600160801b90046001600160801b031642819003614186575090506110c2565b84546000906141a19084906001600160801b03168488613e48565b90508281146141f057600186018190556040518181526001600160a01b038816907f5777ca300dfe5bead41006fbce4389794dbc0ed8d6cccebfaf94630aa04184bc9060200160405180910390a25b85546001600160801b03428116600160801b029116178655925050509392505050565b600019820160009081526020849052604081205464ffffffffff16821061425e57506000198201600090815260208490526040902054600160281b90046001600160d81b03166110c2565b600060001984015b818111156142f75760028282030481036000818152602088815260409182902082518084019093525464ffffffffff8116808452600160281b9091046001600160d81b0316918301919091528690036142d157602001516001600160d81b031693506110c292505050565b805164ffffffffff168611156142e9578193506142f0565b6001820392505b5050614266565b5060009081526020949094525050604090912054600160281b90046001600160d81b0316919050565b6000438211156143695760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa12627a1a5afa72aa6a122a960611b6044820152606401610d58565b6001600160a01b0383166000908152602085905260408120549081900361439b5761439384611389565b915050611381565b6001600160a01b0384166000908152602087815260408083208380529091529020546001600160801b03168310156143d7576000915050611381565b6001600160a01b0384166000908152602087905260409020611acf90828561469e565b60606110bf84846000856147aa565b6053546001600160a01b031680156144e057806001600160a01b0316635b9c4cf1858561443588611389565b61443e88611389565b6040516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152604483015260648201526084810185905260a401600060405180830381600087803b15801561449957600080fd5b505af19250505080156144aa575060015b6144e0573d8080156144d8576040519150601f19603f3d011682016040523d82523d6000602084013e6144dd565b606091505b50505b6001600160a01b038085166000908152603f6020526040808220548684168352912054908216911681614511578591505b6001600160a01b0381166145225750835b61452f8282866000613ab8565b6001600160a01b03808716600090815260426020526040808220548884168352912054908216911681614560578791505b6001600160a01b0381166145715750855b61457e8282886001613ab8565b5050505050505050565b6001600160a01b038316600090815260208581526040808320549188905290912043919081158015906145ea57506001600160801b0383168160006145ce600186614ec0565b81526020810191909152604001600020546001600160801b0316145b1561462e57838160006145fe600186614ec0565b8152602081019190915260400160002080546001600160801b03928316600160801b02921691909117905561457e565b6040805180820182526001600160801b038086168252868116602080840191825260008781529086905293909320915192518116600160801b02921691909117905561467b826001614f44565b6001600160a01b0387166000908152602089905260409020555050505050505050565b60001982016000908152602084905260408120546001600160801b031682106146eb57506000198201600090815260208490526040902054600160801b90046001600160801b03166110c2565b600060001984015b81811115614781576002828203048103600081815260208881526040918290208251808401909352546001600160801b03808216808552600160801b909204169183019190915286900361475957602001516001600160801b031693506110c292505050565b80516001600160801b03168611156147735781935061477a565b6001820392505b50506146f3565b5060009081526020949094525050604090912054600160801b90046001600160801b0316919050565b60608247101561480b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610d58565b600080866001600160a01b031685876040516148279190615214565b60006040518083038185875af1925050503d8060008114614864576040519150601f19603f3d011682016040523d82523d6000602084013e614869565b606091505b5091509150613f4887838387606083156148e45782516000036148dd576001600160a01b0385163b6148dd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d58565b5081611381565b61138183838151156148f95781518083602001fd5b8060405162461bcd60e51b8152600401610d5891906149a4565b6001600160a01b038116811461113057600080fd5b6000806040838503121561493b57600080fd5b823561494681614913565b946020939093013593505050565b60005b8381101561496f578181015183820152602001614957565b50506000910152565b60008151808452614990816020860160208601614954565b601f01601f19169290920160200192915050565b6020815260006110c26020830184614978565b6000602082840312156149c957600080fd5b81356110c281614913565b6000602082840312156149e657600080fd5b5035919050565b600080600060608486031215614a0257600080fd5b8335614a0d81614913565b92506020840135614a1d81614913565b929592945050506040919091013590565b60008060408385031215614a4157600080fd5b8235614a4c81614913565b91506020830135614a5c81614913565b809150509250929050565b803560028110614a7657600080fd5b919050565b60008060408385031215614a8e57600080fd5b8235614a9981614913565b9150614aa760208401614a67565b90509250929050565b803560ff81168114614a7657600080fd5b60008060008060008060c08789031215614ada57600080fd5b8635614ae581614913565b95506020870135945060408701359350614b0160608801614ab0565b92506080870135915060a087013590509295509295509295565b600060208284031215614b2d57600080fd5b813563ffffffff811681146110c257600080fd5b60008060008060808587031215614b5757600080fd5b8435614b6281614913565b93506020850135614b7281614913565b93969395505050506040820135916060013590565b600080600080600060a08688031215614b9f57600080fd5b8535614baa81614913565b94506020860135614bba81614913565b93506040860135614bca81614913565b94979396509394606081013594506080013592915050565b60008060408385031215614bf557600080fd5b823591506020830135614a5c81614913565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715614c4057614c40614c07565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715614c6f57614c6f614c07565b604052919050565b60006020808385031215614c8a57600080fd5b823567ffffffffffffffff80821115614ca257600080fd5b818501915085601f830112614cb657600080fd5b813581811115614cc857614cc8614c07565b614cd6848260051b01614c46565b81815284810192506060918202840185019188831115614cf557600080fd5b938501935b82851015613d715780858a031215614d125760008081fd5b614d1a614c1d565b85356001600160801b0381168114614d325760008081fd5b81528587013587820152604080870135614d4b81614913565b9082015284529384019392850192614cfa565b600080600060608486031215614d7357600080fd5b8335614d7e81614913565b925060208401359150614d9360408501614a67565b90509250925092565b600080600080600080600060e0888a031215614db757600080fd5b8735614dc281614913565b96506020880135614dd281614913565b95506040880135945060608801359350614dee60808901614ab0565b925060a0880135915060c0880135905092959891949750929550565b600080600060608486031215614e1f57600080fd5b8335614e2a81614913565b95602085013595506040909401359392505050565b600080600080600080600060e0888a031215614e5a57600080fd5b8735614e6581614913565b9650614dd260208901614a67565b60208082526019908201527f43414c4c45525f4e4f545f534c415348494e475f41444d494e00000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f5457610f54614eaa565b600181811c90821680614ee757607f821691505b602082108103614f0757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526017908201527f43414c4c45525f4e4f545f434c41494d5f48454c504552000000000000000000604082015260600190565b80820180821115610f5457610f54614eaa565b8082028115828204841417610f5457610f54614eaa565b600082614f8b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614fb857600080fd5b815180151581146110c257600080fd5b600060018201614fda57614fda614eaa565b5060010190565b61190160f01b81526002810192909252602282015260420190565b602080825260119082015270494e56414c49445f5349474e415455524560781b604082015260600190565b60208082526012908201527124a72b20a624a22fa2ac2824a920aa24a7a760711b604082015260600190565b634e487b7160e01b600052602160045260246000fd5b600063ffffffff80831681810361508257615082614eaa565b6001019392505050565b6020808252601390820152721253959053125117d6915493d7d05353d55395606a1b604082015260600190565b6001600160d81b038281168282160390808211156150d9576150d9614eaa565b5092915050565b600281106150fe57634e487b7160e01b600052602160045260246000fd5b9052565b60208101610f5482846150e0565b828152604081016110c260208301846150e0565b600181815b8085111561515f57816000190482111561514557615145614eaa565b8085161561515257918102915b93841c9390800290615129565b509250929050565b60008261517657506001610f54565b8161518357506000610f54565b816001811461519957600281146151a3576151bf565b6001915050610f54565b60ff8411156151b4576151b4614eaa565b50506001821b610f54565b5060208310610133831016604e8410600b84101617156151e2575081810a610f54565b6151ec8383615124565b806000190482111561520057615200614eaa565b029392505050565b60006110c28383615167565b60008251615226818460208701614954565b919091019291505056fea2646970667358221220eca7538023765a4de548dace73c5919366f9605051f5141240ca82e0c4ea703c64736f6c63430008110033",
                    "refund_gas": 28872020,
                    "to": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                    "to_balance": "0",
                    "value": "0",
                  },
                  {
                    "absolute_position": 17557,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "call_type": "CALL",
                    "caller_code_length": 445,
                    "caller_code_start": 2245,
                    "caller_file_index": 16,
                    "caller_line_number": 57,
                    "caller_op": "CALL",
                    "caller_pc": 655,
                    "caller_variables": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "newImpl",
                          "offset": 0,
                          "simple_type": {
                            "type": "address",
                          },
                          "storage_location": "default",
                          "type": "address",
                        },
                        "value": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                      },
                    ],
                    "calls": [
                      {
                        "absolute_position": 17540,
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "call_type": "CALL",
                        "caller": {
                          "address": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                          "balance": "0",
                        },
                        "caller_op": "CALL",
                        "caller_pc": 741,
                        "calls": [
                          {
                            "absolute_position": 15370,
                            "block_timestamp": "0001-01-01T00:00:00Z",
                            "call_type": "JUMPDEST",
                            "caller": {
                              "address": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                              "balance": "0",
                            },
                            "caller_code_length": 8,
                            "caller_code_start": 1451,
                            "caller_file_index": 1,
                            "caller_line_number": 38,
                            "caller_op": "JUMP",
                            "caller_pc": 886,
                            "calls": null,
                            "contract_name": "InitializableAdminUpgradeabilityProxy",
                            "decoded_output": [
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "adm",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                "value": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                              },
                            ],
                            "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                            "from_balance": null,
                            "function_code_length": 156,
                            "function_code_start": 3451,
                            "function_file_index": 1,
                            "function_line_number": 101,
                            "function_name": "_admin",
                            "function_op": "JUMPDEST",
                            "function_pc": 1695,
                            "gas": 23849540,
                            "gas_used": 115,
                            "hash": "",
                            "input": "0x",
                            "network_id": "",
                            "output": "0x",
                            "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                            "to_balance": null,
                            "value": null,
                          },
                          {
                            "absolute_position": 15397,
                            "block_timestamp": "0001-01-01T00:00:00Z",
                            "call_type": "JUMPDEST",
                            "caller": {
                              "address": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                              "balance": "0",
                            },
                            "caller_code_length": 29,
                            "caller_code_start": 3267,
                            "caller_file_index": 1,
                            "caller_line_number": 93,
                            "caller_op": "JUMP",
                            "caller_pc": 920,
                            "calls": [
                              {
                                "absolute_position": 15402,
                                "block_timestamp": "0001-01-01T00:00:00Z",
                                "call_type": "JUMPDEST",
                                "caller": {
                                  "address": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                                  "balance": "0",
                                },
                                "caller_code_length": 37,
                                "caller_code_start": 1533,
                                "caller_file_index": 2,
                                "caller_line_number": 45,
                                "caller_op": "JUMP",
                                "caller_pc": 1740,
                                "calls": [
                                  {
                                    "absolute_position": 15407,
                                    "block_timestamp": "0001-01-01T00:00:00Z",
                                    "call_type": "JUMPDEST",
                                    "caller": {
                                      "address": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                                      "balance": "0",
                                    },
                                    "caller_code_length": 37,
                                    "caller_code_start": 1861,
                                    "caller_file_index": 2,
                                    "caller_line_number": 55,
                                    "caller_op": "JUMP",
                                    "caller_pc": 1840,
                                    "calls": null,
                                    "contract_name": "InitializableAdminUpgradeabilityProxy",
                                    "decoded_input": [
                                      {
                                        "soltype": {
                                          "components": null,
                                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                          "indexed": false,
                                          "name": "account",
                                          "offset": 0,
                                          "simple_type": {
                                            "type": "address",
                                          },
                                          "storage_location": "default",
                                          "type": "address",
                                        },
                                        "value": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                                      },
                                    ],
                                    "decoded_output": [
                                      {
                                        "soltype": {
                                          "components": null,
                                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                          "indexed": false,
                                          "name": "",
                                          "offset": 0,
                                          "simple_type": {
                                            "type": "bool",
                                          },
                                          "storage_location": "default",
                                          "type": "bool",
                                        },
                                        "value": true,
                                      },
                                    ],
                                    "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                    "from_balance": null,
                                    "function_code_length": 630,
                                    "function_code_start": 780,
                                    "function_file_index": 0,
                                    "function_line_number": 26,
                                    "function_name": "isContract",
                                    "function_op": "JUMPDEST",
                                    "function_pc": 2032,
                                    "gas": 23849314,
                                    "gas_used": 175,
                                    "hash": "",
                                    "input": "0x",
                                    "network_id": "",
                                    "output": "0x",
                                    "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                    "to_balance": null,
                                    "value": null,
                                  },
                                ],
                                "contract_name": "InitializableAdminUpgradeabilityProxy",
                                "decoded_input": [
                                  {
                                    "soltype": {
                                      "components": null,
                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                      "indexed": false,
                                      "name": "newImplementation",
                                      "offset": 0,
                                      "simple_type": {
                                        "type": "address",
                                      },
                                      "storage_location": "default",
                                      "type": "address",
                                    },
                                    "value": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                                  },
                                ],
                                "decoded_output": [],
                                "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                "from_balance": null,
                                "function_code_length": 343,
                                "function_code_start": 1766,
                                "function_file_index": 2,
                                "function_line_number": 53,
                                "function_name": "_setImplementation",
                                "function_op": "JUMPDEST",
                                "function_pc": 1832,
                                "gas": 23849332,
                                "gas_used": 5219,
                                "hash": "",
                                "input": "0x",
                                "network_id": "",
                                "output": "0x",
                                "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                "to_balance": null,
                                "value": null,
                              },
                            ],
                            "contract_name": "InitializableAdminUpgradeabilityProxy",
                            "decoded_input": [
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "newImplementation",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                "value": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                              },
                            ],
                            "decoded_output": [],
                            "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                            "from_balance": null,
                            "function_code_length": 152,
                            "function_code_start": 1467,
                            "function_file_index": 2,
                            "function_line_number": 44,
                            "function_name": "_upgradeTo",
                            "function_op": "JUMPDEST",
                            "function_pc": 1732,
                            "gas": 23849350,
                            "gas_used": 6415,
                            "hash": "",
                            "input": "0x",
                            "network_id": "",
                            "output": "0x",
                            "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                            "to_balance": null,
                            "value": null,
                          },
                          {
                            "absolute_position": 17507,
                            "block_timestamp": "0001-01-01T00:00:00Z",
                            "call_type": "DELEGATECALL",
                            "caller": {
                              "address": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                              "balance": "0",
                            },
                            "caller_code_length": 36,
                            "caller_code_start": 3325,
                            "caller_file_index": 1,
                            "caller_line_number": 94,
                            "caller_op": "DELEGATECALL",
                            "caller_pc": 967,
                            "calls": [
                              {
                                "absolute_position": 17436,
                                "block_timestamp": "0001-01-01T00:00:00Z",
                                "call_type": "CALL",
                                "caller": {
                                  "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                  "balance": "0",
                                },
                                "caller_op": "CALL",
                                "caller_pc": 6138,
                                "calls": [
                                  {
                                    "absolute_position": 17111,
                                    "block_timestamp": "0001-01-01T00:00:00Z",
                                    "call_type": "JUMPDEST",
                                    "caller": {
                                      "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                      "balance": "0",
                                    },
                                    "caller_code_length": 11,
                                    "caller_code_start": 462,
                                    "caller_file_index": 5,
                                    "caller_line_number": 16,
                                    "caller_op": "JUMP",
                                    "caller_pc": 119,
                                    "calls": [
                                      {
                                        "absolute_position": 17119,
                                        "block_timestamp": "0001-01-01T00:00:00Z",
                                        "call_type": "JUMPDEST",
                                        "caller": {
                                          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                          "balance": "0",
                                        },
                                        "caller_code_length": 15,
                                        "caller_code_start": 2025,
                                        "caller_file_index": 5,
                                        "caller_line_number": 64,
                                        "caller_op": "JUMP",
                                        "caller_pc": 802,
                                        "calls": [
                                          {
                                            "absolute_position": 17123,
                                            "block_timestamp": "0001-01-01T00:00:00Z",
                                            "call_type": "JUMPDEST",
                                            "caller": {
                                              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                              "balance": "0",
                                            },
                                            "caller_code_length": 8,
                                            "caller_code_start": 3635,
                                            "caller_file_index": 1,
                                            "caller_line_number": 117,
                                            "caller_op": "JUMP",
                                            "caller_pc": 2125,
                                            "calls": null,
                                            "contract_name": "InitializableAdminUpgradeabilityProxy",
                                            "decoded_output": [
                                              {
                                                "soltype": {
                                                  "components": null,
                                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                  "indexed": false,
                                                  "name": "adm",
                                                  "offset": 0,
                                                  "simple_type": {
                                                    "type": "address",
                                                  },
                                                  "storage_location": "default",
                                                  "type": "address",
                                                },
                                                "value": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                                              },
                                            ],
                                            "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                            "from_balance": null,
                                            "function_code_length": 136,
                                            "function_code_start": 3096,
                                            "function_file_index": 1,
                                            "function_line_number": 94,
                                            "function_name": "_admin",
                                            "function_op": "JUMPDEST",
                                            "function_pc": 1877,
                                            "gas": 22932767,
                                            "gas_used": 115,
                                            "hash": "",
                                            "input": "0x",
                                            "network_id": "",
                                            "output": "0x",
                                            "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                            "to_balance": null,
                                            "value": null,
                                          },
                                        ],
                                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                                        "decoded_output": [],
                                        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "from_balance": null,
                                        "function_code_length": 174,
                                        "function_code_start": 3556,
                                        "function_file_index": 1,
                                        "function_line_number": 116,
                                        "function_name": "_willFallback",
                                        "function_op": "JUMPDEST",
                                        "function_pc": 2118,
                                        "gas": 22932797,
                                        "gas_used": 218,
                                        "hash": "",
                                        "input": "0x",
                                        "network_id": "",
                                        "output": "0x",
                                        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "to_balance": null,
                                        "value": null,
                                      },
                                      {
                                        "absolute_position": 17161,
                                        "block_timestamp": "0001-01-01T00:00:00Z",
                                        "call_type": "JUMPDEST",
                                        "caller": {
                                          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                          "balance": "0",
                                        },
                                        "caller_code_length": 17,
                                        "caller_code_start": 2056,
                                        "caller_file_index": 5,
                                        "caller_line_number": 65,
                                        "caller_op": "JUMP",
                                        "caller_pc": 813,
                                        "calls": null,
                                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                                        "decoded_output": [
                                          {
                                            "soltype": {
                                              "components": null,
                                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                              "indexed": false,
                                              "name": "impl",
                                              "offset": 0,
                                              "simple_type": {
                                                "type": "address",
                                              },
                                              "storage_location": "default",
                                              "type": "address",
                                            },
                                            "value": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                          },
                                        ],
                                        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "from_balance": null,
                                        "function_code_length": 165,
                                        "function_code_start": 956,
                                        "function_file_index": 2,
                                        "function_line_number": 30,
                                        "function_name": "_implementation",
                                        "function_op": "JUMPDEST",
                                        "function_pc": 1804,
                                        "gas": 22932534,
                                        "gas_used": 115,
                                        "hash": "",
                                        "input": "0x",
                                        "network_id": "",
                                        "output": "0x",
                                        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "to_balance": null,
                                        "value": null,
                                      },
                                      {
                                        "absolute_position": 17169,
                                        "block_timestamp": "0001-01-01T00:00:00Z",
                                        "call_type": "JUMPDEST",
                                        "caller": {
                                          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                          "balance": "0",
                                        },
                                        "caller_code_length": 28,
                                        "caller_code_start": 2046,
                                        "caller_file_index": 5,
                                        "caller_line_number": 65,
                                        "caller_op": "JUMP",
                                        "caller_pc": 818,
                                        "calls": [
                                          {
                                            "absolute_position": 17424,
                                            "block_timestamp": "0001-01-01T00:00:00Z",
                                            "call_type": "DELEGATECALL",
                                            "caller": {
                                              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                              "balance": "0",
                                            },
                                            "caller_code_length": 5,
                                            "caller_code_start": 1348,
                                            "caller_file_index": 5,
                                            "caller_line_number": 39,
                                            "caller_op": "DELEGATECALL",
                                            "caller_pc": 1855,
                                            "calls": [
                                              {
                                                "absolute_position": 17292,
                                                "block_timestamp": "0001-01-01T00:00:00Z",
                                                "call_type": "JUMPDEST",
                                                "caller": {
                                                  "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                                  "balance": "0",
                                                },
                                                "caller_code_length": 12,
                                                "caller_code_start": 17616,
                                                "caller_file_index": 0,
                                                "caller_line_number": 533,
                                                "caller_op": "JUMP",
                                                "caller_pc": 1210,
                                                "calls": null,
                                                "contract_name": "AaveTokenV2",
                                                "decoded_output": [
                                                  {
                                                    "soltype": {
                                                      "components": null,
                                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                      "indexed": false,
                                                      "name": "",
                                                      "offset": 0,
                                                      "simple_type": {
                                                        "type": "address payable",
                                                      },
                                                      "storage_location": "default",
                                                      "type": "address payable",
                                                    },
                                                    "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                                  },
                                                ],
                                                "from": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                                "from_balance": null,
                                                "function_code_length": 98,
                                                "function_code_start": 3004,
                                                "function_file_index": 0,
                                                "function_line_number": 90,
                                                "function_name": "_msgSender",
                                                "function_op": "JUMPDEST",
                                                "function_pc": 3647,
                                                "gas": 22573551,
                                                "gas_used": 14,
                                                "hash": "",
                                                "input": "0x",
                                                "network_id": "",
                                                "output": "0x",
                                                "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                                "to_balance": null,
                                                "value": null,
                                              },
                                              {
                                                "absolute_position": 17301,
                                                "block_timestamp": "0001-01-01T00:00:00Z",
                                                "call_type": "JUMPDEST",
                                                "caller": {
                                                  "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                                  "balance": "0",
                                                },
                                                "caller_code_length": 39,
                                                "caller_code_start": 17607,
                                                "caller_file_index": 0,
                                                "caller_line_number": 533,
                                                "caller_op": "JUMP",
                                                "caller_pc": 1217,
                                                "calls": null,
                                                "contract_name": "AaveTokenV2",
                                                "decoded_input": [
                                                  {
                                                    "soltype": {
                                                      "components": null,
                                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                      "indexed": false,
                                                      "name": "owner",
                                                      "offset": 0,
                                                      "simple_type": {
                                                        "type": "address",
                                                      },
                                                      "storage_location": "default",
                                                      "type": "address",
                                                    },
                                                    "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                                  },
                                                  {
                                                    "soltype": {
                                                      "components": null,
                                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                      "indexed": false,
                                                      "name": "spender",
                                                      "offset": 0,
                                                      "simple_type": {
                                                        "type": "address",
                                                      },
                                                      "storage_location": "default",
                                                      "type": "address",
                                                    },
                                                    "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                                  },
                                                  {
                                                    "soltype": {
                                                      "components": null,
                                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                      "indexed": false,
                                                      "name": "amount",
                                                      "offset": 0,
                                                      "simple_type": {
                                                        "type": "uint",
                                                      },
                                                      "storage_location": "default",
                                                      "type": "uint256",
                                                    },
                                                    "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
                                                  },
                                                ],
                                                "decoded_output": [],
                                                "from": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                                "from_balance": null,
                                                "function_code_length": 340,
                                                "function_code_start": 22612,
                                                "function_file_index": 0,
                                                "function_line_number": 669,
                                                "function_name": "_approve",
                                                "function_op": "JUMPDEST",
                                                "function_pc": 3651,
                                                "gas": 22573519,
                                                "gas_used": 24214,
                                                "hash": "",
                                                "input": "0x",
                                                "network_id": "",
                                                "output": "0x",
                                                "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                                "to_balance": null,
                                                "value": null,
                                              },
                                            ],
                                            "contract_name": "InitializableAdminUpgradeabilityProxy",
                                            "decoded_input": [
                                              {
                                                "soltype": {
                                                  "components": null,
                                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                  "indexed": false,
                                                  "name": "spender",
                                                  "offset": 0,
                                                  "simple_type": {
                                                    "type": "address",
                                                  },
                                                  "storage_location": "default",
                                                  "type": "address",
                                                },
                                                "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                              },
                                              {
                                                "soltype": {
                                                  "components": null,
                                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                  "indexed": false,
                                                  "name": "amount",
                                                  "offset": 0,
                                                  "simple_type": {
                                                    "type": "uint",
                                                  },
                                                  "storage_location": "default",
                                                  "type": "uint256",
                                                },
                                                "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
                                              },
                                            ],
                                            "decoded_output": [
                                              {
                                                "soltype": {
                                                  "components": null,
                                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                                  "indexed": false,
                                                  "name": "",
                                                  "offset": 0,
                                                  "simple_type": {
                                                    "type": "bool",
                                                  },
                                                  "storage_location": "default",
                                                  "type": "bool",
                                                },
                                                "value": true,
                                              },
                                            ],
                                            "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                            "from_balance": "0",
                                            "function_code_length": 166,
                                            "function_code_start": 17508,
                                            "function_file_index": 0,
                                            "function_line_number": 532,
                                            "function_name": "approve",
                                            "function_op": "JUMPDEST",
                                            "function_pc": 1198,
                                            "gas": 22573954,
                                            "gas_used": 24753,
                                            "hash": "",
                                            "input": "0x095ea7b30000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                                            "network_id": "",
                                            "output": "0x0000000000000000000000000000000000000000000000000000000000000001",
                                            "refund_gas": 358316,
                                            "to": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                            "to_balance": "0",
                                            "value": null,
                                          },
                                        ],
                                        "contract_name": "InitializableAdminUpgradeabilityProxy",
                                        "decoded_input": [
                                          {
                                            "soltype": {
                                              "components": null,
                                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                              "indexed": false,
                                              "name": "implementation",
                                              "offset": 0,
                                              "simple_type": {
                                                "type": "address",
                                              },
                                              "storage_location": "default",
                                              "type": "address",
                                            },
                                            "value": "0x96f68837877fd0414b55050c9e794aecdbcfca59",
                                          },
                                        ],
                                        "decoded_output": null,
                                        "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "from_balance": null,
                                        "function_code_length": 743,
                                        "function_code_start": 895,
                                        "function_file_index": 5,
                                        "function_line_number": 30,
                                        "function_name": "_delegate",
                                        "function_op": "JUMPDEST",
                                        "function_pc": 1841,
                                        "gas": 22932407,
                                        "gas_used": 24931,
                                        "hash": "",
                                        "input": "0x",
                                        "network_id": "",
                                        "output": "0x",
                                        "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                        "to_balance": null,
                                        "value": null,
                                      },
                                    ],
                                    "contract_name": "InitializableAdminUpgradeabilityProxy",
                                    "decoded_output": null,
                                    "from": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "from_balance": null,
                                    "function_code_length": 90,
                                    "function_code_start": 1989,
                                    "function_file_index": 5,
                                    "function_line_number": 63,
                                    "function_name": "_fallback",
                                    "function_op": "JUMPDEST",
                                    "function_pc": 795,
                                    "gas": 22932812,
                                    "gas_used": 25336,
                                    "hash": "",
                                    "input": "0x",
                                    "network_id": "",
                                    "output": "0x",
                                    "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                    "to_balance": null,
                                    "value": null,
                                  },
                                ],
                                "decoded_input": [
                                  {
                                    "soltype": {
                                      "components": null,
                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                      "indexed": false,
                                      "name": "spender",
                                      "offset": 0,
                                      "simple_type": {
                                        "type": "address",
                                      },
                                      "storage_location": "default",
                                      "type": "address",
                                    },
                                    "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                                  },
                                  {
                                    "soltype": {
                                      "components": null,
                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                      "indexed": false,
                                      "name": "amount",
                                      "offset": 0,
                                      "simple_type": {
                                        "type": "uint",
                                      },
                                      "storage_location": "default",
                                      "type": "uint256",
                                    },
                                    "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
                                  },
                                ],
                                "decoded_output": null,
                                "from": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                                "from_balance": "0",
                                "function_code_length": 1243,
                                "function_code_start": 347,
                                "function_file_index": 3,
                                "function_line_number": 12,
                                "function_name": "approve",
                                "function_op": "JUMPDEST",
                                "function_pc": 78,
                                "gas": 22932967,
                                "gas_used": 25491,
                                "hash": "",
                                "input": "0x095ea7b30000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                                "network_id": "",
                                "output": "0x0000000000000000000000000000000000000000000000000000000000000001",
                                "refund_gas": 364015,
                                "to": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                                "to_balance": "0",
                                "value": "0",
                              },
                            ],
                            "contract_name": "InitializableAdminUpgradeabilityProxy",
                            "decoded_input": [
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "slashingAdmin",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
                              },
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "cooldownPauseAdmin",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
                              },
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "claimHelper",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "address",
                                  },
                                  "storage_location": "default",
                                  "type": "address",
                                },
                                "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
                              },
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "maxSlashablePercentage",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                "value": "3000",
                              },
                              {
                                "soltype": {
                                  "components": null,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "name": "cooldownSeconds",
                                  "offset": 0,
                                  "simple_type": {
                                    "type": "uint",
                                  },
                                  "storage_location": "default",
                                  "type": "uint256",
                                },
                                "value": "1728000",
                              },
                            ],
                            "decoded_output": [],
                            "from": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                            "from_balance": "0",
                            "function_op": "STOP",
                            "function_pc": 0,
                            "gas": 23470145,
                            "gas_used": 198872,
                            "hash": "",
                            "input": "0xa6b63eb8000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d50000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000001a5e00",
                            "network_id": "",
                            "output": "0x",
                            "refund_gas": 372541,
                            "to": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                            "to_balance": "0",
                            "value": null,
                          },
                        ],
                        "decoded_input": [
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "newImplementation",
                              "offset": 0,
                              "simple_type": {
                                "type": "address",
                              },
                              "storage_location": "default",
                              "type": "address",
                            },
                            "value": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                          },
                          {
                            "soltype": {
                              "components": null,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "name": "data",
                              "offset": 0,
                              "simple_type": {
                                "type": "bytes",
                              },
                              "storage_location": "default",
                              "type": "bytes",
                            },
                            "value": "0xa6b63eb8000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d50000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000001a5e00",
                          },
                        ],
                        "decoded_output": null,
                        "from": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                        "from_balance": "0",
                        "function_code_length": 264,
                        "function_code_start": 3130,
                        "function_file_index": 1,
                        "function_line_number": 88,
                        "function_name": "upgradeToAndCall",
                        "function_op": "JUMPDEST",
                        "function_pc": 879,
                        "gas": 23849934,
                        "gas_used": 206219,
                        "hash": "",
                        "input": "0x4f1ef286000000000000000000000000aa9faa887bce5182c39f68ac46c43f36723c395b000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a4a6b63eb8000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d50000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000001a5e0000000000000000000000000000000000000000000000000000000000",
                        "network_id": "",
                        "output": "0x",
                        "refund_gas": 378570,
                        "to": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                        "to_balance": "0",
                        "value": "0",
                      },
                    ],
                    "contract_name": "ProposalPayloadStkAave",
                    "decoded_input": [
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "proxy",
                          "offset": 0,
                          "simple_type": {
                            "type": "address",
                          },
                          "storage_location": "default",
                          "type": "address",
                        },
                        "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                      },
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "implementation",
                          "offset": 0,
                          "simple_type": {
                            "type": "address",
                          },
                          "storage_location": "default",
                          "type": "address",
                        },
                        "value": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                      },
                      {
                        "soltype": {
                          "components": null,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "name": "data",
                          "offset": 0,
                          "simple_type": {
                            "type": "bytes",
                          },
                          "storage_location": "default",
                          "type": "bytes",
                        },
                        "value": "0xa6b63eb8000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d50000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000001a5e00",
                      },
                    ],
                    "decoded_output": [],
                    "from": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
                    "from_balance": "0",
                    "function_op": "STOP",
                    "function_pc": 0,
                    "gas": 24232450,
                    "gas_used": 210213,
                    "hash": "",
                    "input": "0x9623609d0000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5000000000000000000000000aa9faa887bce5182c39f68ac46c43f36723c395b000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a4a6b63eb8000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d50000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000001a5e0000000000000000000000000000000000000000000000000000000000",
                    "network_id": "",
                    "output": "0x",
                    "refund_gas": 384642,
                    "to": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
                    "to_balance": "0",
                    "value": "0",
                  },
                ],
                "contract_name": "Executor",
                "decoded_output": null,
                "from": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                "from_balance": "0",
                "function_code_length": 1052,
                "function_code_start": 1643,
                "function_file_index": 16,
                "function_line_number": 42,
                "function_name": "execute",
                "function_op": "JUMPDEST",
                "function_pc": 124,
                "gas": 28920615,
                "gas_used": 4513778,
                "hash": "",
                "input": "0x61461954",
                "network_id": "",
                "output": "0x",
                "refund_gas": 459057,
                "to": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
                "to_balance": "0",
                "value": null,
              },
            ],
            "contract_name": "AaveGovernanceV2",
            "decoded_input": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "target",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "value",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "0",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "signature",
                  "offset": 0,
                  "simple_type": {
                    "type": "string",
                  },
                  "storage_location": "default",
                  "type": "string",
                },
                "value": "execute()",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "data",
                  "offset": 0,
                  "simple_type": {
                    "type": "bytes",
                  },
                  "storage_location": "default",
                  "type": "bytes",
                },
                "value": "0x",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "executionTime",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "1684449552",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "withDelegatecall",
                  "offset": 0,
                  "simple_type": {
                    "type": "bool",
                  },
                  "storage_location": "default",
                  "type": "bool",
                },
                "value": true,
              },
            ],
            "decoded_output": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "",
                  "offset": 0,
                  "simple_type": {
                    "type": "bytes",
                  },
                  "storage_location": "default",
                  "type": "bytes",
                },
                "value": "0x",
              },
            ],
            "from": "0xec568fffba86c094cf06b22134b23074dfe2252c",
            "from_balance": "10000000000000000",
            "function_code_length": 1457,
            "function_code_start": 5491,
            "function_file_index": 0,
            "function_line_number": 178,
            "function_name": "executeTransaction",
            "function_op": "JUMPDEST",
            "function_pc": 2694,
            "gas": 29392748,
            "gas_used": 4532189,
            "hash": "",
            "input": "0x8902ab65000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000006466a91000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000009657865637574652829000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "network_id": "",
            "output": "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
            "refund_gas": 466551,
            "to": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
            "to_balance": "0",
            "value": "0",
          },
        ],
        "contract_name": "AaveGovernanceV2",
        "decoded_input": [
          {
            "soltype": {
              "components": null,
              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "indexed": false,
              "name": "proposalId",
              "offset": 0,
              "simple_type": {
                "type": "uint",
              },
              "storage_location": "default",
              "type": "uint256",
            },
            "value": "214",
          },
        ],
        "decoded_output": null,
        "from": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
        "from_balance": "10000000000000000000",
        "function_code_length": 633,
        "function_code_start": 36382,
        "function_file_index": 0,
        "function_line_number": 1091,
        "function_name": "execute",
        "function_op": "JUMPDEST",
        "function_pc": 6377,
        "gas": 29978796,
        "gas_used": 4653915,
        "hash": "0xa8599ff6883b67a280f95003a575de6da10369fd0e99fa735d5497834cf084e3",
        "input": "0xfe0d94c100000000000000000000000000000000000000000000000000000000000000d6",
        "intrinsic_gas": 21204,
        "logs": [
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "previousAdmin",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "newAdmin",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
              },
            ],
            "name": "AdminChanged",
            "raw": {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "data": "0x00000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc429900000000000000000000000086c3ffee349a7cff7ca88c449717b1b133bfb517",
              "topics": [
                "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "name": "implementation",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
              },
            ],
            "name": "Upgraded",
            "raw": {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "data": "0x",
              "topics": [
                "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
                "0x000000000000000000000000aa9faa887bce5182c39f68ac46c43f36723c395b",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "name": "newAdmin",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "role",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "0",
              },
            ],
            "name": "RoleClaimed",
            "raw": {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "topics": [
                "0x83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf",
                "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "name": "newAdmin",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "role",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "1",
              },
            ],
            "name": "RoleClaimed",
            "raw": {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
              "topics": [
                "0x83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf",
                "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "name": "newAdmin",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "role",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "2",
              },
            ],
            "name": "RoleClaimed",
            "raw": {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "data": "0x0000000000000000000000000000000000000000000000000000000000000002",
              "topics": [
                "0x83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf",
                "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "newPercentage",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "3000",
              },
            ],
            "name": "MaxSlashablePercentageChanged",
            "raw": {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "data": "0x0000000000000000000000000000000000000000000000000000000000000bb8",
              "topics": [
                "0xb79c2d6c7f5c95eec9dc05affc0ed002620a4ec6d72b7b0744cc8638168c600a",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "cooldownSeconds",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "1728000",
              },
            ],
            "name": "CooldownSecondsChanged",
            "raw": {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "data": "0x00000000000000000000000000000000000000000000000000000000001a5e00",
              "topics": [
                "0xbbf67247b5c97564e30ffc0a355e71c006836de7b9149e09e3d5d6054cb03355",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "exchangeRate",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint216",
                },
                "value": "1000000000000000000",
              },
            ],
            "name": "ExchangeRateChanged",
            "raw": {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "data": "0x0000000000000000000000000000000000000000000000000de0b6b3a7640000",
              "topics": [
                "0xa9c433f9734baa3cf48b209454bb0ace054e191f677ba50e74b696c0d35ef262",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "name": "owner",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "name": "spender",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "value",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
              },
            ],
            "name": "Approval",
            "raw": {
              "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
              "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
              "topics": [
                "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                "0x0000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5",
                "0x0000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "actionHash",
                  "offset": 0,
                  "simple_type": {
                    "type": "bytes",
                  },
                  "storage_location": "default",
                  "type": "bytes32",
                },
                "value": "0xff33b718164618357c1843d5970dfb7a542e9a0338cbcdbec73ec49900059491",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "name": "target",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "value",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "0",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "signature",
                  "offset": 0,
                  "simple_type": {
                    "type": "string",
                  },
                  "storage_location": "default",
                  "type": "string",
                },
                "value": "execute()",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "data",
                  "offset": 0,
                  "simple_type": {
                    "type": "bytes",
                  },
                  "storage_location": "default",
                  "type": "bytes",
                },
                "value": "0x",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "executionTime",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "1684449552",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "withDelegatecall",
                  "offset": 0,
                  "simple_type": {
                    "type": "bool",
                  },
                  "storage_location": "default",
                  "type": "bool",
                },
                "value": true,
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "resultData",
                  "offset": 0,
                  "simple_type": {
                    "type": "bytes",
                  },
                  "storage_location": "default",
                  "type": "bytes",
                },
                "value": "0x",
              },
            ],
            "name": "ExecutedAction",
            "raw": {
              "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
              "data": "0xff33b718164618357c1843d5970dfb7a542e9a0338cbcdbec73ec49900059491000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000006466a910000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000009657865637574652829000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              "topics": [
                "0x97825080b472fa91fe888b62ec128814d60dec546a2dafb955e50923f4a1b7e7",
                "0x000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a0",
              ],
            },
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "name": "id",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "default",
                  "type": "uint256",
                },
                "value": "214",
              },
              {
                "soltype": {
                  "components": null,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "name": "initiatorExecution",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "default",
                  "type": "address",
                },
                "value": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
              },
            ],
            "name": "ProposalExecuted",
            "raw": {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "data": "0x00000000000000000000000000000000000000000000000000000000000000d6",
              "topics": [
                "0x9c85b616f29fca57a17eafe71cf9ff82ffef41766e2cf01ea7f8f7878dd3ec24",
                "0x000000000000000000000000d73a92be73efbfcf3854433a5fcbabf9c1316073",
              ],
            },
          },
        ],
        "network_id": "1",
        "nonce_diff": [
          {
            "address": "0x79426A1c24B2978D90d7A5070a46C65B07bC4299",
            "dirty": "2",
            "original": "1",
          },
          {
            "address": "0xAa9FAa887bce5182C39F68Ac46C43F36723C395b",
            "dirty": "1",
            "original": "0",
          },
          {
            "address": "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
            "dirty": "1",
            "original": "0",
          },
        ],
        "output": "0x",
        "refund_gas": 4800,
        "state_diff": [
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000005",
                "key": "0x0000000000000000000000000000000000000000000000000000000000000009",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000004",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x00000000000000000000000000000000000000000000000000000000001a5e00",
                "key": "0x000000000000000000000000000000000000000000000000000000000000004f",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000bb8",
                "key": "0x0000000000000000000000000000000000000000000000000000000000000050",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x0000000100000000000000000000000000000000000000000de0b6b3a7640000",
                "key": "0x0000000000000000000000000000000000000000000000000000000000000051",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
                "key": "0x2d3d1c9680bbdec853995b6859c48c938bd9c76a8e98a938491cbf18b6665bed",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x000000000000000000000000aa9faa887bce5182c39f68ac46c43f36723c395b",
                "key": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
                "original": "0x000000000000000000000000e2e8badc5d50f8a6188577b89f50701cde2d4e19",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x000000000000000000000000000000000000000de0b6b3a76400000001071341",
                "key": "0xae7f735405eae778c062be95d86a15d8e443f03071caf36c523900c28f6324ad",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
                "key": "0xb476eedba4f8c885c12cb813443bb78e21239c276d1586e24afd457c6ea531b7",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x00000000000000000000000086c3ffee349a7cff7ca88c449717b1b133bfb517",
                "key": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
                "original": "0x00000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc4299",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
                "dirty": "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
                "key": "0xcf23cc7089fed28926e3cca2bfa1d6811ea4ce7e8c64119a740cf101b353080f",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
            "dirty": {
              "0xff33b718164618357c1843d5970dfb7a542e9a0338cbcdbec73ec49900059491": false,
            },
            "original": {
              "0xff33b718164618357c1843d5970dfb7a542e9a0338cbcdbec73ec49900059491": true,
            },
            "raw": [
              {
                "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "key": "0x6cb566158d39ce882c18d59584646aeb55a2f9585b27af1d635f5ea325cfbeaf",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000001",
              },
              {
                "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "key": "0x6cb566158d39ce882c18d59584646aeb55a2f9585b27af1d635f5ea325cfbeaf",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000001",
              },
            ],
            "soltype": {
              "components": null,
              "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
              "indexed": false,
              "name": "_queuedTransactions",
              "offset": 0,
              "storage_location": "storage",
              "type": "mapping (bytes32 => bool)",
            },
          },
          {
            "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
            "dirty": {
              "0x4da27a545c0c5b758a6ba100e3a049001de870f5": {
                "0x4da27a545c0c5b758a6ba100e3a049001de870f5": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
              },
            },
            "original": {
              "0x4da27a545c0c5b758a6ba100e3a049001de870f5": {
                "0x4da27a545c0c5b758a6ba100e3a049001de870f5": "0",
              },
            },
            "raw": [
              {
                "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                "dirty": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                "key": "0x6b10b271c83e13bfb156269bdf3ef636613d1542d8235a1f5293a89c8f8a5431",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
              {
                "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                "dirty": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                "key": "0x6b10b271c83e13bfb156269bdf3ef636613d1542d8235a1f5293a89c8f8a5431",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
              {
                "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
                "dirty": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                "key": "0x6b10b271c83e13bfb156269bdf3ef636613d1542d8235a1f5293a89c8f8a5431",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": {
              "components": null,
              "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
              "indexed": false,
              "name": "_allowances",
              "offset": 0,
              "storage_location": "storage",
              "type": "mapping (address => mapping (address => uint256))",
            },
          },
          {
            "address": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
            "dirty": null,
            "original": null,
            "raw": [
              {
                "address": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000005",
                "key": "0x0000000000000000000000000000000000000000000000000000000000000009",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              },
            ],
            "soltype": null,
          },
          {
            "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
            "dirty": {
              "\\"214\\"": {
                "againstVotes": null,
                "calldatas": null,
                "canceled": false,
                "creator": "0x0000000000000000000000000000000000000000",
                "endBlock": null,
                "executed": true,
                "executionTime": null,
                "executor": "0x0000000000000000000000000000000000000000",
                "forVotes": null,
                "id": null,
                "ipfsHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "signatures": null,
                "startBlock": null,
                "strategy": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                "targets": null,
                "values": null,
                "votes": null,
                "withDelegatecalls": null,
              },
            },
            "original": {
              "\\"214\\"": {
                "againstVotes": null,
                "calldatas": null,
                "canceled": false,
                "creator": "0x0000000000000000000000000000000000000000",
                "endBlock": null,
                "executed": false,
                "executionTime": null,
                "executor": "0x0000000000000000000000000000000000000000",
                "forVotes": null,
                "id": null,
                "ipfsHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "signatures": null,
                "startBlock": null,
                "strategy": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
                "targets": null,
                "values": null,
                "votes": null,
                "withDelegatecalls": null,
              },
            },
            "raw": [
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
              {
                "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
                "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
                "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
              },
            ],
            "soltype": {
              "components": [
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d90",
                  "indexed": false,
                  "name": "id",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "memory",
                  "type": "uint256",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d91",
                  "indexed": false,
                  "name": "creator",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "memory",
                  "type": "address",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d92",
                  "indexed": false,
                  "name": "executor",
                  "offset": 0,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "memory",
                  "type": "address",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d93",
                  "indexed": false,
                  "name": "targets",
                  "offset": 0,
                  "simple_type": {
                    "nested_type": {
                      "type": "address",
                    },
                    "type": "slice",
                  },
                  "storage_location": "memory",
                  "type": "address[]",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d94",
                  "indexed": false,
                  "name": "values",
                  "offset": 0,
                  "simple_type": {
                    "nested_type": {
                      "type": "uint",
                    },
                    "type": "slice",
                  },
                  "storage_location": "memory",
                  "type": "uint256[]",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d95",
                  "indexed": false,
                  "name": "signatures",
                  "offset": 0,
                  "simple_type": {
                    "nested_type": {
                      "type": "string",
                    },
                    "type": "slice",
                  },
                  "storage_location": "memory",
                  "type": "string[]",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d96",
                  "indexed": false,
                  "name": "calldatas",
                  "offset": 0,
                  "simple_type": {
                    "nested_type": {
                      "type": "bytes",
                    },
                    "type": "slice",
                  },
                  "storage_location": "memory",
                  "type": "bytes[]",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d97",
                  "indexed": false,
                  "name": "withDelegatecalls",
                  "offset": 0,
                  "simple_type": {
                    "nested_type": {
                      "type": "bool",
                    },
                    "type": "slice",
                  },
                  "storage_location": "memory",
                  "type": "bool[]",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d98",
                  "indexed": false,
                  "name": "startBlock",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "memory",
                  "type": "uint256",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d99",
                  "indexed": false,
                  "name": "endBlock",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "memory",
                  "type": "uint256",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9a",
                  "indexed": false,
                  "name": "executionTime",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "memory",
                  "type": "uint256",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9b",
                  "indexed": false,
                  "name": "forVotes",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "memory",
                  "type": "uint256",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9c",
                  "indexed": false,
                  "name": "againstVotes",
                  "offset": 0,
                  "simple_type": {
                    "type": "uint",
                  },
                  "storage_location": "memory",
                  "type": "uint256",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                  "indexed": false,
                  "name": "executed",
                  "offset": 0,
                  "simple_type": {
                    "type": "bool",
                  },
                  "storage_location": "memory",
                  "type": "bool",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                  "indexed": false,
                  "name": "canceled",
                  "offset": 8,
                  "simple_type": {
                    "type": "bool",
                  },
                  "storage_location": "memory",
                  "type": "bool",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                  "indexed": false,
                  "name": "strategy",
                  "offset": 16,
                  "simple_type": {
                    "type": "address",
                  },
                  "storage_location": "memory",
                  "type": "address",
                },
                {
                  "components": null,
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9e",
                  "indexed": false,
                  "name": "ipfsHash",
                  "offset": 0,
                  "simple_type": {
                    "type": "bytes",
                  },
                  "storage_location": "memory",
                  "type": "bytes32",
                },
                {
                  "components": [
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "support",
                      "offset": 0,
                      "simple_type": {
                        "type": "bool",
                      },
                      "storage_location": "memory",
                      "type": "bool",
                    },
                    {
                      "components": null,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "name": "votingPower",
                      "offset": 8,
                      "simple_type": {
                        "type": "uint",
                      },
                      "storage_location": "memory",
                      "type": "uint248",
                    },
                  ],
                  "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9f",
                  "indexed": false,
                  "name": "votes",
                  "offset": 0,
                  "storage_location": "memory",
                  "type": "mapping (address => tuple)",
                },
              ],
              "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
              "indexed": false,
              "name": "_proposals",
              "offset": 0,
              "storage_location": "memory",
              "type": "mapping (uint256 => tuple)",
            },
          },
        ],
        "to": "0xec568fffba86c094cf06b22134b23074dfe2252c",
        "to_balance": "10000000000000000",
        "value": "0",
      },
      "console_logs": null,
      "contract_address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
      "contract_id": "eth:1:0xec568fffba86c094cf06b22134b23074dfe2252c",
      "created_at": "2023-05-18T22:39:12Z",
      "intrinsic_gas": 21204,
      "logs": [
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "previousAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0x86c3ffee349a7cff7ca88c449717b1b133bfb517",
            },
          ],
          "name": "AdminChanged",
          "raw": {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "data": "0x00000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc429900000000000000000000000086c3ffee349a7cff7ca88c449717b1b133bfb517",
            "topics": [
              "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "implementation",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
            },
          ],
          "name": "Upgraded",
          "raw": {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "data": "0x",
            "topics": [
              "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
              "0x000000000000000000000000aa9faa887bce5182c39f68ac46c43f36723c395b",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "role",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "0",
            },
          ],
          "name": "RoleClaimed",
          "raw": {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "topics": [
              "0x83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf",
              "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "role",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "1",
            },
          ],
          "name": "RoleClaimed",
          "raw": {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "topics": [
              "0x83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf",
              "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "newAdmin",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0xee56e2b3d491590b5b31738cc34d5232f378a8d5",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "role",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "2",
            },
          ],
          "name": "RoleClaimed",
          "raw": {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "data": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "topics": [
              "0x83a9ddad961dcb7c6894c9585a16ff7792c2ec8281256a3cc7303ae830152dcf",
              "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "newPercentage",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "3000",
            },
          ],
          "name": "MaxSlashablePercentageChanged",
          "raw": {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "data": "0x0000000000000000000000000000000000000000000000000000000000000bb8",
            "topics": [
              "0xb79c2d6c7f5c95eec9dc05affc0ed002620a4ec6d72b7b0744cc8638168c600a",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "cooldownSeconds",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "1728000",
            },
          ],
          "name": "CooldownSecondsChanged",
          "raw": {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "data": "0x00000000000000000000000000000000000000000000000000000000001a5e00",
            "topics": [
              "0xbbf67247b5c97564e30ffc0a355e71c006836de7b9149e09e3d5d6054cb03355",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "exchangeRate",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint216",
              },
              "value": "1000000000000000000",
            },
          ],
          "name": "ExchangeRateChanged",
          "raw": {
            "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            "data": "0x0000000000000000000000000000000000000000000000000de0b6b3a7640000",
            "topics": [
              "0xa9c433f9734baa3cf48b209454bb0ace054e191f677ba50e74b696c0d35ef262",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "owner",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "spender",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            },
          ],
          "name": "Approval",
          "raw": {
            "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
            "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "topics": [
              "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
              "0x0000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5",
              "0x0000000000000000000000004da27a545c0c5b758a6ba100e3a049001de870f5",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "actionHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes32",
              },
              "value": "0xff33b718164618357c1843d5970dfb7a542e9a0338cbcdbec73ec49900059491",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "target",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0xe427fcbd54169136391cfedf68e96abb13da87a0",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "value",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "0",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "signature",
                "offset": 0,
                "simple_type": {
                  "type": "string",
                },
                "storage_location": "default",
                "type": "string",
              },
              "value": "execute()",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "data",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
              "value": "0x",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "1684449552",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "withDelegatecall",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "default",
                "type": "bool",
              },
              "value": true,
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "resultData",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "default",
                "type": "bytes",
              },
              "value": "0x",
            },
          ],
          "name": "ExecutedAction",
          "raw": {
            "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
            "data": "0xff33b718164618357c1843d5970dfb7a542e9a0338cbcdbec73ec49900059491000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000006466a910000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000009657865637574652829000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "topics": [
              "0x97825080b472fa91fe888b62ec128814d60dec546a2dafb955e50923f4a1b7e7",
              "0x000000000000000000000000e427fcbd54169136391cfedf68e96abb13da87a0",
            ],
          },
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "name": "id",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "default",
                "type": "uint256",
              },
              "value": "214",
            },
            {
              "soltype": {
                "components": null,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "name": "initiatorExecution",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "default",
                "type": "address",
              },
              "value": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
            },
          ],
          "name": "ProposalExecuted",
          "raw": {
            "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
            "data": "0x00000000000000000000000000000000000000000000000000000000000000d6",
            "topics": [
              "0x9c85b616f29fca57a17eafe71cf9ff82ffef41766e2cf01ea7f8f7878dd3ec24",
              "0x000000000000000000000000d73a92be73efbfcf3854433a5fcbabf9c1316073",
            ],
          },
        },
      ],
      "method": "execute",
      "nonce_diff": [
        {
          "address": "0x79426A1c24B2978D90d7A5070a46C65B07bC4299",
          "dirty": "2",
          "original": "1",
        },
        {
          "address": "0xAa9FAa887bce5182C39F68Ac46C43F36723C395b",
          "dirty": "1",
          "original": "0",
        },
        {
          "address": "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
          "dirty": "1",
          "original": "0",
        },
      ],
      "parameters": null,
      "raw_state_diff": null,
      "refund_gas": 4800,
      "stack_trace": null,
      "state_diff": [
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000005",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000009",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000004",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x00000000000000000000000000000000000000000000000000000000001a5e00",
              "key": "0x000000000000000000000000000000000000000000000000000000000000004f",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000bb8",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000050",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x0000000100000000000000000000000000000000000000000de0b6b3a7640000",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000051",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
              "key": "0x2d3d1c9680bbdec853995b6859c48c938bd9c76a8e98a938491cbf18b6665bed",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x000000000000000000000000aa9faa887bce5182c39f68ac46c43f36723c395b",
              "key": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
              "original": "0x000000000000000000000000e2e8badc5d50f8a6188577b89f50701cde2d4e19",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x000000000000000000000000000000000000000de0b6b3a76400000001071341",
              "key": "0xae7f735405eae778c062be95d86a15d8e443f03071caf36c523900c28f6324ad",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
              "key": "0xb476eedba4f8c885c12cb813443bb78e21239c276d1586e24afd457c6ea531b7",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x00000000000000000000000086c3ffee349a7cff7ca88c449717b1b133bfb517",
              "key": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
              "original": "0x00000000000000000000000079426a1c24b2978d90d7a5070a46c65b07bc4299",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0x4da27a545c0c5b758a6ba100e3a049001de870f5",
              "dirty": "0x000000000000000000000000ee56e2b3d491590b5b31738cc34d5232f378a8d5",
              "key": "0xcf23cc7089fed28926e3cca2bfa1d6811ea4ce7e8c64119a740cf101b353080f",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
          "dirty": {
            "0xff33b718164618357c1843d5970dfb7a542e9a0338cbcdbec73ec49900059491": false,
          },
          "original": {
            "0xff33b718164618357c1843d5970dfb7a542e9a0338cbcdbec73ec49900059491": true,
          },
          "raw": [
            {
              "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "key": "0x6cb566158d39ce882c18d59584646aeb55a2f9585b27af1d635f5ea325cfbeaf",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000001",
            },
            {
              "address": "0x79426a1c24b2978d90d7a5070a46c65b07bc4299",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "key": "0x6cb566158d39ce882c18d59584646aeb55a2f9585b27af1d635f5ea325cfbeaf",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000001",
            },
          ],
          "soltype": {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false,
            "name": "_queuedTransactions",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (bytes32 => bool)",
          },
        },
        {
          "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
          "dirty": {
            "0x4da27a545c0c5b758a6ba100e3a049001de870f5": {
              "0x4da27a545c0c5b758a6ba100e3a049001de870f5": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            },
          },
          "original": {
            "0x4da27a545c0c5b758a6ba100e3a049001de870f5": {
              "0x4da27a545c0c5b758a6ba100e3a049001de870f5": "0",
            },
          },
          "raw": [
            {
              "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
              "dirty": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
              "key": "0x6b10b271c83e13bfb156269bdf3ef636613d1542d8235a1f5293a89c8f8a5431",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
            {
              "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
              "dirty": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
              "key": "0x6b10b271c83e13bfb156269bdf3ef636613d1542d8235a1f5293a89c8f8a5431",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
            {
              "address": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
              "dirty": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
              "key": "0x6b10b271c83e13bfb156269bdf3ef636613d1542d8235a1f5293a89c8f8a5431",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": {
            "components": null,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "name": "_allowances",
            "offset": 0,
            "storage_location": "storage",
            "type": "mapping (address => mapping (address => uint256))",
          },
        },
        {
          "address": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
          "dirty": null,
          "original": null,
          "raw": [
            {
              "address": "0xaa9faa887bce5182c39f68ac46c43f36723c395b",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000005",
              "key": "0x0000000000000000000000000000000000000000000000000000000000000009",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
            },
          ],
          "soltype": null,
        },
        {
          "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
          "dirty": {
            "\\"214\\"": {
              "againstVotes": null,
              "calldatas": null,
              "canceled": false,
              "creator": "0x0000000000000000000000000000000000000000",
              "endBlock": null,
              "executed": true,
              "executionTime": null,
              "executor": "0x0000000000000000000000000000000000000000",
              "forVotes": null,
              "id": null,
              "ipfsHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "signatures": null,
              "startBlock": null,
              "strategy": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
              "targets": null,
              "values": null,
              "votes": null,
              "withDelegatecalls": null,
            },
          },
          "original": {
            "\\"214\\"": {
              "againstVotes": null,
              "calldatas": null,
              "canceled": false,
              "creator": "0x0000000000000000000000000000000000000000",
              "endBlock": null,
              "executed": false,
              "executionTime": null,
              "executor": "0x0000000000000000000000000000000000000000",
              "forVotes": null,
              "id": null,
              "ipfsHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "signatures": null,
              "startBlock": null,
              "strategy": "0xb7e383ef9b1e9189fc0f71fb30af8aa14377429e",
              "targets": null,
              "values": null,
              "votes": null,
              "withDelegatecalls": null,
            },
          },
          "raw": [
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
            {
              "address": "0xec568fffba86c094cf06b22134b23074dfe2252c",
              "dirty": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0001",
              "key": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
              "original": "0x00000000000000000000b7e383ef9b1e9189fc0f71fb30af8aa14377429e0000",
            },
          ],
          "soltype": {
            "components": [
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d90",
                "indexed": false,
                "name": "id",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d91",
                "indexed": false,
                "name": "creator",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "memory",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d92",
                "indexed": false,
                "name": "executor",
                "offset": 0,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "memory",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d93",
                "indexed": false,
                "name": "targets",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "address",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "address[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d94",
                "indexed": false,
                "name": "values",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "uint",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "uint256[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d95",
                "indexed": false,
                "name": "signatures",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "string",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "string[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d96",
                "indexed": false,
                "name": "calldatas",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "bytes",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "bytes[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d97",
                "indexed": false,
                "name": "withDelegatecalls",
                "offset": 0,
                "simple_type": {
                  "nested_type": {
                    "type": "bool",
                  },
                  "type": "slice",
                },
                "storage_location": "memory",
                "type": "bool[]",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d98",
                "indexed": false,
                "name": "startBlock",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d99",
                "indexed": false,
                "name": "endBlock",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9a",
                "indexed": false,
                "name": "executionTime",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9b",
                "indexed": false,
                "name": "forVotes",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9c",
                "indexed": false,
                "name": "againstVotes",
                "offset": 0,
                "simple_type": {
                  "type": "uint",
                },
                "storage_location": "memory",
                "type": "uint256",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "indexed": false,
                "name": "executed",
                "offset": 0,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "memory",
                "type": "bool",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "indexed": false,
                "name": "canceled",
                "offset": 8,
                "simple_type": {
                  "type": "bool",
                },
                "storage_location": "memory",
                "type": "bool",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9d",
                "indexed": false,
                "name": "strategy",
                "offset": 16,
                "simple_type": {
                  "type": "address",
                },
                "storage_location": "memory",
                "type": "address",
              },
              {
                "components": null,
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9e",
                "indexed": false,
                "name": "ipfsHash",
                "offset": 0,
                "simple_type": {
                  "type": "bytes",
                },
                "storage_location": "memory",
                "type": "bytes32",
              },
              {
                "components": [
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "support",
                    "offset": 0,
                    "simple_type": {
                      "type": "bool",
                    },
                    "storage_location": "memory",
                    "type": "bool",
                  },
                  {
                    "components": null,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "name": "votingPower",
                    "offset": 8,
                    "simple_type": {
                      "type": "uint",
                    },
                    "storage_location": "memory",
                    "type": "uint248",
                  },
                ],
                "index": "0x38a10c292d805be5cf7271204d5112d7b0eed62bf446a85261ba29ea68560d9f",
                "indexed": false,
                "name": "votes",
                "offset": 0,
                "storage_location": "memory",
                "type": "mapping (address => tuple)",
              },
            ],
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "name": "_proposals",
            "offset": 0,
            "storage_location": "memory",
            "type": "mapping (uint256 => tuple)",
          },
        },
      ],
      "transaction_id": "0xa8599ff6883b67a280f95003a575de6da10369fd0e99fa735d5497834cf084e3",
    },
    "value": "0x",
  },
}
`;
